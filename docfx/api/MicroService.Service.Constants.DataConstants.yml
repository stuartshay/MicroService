### YamlMime:ManagedReference
items:
- uid: MicroService.Service.Constants.DataConstants
  commentId: T:MicroService.Service.Constants.DataConstants
  id: DataConstants
  parent: MicroService.Service.Constants
  children:
  - MicroService.Service.Constants.DataConstants.ExcelPercentile
  - MicroService.Service.Constants.DataConstants.PercentilePrecision
  langs:
  - csharp
  - vb
  name: DataConstants
  nameWithType: DataConstants
  fullName: MicroService.Service.Constants.DataConstants
  type: Class
  source:
    remote:
      path: src/MicroService.Service/Constants/DataConstants.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: DataConstants
    path: ../src/MicroService.Service/Constants/DataConstants.cs
    startLine: 5
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Constants
  summary: "\nData Business Rules Constants\n"
  example: []
  syntax:
    content: public static class DataConstants
    content.vb: Public Module DataConstants
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MicroService.Service.Constants.DataConstants.PercentilePrecision
  commentId: F:MicroService.Service.Constants.DataConstants.PercentilePrecision
  id: PercentilePrecision
  parent: MicroService.Service.Constants.DataConstants
  langs:
  - csharp
  - vb
  name: PercentilePrecision
  nameWithType: DataConstants.PercentilePrecision
  fullName: MicroService.Service.Constants.DataConstants.PercentilePrecision
  type: Field
  source:
    remote:
      path: src/MicroService.Service/Constants/DataConstants.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: PercentilePrecision
    path: ../src/MicroService.Service/Constants/DataConstants.cs
    startLine: 10
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Constants
  summary: "\nPercentile Data Precision (16 Decimal Places).\n"
  example: []
  syntax:
    content: public const int PercentilePrecision = 15
    return:
      type: System.Int32
    content.vb: Public Const PercentilePrecision As Integer = 15
- uid: MicroService.Service.Constants.DataConstants.ExcelPercentile
  commentId: F:MicroService.Service.Constants.DataConstants.ExcelPercentile
  id: ExcelPercentile
  parent: MicroService.Service.Constants.DataConstants
  langs:
  - csharp
  - vb
  name: ExcelPercentile
  nameWithType: DataConstants.ExcelPercentile
  fullName: MicroService.Service.Constants.DataConstants.ExcelPercentile
  type: Field
  source:
    remote:
      path: src/MicroService.Service/Constants/DataConstants.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: ExcelPercentile
    path: ../src/MicroService.Service/Constants/DataConstants.cs
    startLine: 15
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Constants
  summary: "\nExcel Percentile\n"
  example: []
  syntax:
    content: public const double ExcelPercentile = 0.995
    return:
      type: System.Double
    content.vb: Public Const ExcelPercentile As Double = 0.995
references:
- uid: MicroService.Service.Constants
  commentId: N:MicroService.Service.Constants
  name: MicroService.Service.Constants
  nameWithType: MicroService.Service.Constants
  fullName: MicroService.Service.Constants
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Constants
    name: Constants
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Constants
    name: Constants
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
