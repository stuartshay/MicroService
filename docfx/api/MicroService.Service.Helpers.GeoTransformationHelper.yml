### YamlMime:ManagedReference
items:
- uid: MicroService.Service.Helpers.GeoTransformationHelper
  commentId: T:MicroService.Service.Helpers.GeoTransformationHelper
  id: GeoTransformationHelper
  parent: MicroService.Service.Helpers
  children:
  - MicroService.Service.Helpers.GeoTransformationHelper.ConvertNad83ToWgs84(System.Double[])
  - MicroService.Service.Helpers.GeoTransformationHelper.ConvertNad83ToWgs84(System.Nullable{System.Double},System.Nullable{System.Double})
  - MicroService.Service.Helpers.GeoTransformationHelper.ConvertWgs84ToNad83(System.Double[])
  - MicroService.Service.Helpers.GeoTransformationHelper.ConvertWgs84ToNad83(System.Nullable{System.Double},System.Nullable{System.Double})
  - MicroService.Service.Helpers.GeoTransformationHelper.TransformGeometry(NetTopologySuite.Geometries.Geometry,MicroService.Service.Models.Enum.Attributes.Datum,MicroService.Service.Models.Enum.Attributes.Datum)
  langs:
  - csharp
  - vb
  name: GeoTransformationHelper
  nameWithType: GeoTransformationHelper
  fullName: MicroService.Service.Helpers.GeoTransformationHelper
  type: Class
  source:
    remote:
      path: src/MicroService.Service/Helpers/GeoTransformationHelper.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: GeoTransformationHelper
    path: ../src/MicroService.Service/Helpers/GeoTransformationHelper.cs
    startLine: 8
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Helpers
  syntax:
    content: public static class GeoTransformationHelper
    content.vb: Public Module GeoTransformationHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MicroService.Service.Helpers.GeoTransformationHelper.ConvertNad83ToWgs84(System.Nullable{System.Double},System.Nullable{System.Double})
  commentId: M:MicroService.Service.Helpers.GeoTransformationHelper.ConvertNad83ToWgs84(System.Nullable{System.Double},System.Nullable{System.Double})
  id: ConvertNad83ToWgs84(System.Nullable{System.Double},System.Nullable{System.Double})
  parent: MicroService.Service.Helpers.GeoTransformationHelper
  langs:
  - csharp
  - vb
  name: ConvertNad83ToWgs84(double?, double?)
  nameWithType: GeoTransformationHelper.ConvertNad83ToWgs84(double?, double?)
  fullName: MicroService.Service.Helpers.GeoTransformationHelper.ConvertNad83ToWgs84(double?, double?)
  type: Method
  source:
    remote:
      path: src/MicroService.Service/Helpers/GeoTransformationHelper.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: ConvertNad83ToWgs84
    path: ../src/MicroService.Service/Helpers/GeoTransformationHelper.cs
    startLine: 21
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Helpers
  summary: "\nConvert NAD83 to WGS84\nhttps://spatialreference.org/ref/epsg/nad83-new-york-long-island-ftus/\nErsi WKT\nhttps://spatialreference.org/ref/epsg/nad83-new-york-long-island-ftus/esriwkt/\n"
  example: []
  syntax:
    content: public static (double? Longitude, double? Latitude) ConvertNad83ToWgs84(double? x, double? y)
    parameters:
    - id: x
      type: System.Nullable{System.Double}
      description: ''
    - id: y
      type: System.Nullable{System.Double}
      description: ''
    return:
      type: System.ValueTuple{System.Nullable{System.Double},System.Nullable{System.Double}}
      description: ''
    content.vb: Public Shared Function ConvertNad83ToWgs84(x As Double?, y As Double?) As (Longitude As Double?, Latitude As Double?)
  overload: MicroService.Service.Helpers.GeoTransformationHelper.ConvertNad83ToWgs84*
  nameWithType.vb: GeoTransformationHelper.ConvertNad83ToWgs84(Double?, Double?)
  fullName.vb: MicroService.Service.Helpers.GeoTransformationHelper.ConvertNad83ToWgs84(Double?, Double?)
  name.vb: ConvertNad83ToWgs84(Double?, Double?)
- uid: MicroService.Service.Helpers.GeoTransformationHelper.ConvertNad83ToWgs84(System.Double[])
  commentId: M:MicroService.Service.Helpers.GeoTransformationHelper.ConvertNad83ToWgs84(System.Double[])
  id: ConvertNad83ToWgs84(System.Double[])
  parent: MicroService.Service.Helpers.GeoTransformationHelper
  langs:
  - csharp
  - vb
  name: ConvertNad83ToWgs84(double[])
  nameWithType: GeoTransformationHelper.ConvertNad83ToWgs84(double[])
  fullName: MicroService.Service.Helpers.GeoTransformationHelper.ConvertNad83ToWgs84(double[])
  type: Method
  source:
    remote:
      path: src/MicroService.Service/Helpers/GeoTransformationHelper.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: ConvertNad83ToWgs84
    path: ../src/MicroService.Service/Helpers/GeoTransformationHelper.cs
    startLine: 38
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Helpers
  syntax:
    content: public static double[] ConvertNad83ToWgs84(double[] xy)
    parameters:
    - id: xy
      type: System.Double[]
    return:
      type: System.Double[]
    content.vb: Public Shared Function ConvertNad83ToWgs84(xy As Double()) As Double()
  overload: MicroService.Service.Helpers.GeoTransformationHelper.ConvertNad83ToWgs84*
  nameWithType.vb: GeoTransformationHelper.ConvertNad83ToWgs84(Double())
  fullName.vb: MicroService.Service.Helpers.GeoTransformationHelper.ConvertNad83ToWgs84(Double())
  name.vb: ConvertNad83ToWgs84(Double())
- uid: MicroService.Service.Helpers.GeoTransformationHelper.ConvertWgs84ToNad83(System.Nullable{System.Double},System.Nullable{System.Double})
  commentId: M:MicroService.Service.Helpers.GeoTransformationHelper.ConvertWgs84ToNad83(System.Nullable{System.Double},System.Nullable{System.Double})
  id: ConvertWgs84ToNad83(System.Nullable{System.Double},System.Nullable{System.Double})
  parent: MicroService.Service.Helpers.GeoTransformationHelper
  langs:
  - csharp
  - vb
  name: ConvertWgs84ToNad83(double?, double?)
  nameWithType: GeoTransformationHelper.ConvertWgs84ToNad83(double?, double?)
  fullName: MicroService.Service.Helpers.GeoTransformationHelper.ConvertWgs84ToNad83(double?, double?)
  type: Method
  source:
    remote:
      path: src/MicroService.Service/Helpers/GeoTransformationHelper.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: ConvertWgs84ToNad83
    path: ../src/MicroService.Service/Helpers/GeoTransformationHelper.cs
    startLine: 61
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Helpers
  summary: "\nConvert NAD83 to WGS84\n"
  example: []
  syntax:
    content: public static (double? X, double? Y) ConvertWgs84ToNad83(double? latitude, double? longitude)
    parameters:
    - id: latitude
      type: System.Nullable{System.Double}
      description: ''
    - id: longitude
      type: System.Nullable{System.Double}
      description: ''
    return:
      type: System.ValueTuple{System.Nullable{System.Double},System.Nullable{System.Double}}
      description: ''
    content.vb: Public Shared Function ConvertWgs84ToNad83(latitude As Double?, longitude As Double?) As (X As Double?, Y As Double?)
  overload: MicroService.Service.Helpers.GeoTransformationHelper.ConvertWgs84ToNad83*
  nameWithType.vb: GeoTransformationHelper.ConvertWgs84ToNad83(Double?, Double?)
  fullName.vb: MicroService.Service.Helpers.GeoTransformationHelper.ConvertWgs84ToNad83(Double?, Double?)
  name.vb: ConvertWgs84ToNad83(Double?, Double?)
- uid: MicroService.Service.Helpers.GeoTransformationHelper.ConvertWgs84ToNad83(System.Double[])
  commentId: M:MicroService.Service.Helpers.GeoTransformationHelper.ConvertWgs84ToNad83(System.Double[])
  id: ConvertWgs84ToNad83(System.Double[])
  parent: MicroService.Service.Helpers.GeoTransformationHelper
  langs:
  - csharp
  - vb
  name: ConvertWgs84ToNad83(double[])
  nameWithType: GeoTransformationHelper.ConvertWgs84ToNad83(double[])
  fullName: MicroService.Service.Helpers.GeoTransformationHelper.ConvertWgs84ToNad83(double[])
  type: Method
  source:
    remote:
      path: src/MicroService.Service/Helpers/GeoTransformationHelper.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: ConvertWgs84ToNad83
    path: ../src/MicroService.Service/Helpers/GeoTransformationHelper.cs
    startLine: 77
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Helpers
  syntax:
    content: public static double[] ConvertWgs84ToNad83(double[] point)
    parameters:
    - id: point
      type: System.Double[]
    return:
      type: System.Double[]
    content.vb: Public Shared Function ConvertWgs84ToNad83(point As Double()) As Double()
  overload: MicroService.Service.Helpers.GeoTransformationHelper.ConvertWgs84ToNad83*
  nameWithType.vb: GeoTransformationHelper.ConvertWgs84ToNad83(Double())
  fullName.vb: MicroService.Service.Helpers.GeoTransformationHelper.ConvertWgs84ToNad83(Double())
  name.vb: ConvertWgs84ToNad83(Double())
- uid: MicroService.Service.Helpers.GeoTransformationHelper.TransformGeometry(NetTopologySuite.Geometries.Geometry,MicroService.Service.Models.Enum.Attributes.Datum,MicroService.Service.Models.Enum.Attributes.Datum)
  commentId: M:MicroService.Service.Helpers.GeoTransformationHelper.TransformGeometry(NetTopologySuite.Geometries.Geometry,MicroService.Service.Models.Enum.Attributes.Datum,MicroService.Service.Models.Enum.Attributes.Datum)
  id: TransformGeometry(NetTopologySuite.Geometries.Geometry,MicroService.Service.Models.Enum.Attributes.Datum,MicroService.Service.Models.Enum.Attributes.Datum)
  parent: MicroService.Service.Helpers.GeoTransformationHelper
  langs:
  - csharp
  - vb
  name: TransformGeometry(Geometry, Datum, Datum)
  nameWithType: GeoTransformationHelper.TransformGeometry(Geometry, Datum, Datum)
  fullName: MicroService.Service.Helpers.GeoTransformationHelper.TransformGeometry(NetTopologySuite.Geometries.Geometry, MicroService.Service.Models.Enum.Attributes.Datum, MicroService.Service.Models.Enum.Attributes.Datum)
  type: Method
  source:
    remote:
      path: src/MicroService.Service/Helpers/GeoTransformationHelper.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: TransformGeometry
    path: ../src/MicroService.Service/Helpers/GeoTransformationHelper.cs
    startLine: 93
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Helpers
  syntax:
    content: public static Geometry TransformGeometry(Geometry geometry, Datum fromDatum, Datum toDatum)
    parameters:
    - id: geometry
      type: NetTopologySuite.Geometries.Geometry
    - id: fromDatum
      type: MicroService.Service.Models.Enum.Attributes.Datum
    - id: toDatum
      type: MicroService.Service.Models.Enum.Attributes.Datum
    return:
      type: NetTopologySuite.Geometries.Geometry
    content.vb: Public Shared Function TransformGeometry(geometry As Geometry, fromDatum As Datum, toDatum As Datum) As Geometry
  overload: MicroService.Service.Helpers.GeoTransformationHelper.TransformGeometry*
references:
- uid: MicroService.Service.Helpers
  commentId: N:MicroService.Service.Helpers
  name: MicroService.Service.Helpers
  nameWithType: MicroService.Service.Helpers
  fullName: MicroService.Service.Helpers
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MicroService.Service.Helpers.GeoTransformationHelper.ConvertNad83ToWgs84*
  commentId: Overload:MicroService.Service.Helpers.GeoTransformationHelper.ConvertNad83ToWgs84
  name: ConvertNad83ToWgs84
  nameWithType: GeoTransformationHelper.ConvertNad83ToWgs84
  fullName: MicroService.Service.Helpers.GeoTransformationHelper.ConvertNad83ToWgs84
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: double?
  nameWithType: double?
  fullName: double?
  nameWithType.vb: Double?
  fullName.vb: Double?
  name.vb: Double?
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
  - name: '?'
- uid: System.ValueTuple{System.Nullable{System.Double},System.Nullable{System.Double}}
  commentId: T:System.ValueTuple{System.Nullable{System.Double},System.Nullable{System.Double}}
  parent: System
  definition: System.ValueTuple`2
  name: (double? Longitude, double? Latitude)
  nameWithType: (double? Longitude, double? Latitude)
  fullName: (double? Longitude, double? Latitude)
  nameWithType.vb: (Longitude As Double?, Latitude As Double?)
  fullName.vb: (Longitude As Double?, Latitude As Double?)
  name.vb: (Longitude As Double?, Latitude As Double?)
  spec.csharp:
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
  - name: '?'
  - name: " "
  - uid: System.ValueTuple{System.Nullable{System.Double},System.Nullable{System.Double}}.Longitude
    name: Longitude
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
  - name: '?'
  - name: " "
  - uid: System.ValueTuple{System.Nullable{System.Double},System.Nullable{System.Double}}.Latitude
    name: Latitude
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Nullable{System.Double},System.Nullable{System.Double}}.Longitude
    name: Longitude
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Nullable{System.Double},System.Nullable{System.Double}}.Latitude
    name: Latitude
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
  - name: '?'
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.Double[]
  isExternal: true
  name: double[]
  nameWithType: double[]
  fullName: double[]
  nameWithType.vb: Double()
  fullName.vb: Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
  - name: (
  - name: )
- uid: MicroService.Service.Helpers.GeoTransformationHelper.ConvertWgs84ToNad83*
  commentId: Overload:MicroService.Service.Helpers.GeoTransformationHelper.ConvertWgs84ToNad83
  name: ConvertWgs84ToNad83
  nameWithType: GeoTransformationHelper.ConvertWgs84ToNad83
  fullName: MicroService.Service.Helpers.GeoTransformationHelper.ConvertWgs84ToNad83
- uid: MicroService.Service.Helpers.GeoTransformationHelper.TransformGeometry*
  commentId: Overload:MicroService.Service.Helpers.GeoTransformationHelper.TransformGeometry
  name: TransformGeometry
  nameWithType: GeoTransformationHelper.TransformGeometry
  fullName: MicroService.Service.Helpers.GeoTransformationHelper.TransformGeometry
- uid: NetTopologySuite.Geometries.Geometry
  commentId: T:NetTopologySuite.Geometries.Geometry
  parent: NetTopologySuite.Geometries
  isExternal: true
  name: Geometry
  nameWithType: Geometry
  fullName: NetTopologySuite.Geometries.Geometry
- uid: MicroService.Service.Models.Enum.Attributes.Datum
  commentId: T:MicroService.Service.Models.Enum.Attributes.Datum
  parent: MicroService.Service.Models.Enum.Attributes
  name: Datum
  nameWithType: Datum
  fullName: MicroService.Service.Models.Enum.Attributes.Datum
- uid: NetTopologySuite.Geometries
  commentId: N:NetTopologySuite.Geometries
  isExternal: true
  name: NetTopologySuite.Geometries
  nameWithType: NetTopologySuite.Geometries
  fullName: NetTopologySuite.Geometries
  spec.csharp:
  - uid: NetTopologySuite
    name: NetTopologySuite
    isExternal: true
  - name: .
  - uid: NetTopologySuite.Geometries
    name: Geometries
    isExternal: true
  spec.vb:
  - uid: NetTopologySuite
    name: NetTopologySuite
    isExternal: true
  - name: .
  - uid: NetTopologySuite.Geometries
    name: Geometries
    isExternal: true
- uid: MicroService.Service.Models.Enum.Attributes
  commentId: N:MicroService.Service.Models.Enum.Attributes
  name: MicroService.Service.Models.Enum.Attributes
  nameWithType: MicroService.Service.Models.Enum.Attributes
  fullName: MicroService.Service.Models.Enum.Attributes
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Models
    name: Models
  - name: .
  - uid: MicroService.Service.Models.Enum
    name: Enum
  - name: .
  - uid: MicroService.Service.Models.Enum.Attributes
    name: Attributes
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Models
    name: Models
  - name: .
  - uid: MicroService.Service.Models.Enum
    name: Enum
  - name: .
  - uid: MicroService.Service.Models.Enum.Attributes
    name: Attributes
