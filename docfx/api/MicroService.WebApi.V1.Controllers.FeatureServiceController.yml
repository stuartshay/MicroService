### YamlMime:ManagedReference
items:
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController
  commentId: T:MicroService.WebApi.V1.Controllers.FeatureServiceController
  id: FeatureServiceController
  parent: MicroService.WebApi.V1.Controllers
  children:
  - MicroService.WebApi.V1.Controllers.FeatureServiceController.#ctor(ShapeServiceResolver,Microsoft.Extensions.Logging.ILogger{MicroService.WebApi.V1.Controllers.FeatureServiceController})
  - MicroService.WebApi.V1.Controllers.FeatureServiceController.FeatureAttributeValidation``1(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel,System.Func{MicroService.Service.Interfaces.IShapeService{MicroService.Service.Models.Base.ShapeBase},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{``0}})
  - MicroService.WebApi.V1.Controllers.FeatureServiceController.Get
  - MicroService.WebApi.V1.Controllers.FeatureServiceController.GetAttributeLookup(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel)
  - MicroService.WebApi.V1.Controllers.FeatureServiceController.GetFeatureList(MicroService.WebApi.Models.FeatureAttributeRequestModel)
  - MicroService.WebApi.V1.Controllers.FeatureServiceController.GetGeospatialLookup(MicroService.WebApi.Models.FeatureRequestModel)
  - MicroService.WebApi.V1.Controllers.FeatureServiceController.GetLookupFeatureGeoJson(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel)
  - MicroService.WebApi.V1.Controllers.FeatureServiceController.GetShapeProperties(System.String)
  langs:
  - csharp
  - vb
  name: FeatureServiceController
  nameWithType: FeatureServiceController
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController
  type: Class
  source:
    remote:
      path: src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: FeatureServiceController
    path: ../src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
    startLine: 19
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.V1.Controllers
  summary: "\nFeature Service Controller\n"
  example: []
  syntax:
    content: >-
      [ApiController]

      [ApiVersion("1.0")]

      [ApiVersion("2.0")]

      [ApiVersion("3.0")]

      [Route("api/v{version:apiVersion}/[controller]")]

      [EnableCors("Policy")]

      public class FeatureServiceController : ControllerBase
    content.vb: >-
      <ApiController>

      <ApiVersion("1.0")>

      <ApiVersion("2.0")>

      <ApiVersion("3.0")>

      <Route("api/v{version:apiVersion}/[controller]")>

      <EnableCors("Policy")>

      Public Class FeatureServiceController Inherits ControllerBase
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Mvc.ControllerBase
  inheritedMembers:
  - Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)
  - Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  - Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
  - Microsoft.AspNetCore.Mvc.ControllerBase.Ok
  - Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String,System.String,System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String,System.String,System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String,System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String,System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String,System.String,System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String,System.String,System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
  - Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
  - Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
  - Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
  - Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
  - Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails)
  - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
  - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
  - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
  - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
  - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal)
  - Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  - Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.SignOut
  - Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  - Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel})
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
  - Microsoft.AspNetCore.Mvc.ControllerBase.Request
  - Microsoft.AspNetCore.Mvc.ControllerBase.Response
  - Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
  - Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
  - Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
  - Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
  - Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
  - Microsoft.AspNetCore.Mvc.ControllerBase.Url
  - Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
  - Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory
  - Microsoft.AspNetCore.Mvc.ControllerBase.User
  - Microsoft.AspNetCore.Mvc.ControllerBase.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - MicroService.WebApi.V1.Controllers.FeatureServiceController.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
  attributes:
  - type: Microsoft.AspNetCore.Mvc.ApiControllerAttribute
    ctor: Microsoft.AspNetCore.Mvc.ApiControllerAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Mvc.ApiVersionAttribute
    ctor: Microsoft.AspNetCore.Mvc.ApiVersionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: "1.0"
  - type: Microsoft.AspNetCore.Mvc.ApiVersionAttribute
    ctor: Microsoft.AspNetCore.Mvc.ApiVersionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: "2.0"
  - type: Microsoft.AspNetCore.Mvc.ApiVersionAttribute
    ctor: Microsoft.AspNetCore.Mvc.ApiVersionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: "3.0"
  - type: Microsoft.AspNetCore.Mvc.RouteAttribute
    ctor: Microsoft.AspNetCore.Mvc.RouteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: api/v{version:apiVersion}/[controller]
  - type: Microsoft.AspNetCore.Cors.EnableCorsAttribute
    ctor: Microsoft.AspNetCore.Cors.EnableCorsAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Policy
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.#ctor(ShapeServiceResolver,Microsoft.Extensions.Logging.ILogger{MicroService.WebApi.V1.Controllers.FeatureServiceController})
  commentId: M:MicroService.WebApi.V1.Controllers.FeatureServiceController.#ctor(ShapeServiceResolver,Microsoft.Extensions.Logging.ILogger{MicroService.WebApi.V1.Controllers.FeatureServiceController})
  id: '#ctor(ShapeServiceResolver,Microsoft.Extensions.Logging.ILogger{MicroService.WebApi.V1.Controllers.FeatureServiceController})'
  parent: MicroService.WebApi.V1.Controllers.FeatureServiceController
  langs:
  - csharp
  - vb
  name: FeatureServiceController(ShapeServiceResolver?, ILogger<FeatureServiceController>)
  nameWithType: FeatureServiceController.FeatureServiceController(ShapeServiceResolver?, ILogger<FeatureServiceController>)
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.FeatureServiceController(ShapeServiceResolver?, Microsoft.Extensions.Logging.ILogger<MicroService.WebApi.V1.Controllers.FeatureServiceController>)
  type: Constructor
  source:
    remote:
      path: src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: .ctor
    path: ../src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
    startLine: 36
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.V1.Controllers
  summary: "\nInitializes a new instance of the <xref href=\"MicroService.WebApi.V1.Controllers.FeatureServiceController\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public FeatureServiceController(ShapeServiceResolver? shapeServiceResolver, ILogger<FeatureServiceController> logger)
    parameters:
    - id: shapeServiceResolver
      type: ShapeServiceResolver
      description: ''
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{MicroService.WebApi.V1.Controllers.FeatureServiceController}
      description: ''
    content.vb: Public Sub New(shapeServiceResolver As ShapeServiceResolver, logger As ILogger(Of FeatureServiceController))
  overload: MicroService.WebApi.V1.Controllers.FeatureServiceController.#ctor*
  nameWithType.vb: FeatureServiceController.New(ShapeServiceResolver, ILogger(Of FeatureServiceController))
  fullName.vb: MicroService.WebApi.V1.Controllers.FeatureServiceController.New(ShapeServiceResolver, Microsoft.Extensions.Logging.ILogger(Of MicroService.WebApi.V1.Controllers.FeatureServiceController))
  name.vb: New(ShapeServiceResolver, ILogger(Of FeatureServiceController))
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.Get
  commentId: M:MicroService.WebApi.V1.Controllers.FeatureServiceController.Get
  id: Get
  parent: MicroService.WebApi.V1.Controllers.FeatureServiceController
  langs:
  - csharp
  - vb
  name: Get()
  nameWithType: FeatureServiceController.Get()
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.Get()
  type: Method
  source:
    remote:
      path: src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: Get
    path: ../src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
    startLine: 46
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.V1.Controllers
  summary: "\nGet Available Shapes\n"
  example: []
  syntax:
    content: >-
      [HttpGet]

      [Produces("application/json", new string[] { }, Type = typeof(IEnumerable<string>))]

      [ProducesResponseType(typeof(IEnumerable<string>), 200)]

      public ActionResult<object> Get()
    return:
      type: Microsoft.AspNetCore.Mvc.ActionResult{System.Object}
      description: ''
    content.vb: >-
      <HttpGet>

      <Produces("application/json", New String() { }, Type:=GetType(IEnumerable(Of String)))>

      <ProducesResponseType(GetType(IEnumerable(Of String)), 200)>

      Public Function [Get]() As ActionResult(Of Object)
  overload: MicroService.WebApi.V1.Controllers.FeatureServiceController.Get*
  attributes:
  - type: Microsoft.AspNetCore.Mvc.HttpGetAttribute
    ctor: Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Type,System.Int32)
    arguments:
    - type: System.Type
      value: System.Collections.Generic.IEnumerable{System.String}
    - type: System.Int32
      value: 200
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetShapeProperties(System.String)
  commentId: M:MicroService.WebApi.V1.Controllers.FeatureServiceController.GetShapeProperties(System.String)
  id: GetShapeProperties(System.String)
  parent: MicroService.WebApi.V1.Controllers.FeatureServiceController
  langs:
  - csharp
  - vb
  name: GetShapeProperties(string)
  nameWithType: FeatureServiceController.GetShapeProperties(string)
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetShapeProperties(string)
  type: Method
  source:
    remote:
      path: src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: GetShapeProperties
    path: ../src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
    startLine: 73
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.V1.Controllers
  summary: "\nGet Shape Attributes\n"
  remarks: "\nAttribute List of Shape\n"
  example: []
  syntax:
    content: >-
      [HttpGet("{id}", Name = "GetShapeProperties")]

      [Produces("application/json", new string[] { })]

      [ProducesResponseType(200)]

      [ProducesResponseType(404)]

      public ActionResult<object> GetShapeProperties(string id = "NationalRegisterHistoricPlaces")
    parameters:
    - id: id
      type: System.String
      description: Shape Id
    return:
      type: Microsoft.AspNetCore.Mvc.ActionResult{System.Object}
      description: 'Attribute List of Shape '
    content.vb: >-
      <HttpGet("{id}", Name:="GetShapeProperties")>

      <Produces("application/json", New String() { })>

      <ProducesResponseType(200)>

      <ProducesResponseType(404)>

      Public Function GetShapeProperties(id As String = "NationalRegisterHistoricPlaces") As ActionResult(Of Object)
  overload: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetShapeProperties*
  attributes:
  - type: Microsoft.AspNetCore.Mvc.HttpGetAttribute
    ctor: Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '{id}'
    namedArguments:
    - name: Name
      type: System.String
      value: GetShapeProperties
  - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 200
  - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 404
  nameWithType.vb: FeatureServiceController.GetShapeProperties(String)
  fullName.vb: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetShapeProperties(String)
  name.vb: GetShapeProperties(String)
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetFeatureList(MicroService.WebApi.Models.FeatureAttributeRequestModel)
  commentId: M:MicroService.WebApi.V1.Controllers.FeatureServiceController.GetFeatureList(MicroService.WebApi.Models.FeatureAttributeRequestModel)
  id: GetFeatureList(MicroService.WebApi.Models.FeatureAttributeRequestModel)
  parent: MicroService.WebApi.V1.Controllers.FeatureServiceController
  langs:
  - csharp
  - vb
  name: GetFeatureList(FeatureAttributeRequestModel)
  nameWithType: FeatureServiceController.GetFeatureList(FeatureAttributeRequestModel)
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetFeatureList(MicroService.WebApi.Models.FeatureAttributeRequestModel)
  type: Method
  source:
    remote:
      path: src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: GetFeatureList
    path: ../src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
    startLine: 116
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.V1.Controllers
  summary: "\nGet Feature Collection\n"
  remarks: "\nList of features with attributes \n"
  example: []
  syntax:
    content: >-
      [HttpGet("featureList", Name = "GetFeatureList")]

      [Produces("application/json", new string[] { }, Type = typeof(ShapeBase))]

      [ProducesResponseType(typeof(IEnumerable<ShapeBase>), 200)]

      [ProducesResponseType(400)]

      [ProducesResponseType(404)]

      public Task<ActionResult<object>> GetFeatureList(FeatureAttributeRequestModel request)
    parameters:
    - id: request
      type: MicroService.WebApi.Models.FeatureAttributeRequestModel
      description: Feature Attribute Request
      attributes:
      - type: Microsoft.AspNetCore.Mvc.FromQueryAttribute
        ctor: Microsoft.AspNetCore.Mvc.FromQueryAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult{System.Object}}
      description: List of features with attributes
    content.vb: >-
      <HttpGet("featureList", Name:="GetFeatureList")>

      <Produces("application/json", New String() { }, Type:=GetType(ShapeBase))>

      <ProducesResponseType(GetType(IEnumerable(Of ShapeBase)), 200)>

      <ProducesResponseType(400)>

      <ProducesResponseType(404)>

      Public Function GetFeatureList(request As FeatureAttributeRequestModel) As Task(Of ActionResult(Of Object))
  overload: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetFeatureList*
  attributes:
  - type: Microsoft.AspNetCore.Mvc.HttpGetAttribute
    ctor: Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: featureList
    namedArguments:
    - name: Name
      type: System.String
      value: GetFeatureList
  - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Type,System.Int32)
    arguments:
    - type: System.Type
      value: System.Collections.Generic.IEnumerable{MicroService.Service.Models.Base.ShapeBase}
    - type: System.Int32
      value: 200
  - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 400
  - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 404
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetGeospatialLookup(MicroService.WebApi.Models.FeatureRequestModel)
  commentId: M:MicroService.WebApi.V1.Controllers.FeatureServiceController.GetGeospatialLookup(MicroService.WebApi.Models.FeatureRequestModel)
  id: GetGeospatialLookup(MicroService.WebApi.Models.FeatureRequestModel)
  parent: MicroService.WebApi.V1.Controllers.FeatureServiceController
  langs:
  - csharp
  - vb
  name: GetGeospatialLookup(FeatureRequestModel)
  nameWithType: FeatureServiceController.GetGeospatialLookup(FeatureRequestModel)
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetGeospatialLookup(MicroService.WebApi.Models.FeatureRequestModel)
  type: Method
  source:
    remote:
      path: src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: GetGeospatialLookup
    path: ../src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
    startLine: 135
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.V1.Controllers
  summary: "\nGet Geospatial Feature Lookup\n"
  example: []
  syntax:
    content: >-
      [HttpGet("geospatiallookup", Name = "GetGeospatialLookup")]

      [Produces("application/json", new string[] { }, Type = typeof(ShapeBase))]

      [ProducesResponseType(typeof(ShapeBase), 200)]

      [ProducesResponseType(400)]

      [ProducesResponseType(404)]

      public Task<ActionResult<object>> GetGeospatialLookup(FeatureRequestModel request)
    parameters:
    - id: request
      type: MicroService.WebApi.Models.FeatureRequestModel
      description: Feature Request
      attributes:
      - type: Microsoft.AspNetCore.Mvc.FromQueryAttribute
        ctor: Microsoft.AspNetCore.Mvc.FromQueryAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult{System.Object}}
      description: ''
    content.vb: >-
      <HttpGet("geospatiallookup", Name:="GetGeospatialLookup")>

      <Produces("application/json", New String() { }, Type:=GetType(ShapeBase))>

      <ProducesResponseType(GetType(ShapeBase), 200)>

      <ProducesResponseType(400)>

      <ProducesResponseType(404)>

      Public Function GetGeospatialLookup(request As FeatureRequestModel) As Task(Of ActionResult(Of Object))
  overload: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetGeospatialLookup*
  attributes:
  - type: Microsoft.AspNetCore.Mvc.HttpGetAttribute
    ctor: Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: geospatiallookup
    namedArguments:
    - name: Name
      type: System.String
      value: GetGeospatialLookup
  - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Type,System.Int32)
    arguments:
    - type: System.Type
      value: MicroService.Service.Models.Base.ShapeBase
    - type: System.Int32
      value: 200
  - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 400
  - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 404
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetAttributeLookup(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel)
  commentId: M:MicroService.WebApi.V1.Controllers.FeatureServiceController.GetAttributeLookup(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel)
  id: GetAttributeLookup(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel)
  parent: MicroService.WebApi.V1.Controllers.FeatureServiceController
  langs:
  - csharp
  - vb
  name: GetAttributeLookup(FeatureAttributeLookupRequestModel)
  nameWithType: FeatureServiceController.GetAttributeLookup(FeatureAttributeLookupRequestModel)
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetAttributeLookup(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel)
  type: Method
  source:
    remote:
      path: src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: GetAttributeLookup
    path: ../src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
    startLine: 159
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.V1.Controllers
  summary: "\nGet Feature Attribute Lookup\n"
  example: []
  syntax:
    content: >-
      [HttpPost("attributelookup", Name = "GetAttributeLookup")]

      [Produces("application/json", new string[] { }, Type = typeof(List<object>))]

      [ProducesResponseType(typeof(List<object>), 200)]

      [ProducesResponseType(400)]

      [ProducesResponseType(404)]

      public Task<ActionResult<object>> GetAttributeLookup(FeatureAttributeLookupRequestModel request)
    parameters:
    - id: request
      type: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel
      attributes:
      - type: Microsoft.AspNetCore.Mvc.FromBodyAttribute
        ctor: Microsoft.AspNetCore.Mvc.FromBodyAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult{System.Object}}
    content.vb: >-
      <HttpPost("attributelookup", Name:="GetAttributeLookup")>

      <Produces("application/json", New String() { }, Type:=GetType(List(Of Object)))>

      <ProducesResponseType(GetType(List(Of Object)), 200)>

      <ProducesResponseType(400)>

      <ProducesResponseType(404)>

      Public Function GetAttributeLookup(request As FeatureAttributeLookupRequestModel) As Task(Of ActionResult(Of Object))
  overload: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetAttributeLookup*
  attributes:
  - type: Microsoft.AspNetCore.Mvc.HttpPostAttribute
    ctor: Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: attributelookup
    namedArguments:
    - name: Name
      type: System.String
      value: GetAttributeLookup
  - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Type,System.Int32)
    arguments:
    - type: System.Type
      value: System.Collections.Generic.List{System.Object}
    - type: System.Int32
      value: 200
  - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 400
  - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 404
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetLookupFeatureGeoJson(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel)
  commentId: M:MicroService.WebApi.V1.Controllers.FeatureServiceController.GetLookupFeatureGeoJson(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel)
  id: GetLookupFeatureGeoJson(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel)
  parent: MicroService.WebApi.V1.Controllers.FeatureServiceController
  langs:
  - csharp
  - vb
  name: GetLookupFeatureGeoJson(FeatureAttributeLookupRequestModel)
  nameWithType: FeatureServiceController.GetLookupFeatureGeoJson(FeatureAttributeLookupRequestModel)
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetLookupFeatureGeoJson(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel)
  type: Method
  source:
    remote:
      path: src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: GetLookupFeatureGeoJson
    path: ../src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
    startLine: 182
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.V1.Controllers
  summary: "\nGet Feature Attribute Lookup GeoJson\n"
  example: []
  syntax:
    content: >-
      [HttpPost("attributelookupgeojson", Name = "GetLookupFeatureGeoJson")]

      [Produces("application/geo+json", new string[] { })]

      [SwaggerResponse(200, "Returns a list of features", typeof(FeatureCollection))]

      [ProducesResponseType(200)]

      [ProducesResponseType(400)]

      [ProducesResponseType(404)]

      public Task<ActionResult<FeatureCollection>> GetLookupFeatureGeoJson(FeatureAttributeLookupRequestModel request)
    parameters:
    - id: request
      type: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel
      attributes:
      - type: Microsoft.AspNetCore.Mvc.FromBodyAttribute
        ctor: Microsoft.AspNetCore.Mvc.FromBodyAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult{NetTopologySuite.Features.FeatureCollection}}
      description: ''
    content.vb: >-
      <HttpPost("attributelookupgeojson", Name:="GetLookupFeatureGeoJson")>

      <Produces("application/geo+json", New String() { })>

      <SwaggerResponse(200, "Returns a list of features", GetType(FeatureCollection))>

      <ProducesResponseType(200)>

      <ProducesResponseType(400)>

      <ProducesResponseType(404)>

      Public Function GetLookupFeatureGeoJson(request As FeatureAttributeLookupRequestModel) As Task(Of ActionResult(Of FeatureCollection))
  overload: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetLookupFeatureGeoJson*
  attributes:
  - type: Microsoft.AspNetCore.Mvc.HttpPostAttribute
    ctor: Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: attributelookupgeojson
    namedArguments:
    - name: Name
      type: System.String
      value: GetLookupFeatureGeoJson
  - type: Swashbuckle.AspNetCore.Annotations.SwaggerResponseAttribute
    ctor: Swashbuckle.AspNetCore.Annotations.SwaggerResponseAttribute.#ctor(System.Int32,System.String,System.Type)
    arguments:
    - type: System.Int32
      value: 200
    - type: System.String
      value: Returns a list of features
    - type: System.Type
      value: NetTopologySuite.Features.FeatureCollection
  - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 200
  - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 400
  - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 404
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.FeatureAttributeValidation``1(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel,System.Func{MicroService.Service.Interfaces.IShapeService{MicroService.Service.Models.Base.ShapeBase},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{``0}})
  commentId: M:MicroService.WebApi.V1.Controllers.FeatureServiceController.FeatureAttributeValidation``1(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel,System.Func{MicroService.Service.Interfaces.IShapeService{MicroService.Service.Models.Base.ShapeBase},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{``0}})
  id: FeatureAttributeValidation``1(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel,System.Func{MicroService.Service.Interfaces.IShapeService{MicroService.Service.Models.Base.ShapeBase},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{``0}})
  parent: MicroService.WebApi.V1.Controllers.FeatureServiceController
  langs:
  - csharp
  - vb
  name: FeatureAttributeValidation<T>(FeatureAttributeLookupRequestModel, Func<IShapeService<ShapeBase>, List<KeyValuePair<string, object>>, IEnumerable<T>>)
  nameWithType: FeatureServiceController.FeatureAttributeValidation<T>(FeatureAttributeLookupRequestModel, Func<IShapeService<ShapeBase>, List<KeyValuePair<string, object>>, IEnumerable<T>>)
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.FeatureAttributeValidation<T>(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel, System.Func<MicroService.Service.Interfaces.IShapeService<MicroService.Service.Models.Base.ShapeBase>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, object>>, System.Collections.Generic.IEnumerable<T>>)
  type: Method
  source:
    remote:
      path: src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: FeatureAttributeValidation
    path: ../src/MicroService.WebApi/V1/Controllers/FeatureServiceController.cs
    startLine: 231
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.V1.Controllers
  summary: "\nFeature Attribute Validation\n"
  example: []
  syntax:
    content: public Task<ActionResult<T>> FeatureAttributeValidation<T>(FeatureAttributeLookupRequestModel request, Func<IShapeService<ShapeBase>, List<KeyValuePair<string, object>>, IEnumerable<T>> lookupFunction)
    parameters:
    - id: request
      type: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel
      description: ''
    - id: lookupFunction
      type: System.Func{MicroService.Service.Interfaces.IShapeService{MicroService.Service.Models.Base.ShapeBase},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{{T}}}
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult{{T}}}
      description: ''
    content.vb: Public Function FeatureAttributeValidation(Of T)(request As FeatureAttributeLookupRequestModel, lookupFunction As Func(Of IShapeService(Of ShapeBase), List(Of KeyValuePair(Of String, Object)), IEnumerable(Of T))) As Task(Of ActionResult(Of T))
  overload: MicroService.WebApi.V1.Controllers.FeatureServiceController.FeatureAttributeValidation*
  nameWithType.vb: FeatureServiceController.FeatureAttributeValidation(Of T)(FeatureAttributeLookupRequestModel, Func(Of IShapeService(Of ShapeBase), List(Of KeyValuePair(Of String, Object)), IEnumerable(Of T)))
  fullName.vb: MicroService.WebApi.V1.Controllers.FeatureServiceController.FeatureAttributeValidation(Of T)(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel, System.Func(Of MicroService.Service.Interfaces.IShapeService(Of MicroService.Service.Models.Base.ShapeBase), System.Collections.Generic.List(Of System.Collections.Generic.KeyValuePair(Of String, Object)), System.Collections.Generic.IEnumerable(Of T)))
  name.vb: FeatureAttributeValidation(Of T)(FeatureAttributeLookupRequestModel, Func(Of IShapeService(Of ShapeBase), List(Of KeyValuePair(Of String, Object)), IEnumerable(Of T)))
references:
- uid: MicroService.WebApi.V1.Controllers
  commentId: N:MicroService.WebApi.V1.Controllers
  name: MicroService.WebApi.V1.Controllers
  nameWithType: MicroService.WebApi.V1.Controllers
  fullName: MicroService.WebApi.V1.Controllers
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.WebApi
    name: WebApi
  - name: .
  - uid: MicroService.WebApi.V1
    name: V1
  - name: .
  - uid: MicroService.WebApi.V1.Controllers
    name: Controllers
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.WebApi
    name: WebApi
  - name: .
  - uid: MicroService.WebApi.V1
    name: V1
  - name: .
  - uid: MicroService.WebApi.V1.Controllers
    name: Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Microsoft.AspNetCore.Mvc.ControllerBase
  commentId: T:Microsoft.AspNetCore.Mvc.ControllerBase
  parent: Microsoft.AspNetCore.Mvc
  isExternal: true
  name: ControllerBase
  nameWithType: ControllerBase
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: StatusCode(int)
  nameWithType: ControllerBase.StatusCode(int)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(int)
  nameWithType.vb: ControllerBase.StatusCode(Integer)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(Integer)
  name.vb: StatusCode(Integer)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)
    name: StatusCode
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)
    name: StatusCode
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: StatusCode(int, object)
  nameWithType: ControllerBase.StatusCode(int, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(int, object)
  nameWithType.vb: ControllerBase.StatusCode(Integer, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(Integer, Object)
  name.vb: StatusCode(Integer, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)
    name: StatusCode
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)
    name: StatusCode
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Content(string)
  nameWithType: ControllerBase.Content(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Content(string)
  nameWithType.vb: ControllerBase.Content(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Content(String)
  name.vb: Content(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)
    name: Content
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)
    name: Content
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Content(string, string)
  nameWithType: ControllerBase.Content(string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Content(string, string)
  nameWithType.vb: ControllerBase.Content(String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Content(String, String)
  name.vb: Content(String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)
    name: Content
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)
    name: Content
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Content(string, string, Encoding)
  nameWithType: ControllerBase.Content(string, string, Encoding)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Content(string, string, System.Text.Encoding)
  nameWithType.vb: ControllerBase.Content(String, String, Encoding)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Content(String, String, System.Text.Encoding)
  name.vb: Content(String, String, Encoding)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)
    name: Content
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Text.Encoding
    name: Encoding
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)
    name: Content
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Text.Encoding
    name: Encoding
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Content(string, MediaTypeHeaderValue)
  nameWithType: ControllerBase.Content(string, MediaTypeHeaderValue)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Content(string, Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  nameWithType.vb: ControllerBase.Content(String, MediaTypeHeaderValue)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Content(String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  name.vb: Content(String, MediaTypeHeaderValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
    name: Content
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
    name: MediaTypeHeaderValue
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
    name: Content
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
    name: MediaTypeHeaderValue
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: NoContent()
  nameWithType: ControllerBase.NoContent()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.NoContent()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
    name: NoContent
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
    name: NoContent
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Ok
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Ok
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Ok()
  nameWithType: ControllerBase.Ok()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Ok()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Ok
    name: Ok
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Ok
    name: Ok
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Ok(object)
  nameWithType: ControllerBase.Ok(object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Ok(object)
  nameWithType.vb: ControllerBase.Ok(Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Ok(Object)
  name.vb: Ok(Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)
    name: Ok
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)
    name: Ok
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Redirect(string)
  nameWithType: ControllerBase.Redirect(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(string)
  nameWithType.vb: ControllerBase.Redirect(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String)
  name.vb: Redirect(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)
    name: Redirect
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)
    name: Redirect
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectPermanent(string)
  nameWithType: ControllerBase.RedirectPermanent(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(string)
  nameWithType.vb: ControllerBase.RedirectPermanent(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(String)
  name.vb: RedirectPermanent(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)
    name: RedirectPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)
    name: RedirectPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectPreserveMethod(string)
  nameWithType: ControllerBase.RedirectPreserveMethod(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(string)
  nameWithType.vb: ControllerBase.RedirectPreserveMethod(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(String)
  name.vb: RedirectPreserveMethod(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String)
    name: RedirectPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String)
    name: RedirectPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectPermanentPreserveMethod(string)
  nameWithType: ControllerBase.RedirectPermanentPreserveMethod(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(string)
  nameWithType.vb: ControllerBase.RedirectPermanentPreserveMethod(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(String)
  name.vb: RedirectPermanentPreserveMethod(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String)
    name: RedirectPermanentPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String)
    name: RedirectPermanentPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: LocalRedirect(string)
  nameWithType: ControllerBase.LocalRedirect(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(string)
  nameWithType.vb: ControllerBase.LocalRedirect(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(String)
  name.vb: LocalRedirect(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)
    name: LocalRedirect
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)
    name: LocalRedirect
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: LocalRedirectPermanent(string)
  nameWithType: ControllerBase.LocalRedirectPermanent(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(string)
  nameWithType.vb: ControllerBase.LocalRedirectPermanent(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(String)
  name.vb: LocalRedirectPermanent(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)
    name: LocalRedirectPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)
    name: LocalRedirectPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: LocalRedirectPreserveMethod(string)
  nameWithType: ControllerBase.LocalRedirectPreserveMethod(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(string)
  nameWithType.vb: ControllerBase.LocalRedirectPreserveMethod(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(String)
  name.vb: LocalRedirectPreserveMethod(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String)
    name: LocalRedirectPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String)
    name: LocalRedirectPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: LocalRedirectPermanentPreserveMethod(string)
  nameWithType: ControllerBase.LocalRedirectPermanentPreserveMethod(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(string)
  nameWithType.vb: ControllerBase.LocalRedirectPermanentPreserveMethod(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(String)
  name.vb: LocalRedirectPermanentPreserveMethod(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String)
    name: LocalRedirectPermanentPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String)
    name: LocalRedirectPermanentPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToAction()
  nameWithType: ControllerBase.RedirectToAction()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
    name: RedirectToAction
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
    name: RedirectToAction
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToAction(string)
  nameWithType: ControllerBase.RedirectToAction(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(string)
  nameWithType.vb: ControllerBase.RedirectToAction(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(String)
  name.vb: RedirectToAction(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)
    name: RedirectToAction
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)
    name: RedirectToAction
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToAction(string, object)
  nameWithType: ControllerBase.RedirectToAction(string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(string, object)
  nameWithType.vb: ControllerBase.RedirectToAction(String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(String, Object)
  name.vb: RedirectToAction(String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)
    name: RedirectToAction
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)
    name: RedirectToAction
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToAction(string, string)
  nameWithType: ControllerBase.RedirectToAction(string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(string, string)
  nameWithType.vb: ControllerBase.RedirectToAction(String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(String, String)
  name.vb: RedirectToAction(String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)
    name: RedirectToAction
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)
    name: RedirectToAction
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToAction(string, string, object)
  nameWithType: ControllerBase.RedirectToAction(string, string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(string, string, object)
  nameWithType.vb: ControllerBase.RedirectToAction(String, String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(String, String, Object)
  name.vb: RedirectToAction(String, String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)
    name: RedirectToAction
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)
    name: RedirectToAction
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToAction(string, string, string)
  nameWithType: ControllerBase.RedirectToAction(string, string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(string, string, string)
  nameWithType.vb: ControllerBase.RedirectToAction(String, String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(String, String, String)
  name.vb: RedirectToAction(String, String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.String)
    name: RedirectToAction
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.String)
    name: RedirectToAction
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToAction(string, string, object, string)
  nameWithType: ControllerBase.RedirectToAction(string, string, object, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(string, string, object, string)
  nameWithType.vb: ControllerBase.RedirectToAction(String, String, Object, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(String, String, Object, String)
  name.vb: RedirectToAction(String, String, Object, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object,System.String)
    name: RedirectToAction
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object,System.String)
    name: RedirectToAction
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String,System.String,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String,System.String,System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToActionPreserveMethod(string, string, object, string)
  nameWithType: ControllerBase.RedirectToActionPreserveMethod(string, string, object, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(string, string, object, string)
  nameWithType.vb: ControllerBase.RedirectToActionPreserveMethod(String, String, Object, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(String, String, Object, String)
  name.vb: RedirectToActionPreserveMethod(String, String, Object, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String,System.String,System.Object,System.String)
    name: RedirectToActionPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String,System.String,System.Object,System.String)
    name: RedirectToActionPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToActionPermanent(string)
  nameWithType: ControllerBase.RedirectToActionPermanent(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(string)
  nameWithType.vb: ControllerBase.RedirectToActionPermanent(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(String)
  name.vb: RedirectToActionPermanent(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)
    name: RedirectToActionPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)
    name: RedirectToActionPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToActionPermanent(string, object)
  nameWithType: ControllerBase.RedirectToActionPermanent(string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(string, object)
  nameWithType.vb: ControllerBase.RedirectToActionPermanent(String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(String, Object)
  name.vb: RedirectToActionPermanent(String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)
    name: RedirectToActionPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)
    name: RedirectToActionPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToActionPermanent(string, string)
  nameWithType: ControllerBase.RedirectToActionPermanent(string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(string, string)
  nameWithType.vb: ControllerBase.RedirectToActionPermanent(String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(String, String)
  name.vb: RedirectToActionPermanent(String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)
    name: RedirectToActionPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)
    name: RedirectToActionPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToActionPermanent(string, string, string)
  nameWithType: ControllerBase.RedirectToActionPermanent(string, string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(string, string, string)
  nameWithType.vb: ControllerBase.RedirectToActionPermanent(String, String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(String, String, String)
  name.vb: RedirectToActionPermanent(String, String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.String)
    name: RedirectToActionPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.String)
    name: RedirectToActionPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToActionPermanent(string, string, object)
  nameWithType: ControllerBase.RedirectToActionPermanent(string, string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(string, string, object)
  nameWithType.vb: ControllerBase.RedirectToActionPermanent(String, String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(String, String, Object)
  name.vb: RedirectToActionPermanent(String, String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)
    name: RedirectToActionPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)
    name: RedirectToActionPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToActionPermanent(string, string, object, string)
  nameWithType: ControllerBase.RedirectToActionPermanent(string, string, object, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(string, string, object, string)
  nameWithType.vb: ControllerBase.RedirectToActionPermanent(String, String, Object, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(String, String, Object, String)
  name.vb: RedirectToActionPermanent(String, String, Object, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object,System.String)
    name: RedirectToActionPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object,System.String)
    name: RedirectToActionPermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String,System.String,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String,System.String,System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToActionPermanentPreserveMethod(string, string, object, string)
  nameWithType: ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string)
  nameWithType.vb: ControllerBase.RedirectToActionPermanentPreserveMethod(String, String, Object, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(String, String, Object, String)
  name.vb: RedirectToActionPermanentPreserveMethod(String, String, Object, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String,System.String,System.Object,System.String)
    name: RedirectToActionPermanentPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String,System.String,System.Object,System.String)
    name: RedirectToActionPermanentPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToRoute(string)
  nameWithType: ControllerBase.RedirectToRoute(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(string)
  nameWithType.vb: ControllerBase.RedirectToRoute(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(String)
  name.vb: RedirectToRoute(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)
    name: RedirectToRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)
    name: RedirectToRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToRoute(object)
  nameWithType: ControllerBase.RedirectToRoute(object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(object)
  nameWithType.vb: ControllerBase.RedirectToRoute(Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(Object)
  name.vb: RedirectToRoute(Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)
    name: RedirectToRoute
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)
    name: RedirectToRoute
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToRoute(string, object)
  nameWithType: ControllerBase.RedirectToRoute(string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(string, object)
  nameWithType.vb: ControllerBase.RedirectToRoute(String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(String, Object)
  name.vb: RedirectToRoute(String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)
    name: RedirectToRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)
    name: RedirectToRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToRoute(string, string)
  nameWithType: ControllerBase.RedirectToRoute(string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(string, string)
  nameWithType.vb: ControllerBase.RedirectToRoute(String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(String, String)
  name.vb: RedirectToRoute(String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.String)
    name: RedirectToRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.String)
    name: RedirectToRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToRoute(string, object, string)
  nameWithType: ControllerBase.RedirectToRoute(string, object, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(string, object, string)
  nameWithType.vb: ControllerBase.RedirectToRoute(String, Object, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(String, Object, String)
  name.vb: RedirectToRoute(String, Object, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object,System.String)
    name: RedirectToRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object,System.String)
    name: RedirectToRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String,System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToRoutePreserveMethod(string, object, string)
  nameWithType: ControllerBase.RedirectToRoutePreserveMethod(string, object, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(string, object, string)
  nameWithType.vb: ControllerBase.RedirectToRoutePreserveMethod(String, Object, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(String, Object, String)
  name.vb: RedirectToRoutePreserveMethod(String, Object, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String,System.Object,System.String)
    name: RedirectToRoutePreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String,System.Object,System.String)
    name: RedirectToRoutePreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToRoutePermanent(string)
  nameWithType: ControllerBase.RedirectToRoutePermanent(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(string)
  nameWithType.vb: ControllerBase.RedirectToRoutePermanent(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(String)
  name.vb: RedirectToRoutePermanent(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)
    name: RedirectToRoutePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)
    name: RedirectToRoutePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToRoutePermanent(object)
  nameWithType: ControllerBase.RedirectToRoutePermanent(object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(object)
  nameWithType.vb: ControllerBase.RedirectToRoutePermanent(Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(Object)
  name.vb: RedirectToRoutePermanent(Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)
    name: RedirectToRoutePermanent
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)
    name: RedirectToRoutePermanent
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToRoutePermanent(string, object)
  nameWithType: ControllerBase.RedirectToRoutePermanent(string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(string, object)
  nameWithType.vb: ControllerBase.RedirectToRoutePermanent(String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(String, Object)
  name.vb: RedirectToRoutePermanent(String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)
    name: RedirectToRoutePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)
    name: RedirectToRoutePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToRoutePermanent(string, string)
  nameWithType: ControllerBase.RedirectToRoutePermanent(string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(string, string)
  nameWithType.vb: ControllerBase.RedirectToRoutePermanent(String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(String, String)
  name.vb: RedirectToRoutePermanent(String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.String)
    name: RedirectToRoutePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.String)
    name: RedirectToRoutePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToRoutePermanent(string, object, string)
  nameWithType: ControllerBase.RedirectToRoutePermanent(string, object, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(string, object, string)
  nameWithType.vb: ControllerBase.RedirectToRoutePermanent(String, Object, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(String, Object, String)
  name.vb: RedirectToRoutePermanent(String, Object, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object,System.String)
    name: RedirectToRoutePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object,System.String)
    name: RedirectToRoutePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String,System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToRoutePermanentPreserveMethod(string, object, string)
  nameWithType: ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string)
  nameWithType.vb: ControllerBase.RedirectToRoutePermanentPreserveMethod(String, Object, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(String, Object, String)
  name.vb: RedirectToRoutePermanentPreserveMethod(String, Object, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String,System.Object,System.String)
    name: RedirectToRoutePermanentPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String,System.Object,System.String)
    name: RedirectToRoutePermanentPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToPage(string)
  nameWithType: ControllerBase.RedirectToPage(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(string)
  nameWithType.vb: ControllerBase.RedirectToPage(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(String)
  name.vb: RedirectToPage(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String)
    name: RedirectToPage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String)
    name: RedirectToPage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToPage(string, object)
  nameWithType: ControllerBase.RedirectToPage(string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(string, object)
  nameWithType.vb: ControllerBase.RedirectToPage(String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(String, Object)
  name.vb: RedirectToPage(String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.Object)
    name: RedirectToPage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.Object)
    name: RedirectToPage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToPage(string, string)
  nameWithType: ControllerBase.RedirectToPage(string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(string, string)
  nameWithType.vb: ControllerBase.RedirectToPage(String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(String, String)
  name.vb: RedirectToPage(String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String)
    name: RedirectToPage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String)
    name: RedirectToPage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToPage(string, string, object)
  nameWithType: ControllerBase.RedirectToPage(string, string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(string, string, object)
  nameWithType.vb: ControllerBase.RedirectToPage(String, String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(String, String, Object)
  name.vb: RedirectToPage(String, String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object)
    name: RedirectToPage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object)
    name: RedirectToPage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToPage(string, string, string)
  nameWithType: ControllerBase.RedirectToPage(string, string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(string, string, string)
  nameWithType.vb: ControllerBase.RedirectToPage(String, String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(String, String, String)
  name.vb: RedirectToPage(String, String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.String)
    name: RedirectToPage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.String)
    name: RedirectToPage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToPage(string, string, object, string)
  nameWithType: ControllerBase.RedirectToPage(string, string, object, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(string, string, object, string)
  nameWithType.vb: ControllerBase.RedirectToPage(String, String, Object, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(String, String, Object, String)
  name.vb: RedirectToPage(String, String, Object, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object,System.String)
    name: RedirectToPage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object,System.String)
    name: RedirectToPage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToPagePermanent(string)
  nameWithType: ControllerBase.RedirectToPagePermanent(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(string)
  nameWithType.vb: ControllerBase.RedirectToPagePermanent(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(String)
  name.vb: RedirectToPagePermanent(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String)
    name: RedirectToPagePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String)
    name: RedirectToPagePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToPagePermanent(string, object)
  nameWithType: ControllerBase.RedirectToPagePermanent(string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(string, object)
  nameWithType.vb: ControllerBase.RedirectToPagePermanent(String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(String, Object)
  name.vb: RedirectToPagePermanent(String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.Object)
    name: RedirectToPagePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.Object)
    name: RedirectToPagePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToPagePermanent(string, string)
  nameWithType: ControllerBase.RedirectToPagePermanent(string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(string, string)
  nameWithType.vb: ControllerBase.RedirectToPagePermanent(String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(String, String)
  name.vb: RedirectToPagePermanent(String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String)
    name: RedirectToPagePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String)
    name: RedirectToPagePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToPagePermanent(string, string, string)
  nameWithType: ControllerBase.RedirectToPagePermanent(string, string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(string, string, string)
  nameWithType.vb: ControllerBase.RedirectToPagePermanent(String, String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(String, String, String)
  name.vb: RedirectToPagePermanent(String, String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.String)
    name: RedirectToPagePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.String)
    name: RedirectToPagePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToPagePermanent(string, string, object, string)
  nameWithType: ControllerBase.RedirectToPagePermanent(string, string, object, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(string, string, object, string)
  nameWithType.vb: ControllerBase.RedirectToPagePermanent(String, String, Object, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(String, String, Object, String)
  name.vb: RedirectToPagePermanent(String, String, Object, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.Object,System.String)
    name: RedirectToPagePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.Object,System.String)
    name: RedirectToPagePermanent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String,System.String,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String,System.String,System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToPagePreserveMethod(string, string, object, string)
  nameWithType: ControllerBase.RedirectToPagePreserveMethod(string, string, object, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(string, string, object, string)
  nameWithType.vb: ControllerBase.RedirectToPagePreserveMethod(String, String, Object, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(String, String, Object, String)
  name.vb: RedirectToPagePreserveMethod(String, String, Object, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String,System.String,System.Object,System.String)
    name: RedirectToPagePreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String,System.String,System.Object,System.String)
    name: RedirectToPagePreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String,System.String,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String,System.String,System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RedirectToPagePermanentPreserveMethod(string, string, object, string)
  nameWithType: ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string)
  nameWithType.vb: ControllerBase.RedirectToPagePermanentPreserveMethod(String, String, Object, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(String, String, Object, String)
  name.vb: RedirectToPagePermanentPreserveMethod(String, String, Object, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String,System.String,System.Object,System.String)
    name: RedirectToPagePermanentPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String,System.String,System.Object,System.String)
    name: RedirectToPagePermanentPreserveMethod
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(byte[], string)
  nameWithType: ControllerBase.File(byte[], string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(byte[], string)
  nameWithType.vb: ControllerBase.File(Byte(), String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(Byte(), String)
  name.vb: File(Byte(), String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(byte[], string, bool)
  nameWithType: ControllerBase.File(byte[], string, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(byte[], string, bool)
  nameWithType.vb: ControllerBase.File(Byte(), String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(Byte(), String, Boolean)
  name.vb: File(Byte(), String, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(byte[], string, string)
  nameWithType: ControllerBase.File(byte[], string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(byte[], string, string)
  nameWithType.vb: ControllerBase.File(Byte(), String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(Byte(), String, String)
  name.vb: File(Byte(), String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(byte[], string, string, bool)
  nameWithType: ControllerBase.File(byte[], string, string, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(byte[], string, string, bool)
  nameWithType.vb: ControllerBase.File(Byte(), String, String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(Byte(), String, String, Boolean)
  name.vb: File(Byte(), String, String, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(byte[], string, DateTimeOffset?, EntityTagHeaderValue)
  nameWithType: ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(byte[], string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  nameWithType.vb: ControllerBase.File(Byte(), String, DateTimeOffset?, EntityTagHeaderValue)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(Byte(), String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  name.vb: File(Byte(), String, DateTimeOffset?, EntityTagHeaderValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool)
  nameWithType: ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(byte[], string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, bool)
  nameWithType.vb: ControllerBase.File(Byte(), String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(Byte(), String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, Boolean)
  name.vb: File(Byte(), String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue)
  nameWithType: ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(byte[], string, string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  nameWithType.vb: ControllerBase.File(Byte(), String, String, DateTimeOffset?, EntityTagHeaderValue)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(Byte(), String, String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  name.vb: File(Byte(), String, String, DateTimeOffset?, EntityTagHeaderValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool)
  nameWithType: ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(byte[], string, string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, bool)
  nameWithType.vb: ControllerBase.File(Byte(), String, String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(Byte(), String, String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, Boolean)
  name.vb: File(Byte(), String, String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(Stream, string)
  nameWithType: ControllerBase.File(Stream, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, string)
  nameWithType.vb: ControllerBase.File(Stream, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, String)
  name.vb: File(Stream, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(Stream, string, bool)
  nameWithType: ControllerBase.File(Stream, string, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, string, bool)
  nameWithType.vb: ControllerBase.File(Stream, String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, String, Boolean)
  name.vb: File(Stream, String, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(Stream, string, string)
  nameWithType: ControllerBase.File(Stream, string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, string, string)
  nameWithType.vb: ControllerBase.File(Stream, String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, String, String)
  name.vb: File(Stream, String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(Stream, string, string, bool)
  nameWithType: ControllerBase.File(Stream, string, string, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, string, string, bool)
  nameWithType.vb: ControllerBase.File(Stream, String, String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, String, String, Boolean)
  name.vb: File(Stream, String, String, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(Stream, string, DateTimeOffset?, EntityTagHeaderValue)
  nameWithType: ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  nameWithType.vb: ControllerBase.File(Stream, String, DateTimeOffset?, EntityTagHeaderValue)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  name.vb: File(Stream, String, DateTimeOffset?, EntityTagHeaderValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool)
  nameWithType: ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, bool)
  nameWithType.vb: ControllerBase.File(Stream, String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, Boolean)
  name.vb: File(Stream, String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue)
  nameWithType: ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, string, string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  nameWithType.vb: ControllerBase.File(Stream, String, String, DateTimeOffset?, EntityTagHeaderValue)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, String, String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  name.vb: File(Stream, String, String, DateTimeOffset?, EntityTagHeaderValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool)
  nameWithType: ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, string, string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, bool)
  nameWithType.vb: ControllerBase.File(Stream, String, String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, String, String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, Boolean)
  name.vb: File(Stream, String, String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(string, string)
  nameWithType: ControllerBase.File(string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(string, string)
  nameWithType.vb: ControllerBase.File(String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(String, String)
  name.vb: File(String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(string, string, bool)
  nameWithType: ControllerBase.File(string, string, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(string, string, bool)
  nameWithType.vb: ControllerBase.File(String, String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(String, String, Boolean)
  name.vb: File(String, String, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(string, string, string)
  nameWithType: ControllerBase.File(string, string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(string, string, string)
  nameWithType.vb: ControllerBase.File(String, String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(String, String, String)
  name.vb: File(String, String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(string, string, string, bool)
  nameWithType: ControllerBase.File(string, string, string, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(string, string, string, bool)
  nameWithType.vb: ControllerBase.File(String, String, String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(String, String, String, Boolean)
  name.vb: File(String, String, String, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(string, string, DateTimeOffset?, EntityTagHeaderValue)
  nameWithType: ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(string, string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  nameWithType.vb: ControllerBase.File(String, String, DateTimeOffset?, EntityTagHeaderValue)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(String, String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  name.vb: File(String, String, DateTimeOffset?, EntityTagHeaderValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool)
  nameWithType: ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(string, string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, bool)
  nameWithType.vb: ControllerBase.File(String, String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(String, String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, Boolean)
  name.vb: File(String, String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(string, string, string, DateTimeOffset?, EntityTagHeaderValue)
  nameWithType: ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(string, string, string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  nameWithType.vb: ControllerBase.File(String, String, String, DateTimeOffset?, EntityTagHeaderValue)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(String, String, String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  name.vb: File(String, String, String, DateTimeOffset?, EntityTagHeaderValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool)
  nameWithType: ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(string, string, string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, bool)
  nameWithType.vb: ControllerBase.File(String, String, String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(String, String, String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, Boolean)
  name.vb: File(String, String, String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: File
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: PhysicalFile(string, string)
  nameWithType: ControllerBase.PhysicalFile(string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(string, string)
  nameWithType.vb: ControllerBase.PhysicalFile(String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(String, String)
  name.vb: PhysicalFile(String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: PhysicalFile(string, string, bool)
  nameWithType: ControllerBase.PhysicalFile(string, string, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(string, string, bool)
  nameWithType.vb: ControllerBase.PhysicalFile(String, String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(String, String, Boolean)
  name.vb: PhysicalFile(String, String, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Boolean)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Boolean)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: PhysicalFile(string, string, string)
  nameWithType: ControllerBase.PhysicalFile(string, string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(string, string, string)
  nameWithType.vb: ControllerBase.PhysicalFile(String, String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(String, String, String)
  name.vb: PhysicalFile(String, String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: PhysicalFile(string, string, string, bool)
  nameWithType: ControllerBase.PhysicalFile(string, string, string, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(string, string, string, bool)
  nameWithType.vb: ControllerBase.PhysicalFile(String, String, String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(String, String, String, Boolean)
  name.vb: PhysicalFile(String, String, String, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Boolean)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Boolean)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue)
  nameWithType: ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(string, string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  nameWithType.vb: ControllerBase.PhysicalFile(String, String, DateTimeOffset?, EntityTagHeaderValue)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(String, String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  name.vb: PhysicalFile(String, String, DateTimeOffset?, EntityTagHeaderValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool)
  nameWithType: ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(string, string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, bool)
  nameWithType.vb: ControllerBase.PhysicalFile(String, String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(String, String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, Boolean)
  name.vb: PhysicalFile(String, String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue)
  nameWithType: ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(string, string, string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  nameWithType.vb: ControllerBase.PhysicalFile(String, String, String, DateTimeOffset?, EntityTagHeaderValue)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(String, String, String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  name.vb: PhysicalFile(String, String, String, DateTimeOffset?, EntityTagHeaderValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool)
  nameWithType: ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(string, string, string, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, bool)
  nameWithType.vb: ControllerBase.PhysicalFile(String, String, String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(String, String, String, System.DateTimeOffset?, Microsoft.Net.Http.Headers.EntityTagHeaderValue, Boolean)
  name.vb: PhysicalFile(String, String, String, DateTimeOffset?, EntityTagHeaderValue, Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    name: PhysicalFile
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Microsoft.Net.Http.Headers.EntityTagHeaderValue
    name: EntityTagHeaderValue
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Unauthorized()
  nameWithType: ControllerBase.Unauthorized()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
    name: Unauthorized
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
    name: Unauthorized
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Unauthorized(object)
  nameWithType: ControllerBase.Unauthorized(object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(object)
  nameWithType.vb: ControllerBase.Unauthorized(Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(Object)
  name.vb: Unauthorized(Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object)
    name: Unauthorized
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object)
    name: Unauthorized
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: NotFound()
  nameWithType: ControllerBase.NotFound()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
    name: NotFound
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
    name: NotFound
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: NotFound(object)
  nameWithType: ControllerBase.NotFound(object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(object)
  nameWithType.vb: ControllerBase.NotFound(Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(Object)
  name.vb: NotFound(Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)
    name: NotFound
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)
    name: NotFound
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: BadRequest()
  nameWithType: ControllerBase.BadRequest()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
    name: BadRequest
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
    name: BadRequest
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: BadRequest(object)
  nameWithType: ControllerBase.BadRequest(object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(object)
  nameWithType.vb: ControllerBase.BadRequest(Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Object)
  name.vb: BadRequest(Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)
    name: BadRequest
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)
    name: BadRequest
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: BadRequest(ModelStateDictionary)
  nameWithType: ControllerBase.BadRequest(ModelStateDictionary)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: UnprocessableEntity()
  nameWithType: ControllerBase.UnprocessableEntity()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
    name: UnprocessableEntity
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
    name: UnprocessableEntity
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: UnprocessableEntity(object)
  nameWithType: ControllerBase.UnprocessableEntity(object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(object)
  nameWithType.vb: ControllerBase.UnprocessableEntity(Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Object)
  name.vb: UnprocessableEntity(Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object)
    name: UnprocessableEntity
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object)
    name: UnprocessableEntity
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: UnprocessableEntity(ModelStateDictionary)
  nameWithType: ControllerBase.UnprocessableEntity(ModelStateDictionary)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: UnprocessableEntity
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: UnprocessableEntity
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Conflict()
  nameWithType: ControllerBase.Conflict()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
    name: Conflict
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
    name: Conflict
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Conflict(object)
  nameWithType: ControllerBase.Conflict(object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(object)
  nameWithType.vb: ControllerBase.Conflict(Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Object)
  name.vb: Conflict(Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object)
    name: Conflict
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object)
    name: Conflict
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Conflict(ModelStateDictionary)
  nameWithType: ControllerBase.Conflict(ModelStateDictionary)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: Conflict
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: Conflict
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Problem(string, string, int?, string, string)
  nameWithType: ControllerBase.Problem(string, string, int?, string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Problem(string, string, int?, string, string)
  nameWithType.vb: ControllerBase.Problem(String, String, Integer?, String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Problem(String, String, Integer?, String, String)
  name.vb: Problem(String, String, Integer?, String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
    name: Problem
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
    name: Problem
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: ValidationProblem(ValidationProblemDetails)
  nameWithType: ControllerBase.ValidationProblem(ValidationProblemDetails)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails)
    name: ValidationProblem
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Mvc.ValidationProblemDetails
    name: ValidationProblemDetails
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails)
    name: ValidationProblem
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Mvc.ValidationProblemDetails
    name: ValidationProblemDetails
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: ValidationProblem(ModelStateDictionary)
  nameWithType: ControllerBase.ValidationProblem(ModelStateDictionary)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: ValidationProblem
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: ValidationProblem
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: ValidationProblem()
  nameWithType: ControllerBase.ValidationProblem()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
    name: ValidationProblem
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
    name: ValidationProblem
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: ValidationProblem(string, string, int?, string, string, ModelStateDictionary)
  nameWithType: ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(string, string, int?, string, string, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  nameWithType.vb: ControllerBase.ValidationProblem(String, String, Integer?, String, String, ModelStateDictionary)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(String, String, Integer?, String, String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  name.vb: ValidationProblem(String, String, Integer?, String, String, ModelStateDictionary)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: ValidationProblem
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: ValidationProblem
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Created(string, object)
  nameWithType: ControllerBase.Created(string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Created(string, object)
  nameWithType.vb: ControllerBase.Created(String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Created(String, Object)
  name.vb: Created(String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)
    name: Created
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)
    name: Created
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Created(Uri, object)
  nameWithType: ControllerBase.Created(Uri, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, object)
  nameWithType.vb: ControllerBase.Created(Uri, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, Object)
  name.vb: Created(Uri, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)
    name: Created
    isExternal: true
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)
    name: Created
    isExternal: true
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: CreatedAtAction(string, object)
  nameWithType: ControllerBase.CreatedAtAction(string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(string, object)
  nameWithType.vb: ControllerBase.CreatedAtAction(String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(String, Object)
  name.vb: CreatedAtAction(String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)
    name: CreatedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)
    name: CreatedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: CreatedAtAction(string, object, object)
  nameWithType: ControllerBase.CreatedAtAction(string, object, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(string, object, object)
  nameWithType.vb: ControllerBase.CreatedAtAction(String, Object, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(String, Object, Object)
  name.vb: CreatedAtAction(String, Object, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)
    name: CreatedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)
    name: CreatedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: CreatedAtAction(string, string, object, object)
  nameWithType: ControllerBase.CreatedAtAction(string, string, object, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(string, string, object, object)
  nameWithType.vb: ControllerBase.CreatedAtAction(String, String, Object, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(String, String, Object, Object)
  name.vb: CreatedAtAction(String, String, Object, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)
    name: CreatedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)
    name: CreatedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: CreatedAtRoute(string, object)
  nameWithType: ControllerBase.CreatedAtRoute(string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(string, object)
  nameWithType.vb: ControllerBase.CreatedAtRoute(String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(String, Object)
  name.vb: CreatedAtRoute(String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)
    name: CreatedAtRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)
    name: CreatedAtRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: CreatedAtRoute(object, object)
  nameWithType: ControllerBase.CreatedAtRoute(object, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(object, object)
  nameWithType.vb: ControllerBase.CreatedAtRoute(Object, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(Object, Object)
  name.vb: CreatedAtRoute(Object, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)
    name: CreatedAtRoute
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)
    name: CreatedAtRoute
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: CreatedAtRoute(string, object, object)
  nameWithType: ControllerBase.CreatedAtRoute(string, object, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(string, object, object)
  nameWithType.vb: ControllerBase.CreatedAtRoute(String, Object, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(String, Object, Object)
  name.vb: CreatedAtRoute(String, Object, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)
    name: CreatedAtRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)
    name: CreatedAtRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Accepted()
  nameWithType: ControllerBase.Accepted()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
    name: Accepted
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
    name: Accepted
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Accepted(object)
  nameWithType: ControllerBase.Accepted(object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(object)
  nameWithType.vb: ControllerBase.Accepted(Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(Object)
  name.vb: Accepted(Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object)
    name: Accepted
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object)
    name: Accepted
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Accepted(Uri)
  nameWithType: ControllerBase.Accepted(Uri)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri)
    name: Accepted
    isExternal: true
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri)
    name: Accepted
    isExternal: true
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Accepted(string)
  nameWithType: ControllerBase.Accepted(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(string)
  nameWithType.vb: ControllerBase.Accepted(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(String)
  name.vb: Accepted(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String)
    name: Accepted
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String)
    name: Accepted
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Accepted(string, object)
  nameWithType: ControllerBase.Accepted(string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(string, object)
  nameWithType.vb: ControllerBase.Accepted(String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(String, Object)
  name.vb: Accepted(String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String,System.Object)
    name: Accepted
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String,System.Object)
    name: Accepted
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Accepted(Uri, object)
  nameWithType: ControllerBase.Accepted(Uri, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, object)
  nameWithType.vb: ControllerBase.Accepted(Uri, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, Object)
  name.vb: Accepted(Uri, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri,System.Object)
    name: Accepted
    isExternal: true
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri,System.Object)
    name: Accepted
    isExternal: true
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: AcceptedAtAction(string)
  nameWithType: ControllerBase.AcceptedAtAction(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(string)
  nameWithType.vb: ControllerBase.AcceptedAtAction(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(String)
  name.vb: AcceptedAtAction(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String)
    name: AcceptedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String)
    name: AcceptedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: AcceptedAtAction(string, string)
  nameWithType: ControllerBase.AcceptedAtAction(string, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(string, string)
  nameWithType.vb: ControllerBase.AcceptedAtAction(String, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(String, String)
  name.vb: AcceptedAtAction(String, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String)
    name: AcceptedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String)
    name: AcceptedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: AcceptedAtAction(string, object)
  nameWithType: ControllerBase.AcceptedAtAction(string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(string, object)
  nameWithType.vb: ControllerBase.AcceptedAtAction(String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(String, Object)
  name.vb: AcceptedAtAction(String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object)
    name: AcceptedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object)
    name: AcceptedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: AcceptedAtAction(string, string, object)
  nameWithType: ControllerBase.AcceptedAtAction(string, string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(string, string, object)
  nameWithType.vb: ControllerBase.AcceptedAtAction(String, String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(String, String, Object)
  name.vb: AcceptedAtAction(String, String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object)
    name: AcceptedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object)
    name: AcceptedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: AcceptedAtAction(string, object, object)
  nameWithType: ControllerBase.AcceptedAtAction(string, object, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(string, object, object)
  nameWithType.vb: ControllerBase.AcceptedAtAction(String, Object, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(String, Object, Object)
  name.vb: AcceptedAtAction(String, Object, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object,System.Object)
    name: AcceptedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object,System.Object)
    name: AcceptedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: AcceptedAtAction(string, string, object, object)
  nameWithType: ControllerBase.AcceptedAtAction(string, string, object, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(string, string, object, object)
  nameWithType.vb: ControllerBase.AcceptedAtAction(String, String, Object, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(String, String, Object, Object)
  name.vb: AcceptedAtAction(String, String, Object, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object,System.Object)
    name: AcceptedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object,System.Object)
    name: AcceptedAtAction
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: AcceptedAtRoute(object)
  nameWithType: ControllerBase.AcceptedAtRoute(object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(object)
  nameWithType.vb: ControllerBase.AcceptedAtRoute(Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(Object)
  name.vb: AcceptedAtRoute(Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object)
    name: AcceptedAtRoute
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object)
    name: AcceptedAtRoute
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: AcceptedAtRoute(string)
  nameWithType: ControllerBase.AcceptedAtRoute(string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(string)
  nameWithType.vb: ControllerBase.AcceptedAtRoute(String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(String)
  name.vb: AcceptedAtRoute(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String)
    name: AcceptedAtRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String)
    name: AcceptedAtRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: AcceptedAtRoute(string, object)
  nameWithType: ControllerBase.AcceptedAtRoute(string, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(string, object)
  nameWithType.vb: ControllerBase.AcceptedAtRoute(String, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(String, Object)
  name.vb: AcceptedAtRoute(String, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object)
    name: AcceptedAtRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object)
    name: AcceptedAtRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: AcceptedAtRoute(object, object)
  nameWithType: ControllerBase.AcceptedAtRoute(object, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(object, object)
  nameWithType.vb: ControllerBase.AcceptedAtRoute(Object, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(Object, Object)
  name.vb: AcceptedAtRoute(Object, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object,System.Object)
    name: AcceptedAtRoute
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object,System.Object)
    name: AcceptedAtRoute
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: AcceptedAtRoute(string, object, object)
  nameWithType: ControllerBase.AcceptedAtRoute(string, object, object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(string, object, object)
  nameWithType.vb: ControllerBase.AcceptedAtRoute(String, Object, Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(String, Object, Object)
  name.vb: AcceptedAtRoute(String, Object, Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object,System.Object)
    name: AcceptedAtRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object,System.Object)
    name: AcceptedAtRoute
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Challenge()
  nameWithType: ControllerBase.Challenge()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
    name: Challenge
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
    name: Challenge
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Challenge(params string[])
  nameWithType: ControllerBase.Challenge(params string[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(params string[])
  nameWithType.vb: ControllerBase.Challenge(ParamArray String())
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(ParamArray String())
  name.vb: Challenge(ParamArray String())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])
    name: Challenge
    isExternal: true
  - name: (
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])
    name: Challenge
    isExternal: true
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Challenge(AuthenticationProperties)
  nameWithType: ControllerBase.Challenge(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: Challenge
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: Challenge
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Challenge(AuthenticationProperties, params string[])
  nameWithType: ControllerBase.Challenge(AuthenticationProperties, params string[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, params string[])
  nameWithType.vb: ControllerBase.Challenge(AuthenticationProperties, ParamArray String())
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, ParamArray String())
  name.vb: Challenge(AuthenticationProperties, ParamArray String())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
    name: Challenge
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
    name: Challenge
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Forbid()
  nameWithType: ControllerBase.Forbid()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
    name: Forbid
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
    name: Forbid
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Forbid(params string[])
  nameWithType: ControllerBase.Forbid(params string[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(params string[])
  nameWithType.vb: ControllerBase.Forbid(ParamArray String())
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(ParamArray String())
  name.vb: Forbid(ParamArray String())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])
    name: Forbid
    isExternal: true
  - name: (
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])
    name: Forbid
    isExternal: true
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Forbid(AuthenticationProperties)
  nameWithType: ControllerBase.Forbid(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: Forbid
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: Forbid
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Forbid(AuthenticationProperties, params string[])
  nameWithType: ControllerBase.Forbid(AuthenticationProperties, params string[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, params string[])
  nameWithType.vb: ControllerBase.Forbid(AuthenticationProperties, ParamArray String())
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, ParamArray String())
  name.vb: Forbid(AuthenticationProperties, ParamArray String())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
    name: Forbid
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
    name: Forbid
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: SignIn(ClaimsPrincipal)
  nameWithType: ControllerBase.SignIn(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal)
    name: SignIn
    isExternal: true
  - name: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal)
    name: SignIn
    isExternal: true
  - name: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: SignIn(ClaimsPrincipal, string)
  nameWithType: ControllerBase.SignIn(ClaimsPrincipal, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, string)
  nameWithType.vb: ControllerBase.SignIn(ClaimsPrincipal, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, String)
  name.vb: SignIn(ClaimsPrincipal, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)
    name: SignIn
    isExternal: true
  - name: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)
    name: SignIn
    isExternal: true
  - name: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: SignIn(ClaimsPrincipal, AuthenticationProperties)
  nameWithType: ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: SignIn
    isExternal: true
  - name: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: SignIn
    isExternal: true
  - name: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: SignIn(ClaimsPrincipal, AuthenticationProperties, string)
  nameWithType: ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, string)
  nameWithType.vb: ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, String)
  name.vb: SignIn(ClaimsPrincipal, AuthenticationProperties, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
    name: SignIn
    isExternal: true
  - name: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
    name: SignIn
    isExternal: true
  - name: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignOut
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: SignOut()
  nameWithType: ControllerBase.SignOut()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut
    name: SignOut
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut
    name: SignOut
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: SignOut(AuthenticationProperties)
  nameWithType: ControllerBase.SignOut(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: SignOut
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: SignOut
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: SignOut(params string[])
  nameWithType: ControllerBase.SignOut(params string[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(params string[])
  nameWithType.vb: ControllerBase.SignOut(ParamArray String())
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(ParamArray String())
  name.vb: SignOut(ParamArray String())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])
    name: SignOut
    isExternal: true
  - name: (
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])
    name: SignOut
    isExternal: true
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: SignOut(AuthenticationProperties, params string[])
  nameWithType: ControllerBase.SignOut(AuthenticationProperties, params string[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, params string[])
  nameWithType.vb: ControllerBase.SignOut(AuthenticationProperties, ParamArray String())
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, ParamArray String())
  name.vb: SignOut(AuthenticationProperties, ParamArray String())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
    name: SignOut
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
    name: SignOut
    isExternal: true
  - name: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel})
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  definition: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
  name: TryUpdateModelAsync<TModel>(TModel)
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel)
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel)
  name.vb: TryUpdateModelAsync(Of TModel)(TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
    name: TryUpdateModelAsync
    isExternal: true
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  definition: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
  name: TryUpdateModelAsync<TModel>(TModel, string)
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, string)
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String)
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
    name: TryUpdateModelAsync
    isExternal: true
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  definition: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  name: TryUpdateModelAsync<TModel>(TModel, string, IValueProvider)
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
    name: TryUpdateModelAsync
    isExternal: true
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  definition: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  name: TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[])
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, ParamArray Expression(Of Func(Of TModel, Object))())
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, ParamArray System.Linq.Expressions.Expression(Of System.Func(Of TModel, Object))())
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, ParamArray Expression(Of Func(Of TModel, Object))())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
    name: TryUpdateModelAsync
    isExternal: true
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
  - name: (
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  definition: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  name: TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>)
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool>)
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, Func(Of ModelMetadata, Boolean))
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, System.Func(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, Boolean))
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, Func(Of ModelMetadata, Boolean))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    name: TryUpdateModelAsync
    isExternal: true
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  definition: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  name: TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[])
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider, ParamArray Expression(Of Func(Of TModel, Object))())
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, ParamArray System.Linq.Expressions.Expression(Of System.Func(Of TModel, Object))())
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider, ParamArray Expression(Of Func(Of TModel, Object))())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
    name: TryUpdateModelAsync
    isExternal: true
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
  - name: (
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  definition: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  name: TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>)
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool>)
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider, Func(Of ModelMetadata, Boolean))
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, Boolean))
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider, Func(Of ModelMetadata, Boolean))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    name: TryUpdateModelAsync
    isExternal: true
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: TryUpdateModelAsync(object, Type, string)
  nameWithType: ControllerBase.TryUpdateModelAsync(object, Type, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(object, System.Type, string)
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Object, Type, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Object, System.Type, String)
  name.vb: TryUpdateModelAsync(Object, Type, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>)
  nameWithType: ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(object, System.Type, string, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool>)
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Object, Type, String, IValueProvider, Func(Of ModelMetadata, Boolean))
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Object, System.Type, String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, Boolean))
  name.vb: TryUpdateModelAsync(Object, Type, String, IValueProvider, Func(Of ModelMetadata, Boolean))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: TryValidateModel(object)
  nameWithType: ControllerBase.TryValidateModel(object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(object)
  nameWithType.vb: ControllerBase.TryValidateModel(Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(Object)
  name.vb: TryValidateModel(Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)
    name: TryValidateModel
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)
    name: TryValidateModel
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: TryValidateModel(object, string)
  nameWithType: ControllerBase.TryValidateModel(object, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(object, string)
  nameWithType.vb: ControllerBase.TryValidateModel(Object, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(Object, String)
  name.vb: TryValidateModel(Object, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)
    name: TryValidateModel
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)
    name: TryValidateModel
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: HttpContext
  nameWithType: ControllerBase.HttpContext
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Request
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.Request
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Request
  nameWithType: ControllerBase.Request
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Request
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Response
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.Response
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Response
  nameWithType: ControllerBase.Response
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Response
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: RouteData
  nameWithType: ControllerBase.RouteData
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: ModelState
  nameWithType: ControllerBase.ModelState
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: ControllerContext
  nameWithType: ControllerBase.ControllerContext
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: MetadataProvider
  nameWithType: ControllerBase.MetadataProvider
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: ModelBinderFactory
  nameWithType: ControllerBase.ModelBinderFactory
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Url
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.Url
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Url
  nameWithType: ControllerBase.Url
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Url
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: ObjectValidator
  nameWithType: ControllerBase.ObjectValidator
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: ProblemDetailsFactory
  nameWithType: ControllerBase.ProblemDetailsFactory
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.User
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.User
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: User
  nameWithType: ControllerBase.User
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.User
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Empty
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.Empty
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: true
  name: Empty
  nameWithType: ControllerBase.Empty
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  parent: MicroService.Service.Helpers.ReflectionExtensions
  definition: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<FeatureServiceController>(FeatureServiceController)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<FeatureServiceController>(FeatureServiceController)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<MicroService.WebApi.V1.Controllers.FeatureServiceController>(MicroService.WebApi.V1.Controllers.FeatureServiceController)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of FeatureServiceController)(FeatureServiceController)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of MicroService.WebApi.V1.Controllers.FeatureServiceController)(MicroService.WebApi.V1.Controllers.FeatureServiceController)
  name.vb: ArePropertiesNotNull(Of FeatureServiceController)(FeatureServiceController)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.WebApi.V1.Controllers.FeatureServiceController)
    name: ArePropertiesNotNull
  - name: <
  - uid: MicroService.WebApi.V1.Controllers.FeatureServiceController
    name: FeatureServiceController
  - name: '>'
  - name: (
  - uid: MicroService.WebApi.V1.Controllers.FeatureServiceController
    name: FeatureServiceController
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.WebApi.V1.Controllers.FeatureServiceController)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - uid: MicroService.WebApi.V1.Controllers.FeatureServiceController
    name: FeatureServiceController
  - name: )
  - name: (
  - uid: MicroService.WebApi.V1.Controllers.FeatureServiceController
    name: FeatureServiceController
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: true
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Mvc
    name: Mvc
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Mvc
    name: Mvc
    isExternal: true
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
  isExternal: true
  name: TryUpdateModelAsync<TModel>(TModel)
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel)
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel)
  name.vb: TryUpdateModelAsync(Of TModel)(TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
    name: TryUpdateModelAsync
    isExternal: true
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
  isExternal: true
  name: TryUpdateModelAsync<TModel>(TModel, string)
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, string)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, string)
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String)
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
    name: TryUpdateModelAsync
    isExternal: true
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  isExternal: true
  name: TryUpdateModelAsync<TModel>(TModel, string, IValueProvider)
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider)
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
    name: TryUpdateModelAsync
    isExternal: true
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    isExternal: true
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExternal: true
  name: TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[])
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, ParamArray Expression(Of Func(Of TModel, Object))())
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, ParamArray System.Linq.Expressions.Expression(Of System.Func(Of TModel, Object))())
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, ParamArray Expression(Of Func(Of TModel, Object))())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
    name: TryUpdateModelAsync
    isExternal: true
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
  - name: (
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  isExternal: true
  name: TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>)
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool>)
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, Func(Of ModelMetadata, Boolean))
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, System.Func(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, Boolean))
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, Func(Of ModelMetadata, Boolean))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    name: TryUpdateModelAsync
    isExternal: true
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExternal: true
  name: TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[])
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider, ParamArray Expression(Of Func(Of TModel, Object))())
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, ParamArray System.Linq.Expressions.Expression(Of System.Func(Of TModel, Object))())
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider, ParamArray Expression(Of Func(Of TModel, Object))())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
    name: TryUpdateModelAsync
    isExternal: true
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
  - name: (
  - name: )
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  isExternal: true
  name: TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>)
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool>)
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider, Func(Of ModelMetadata, Boolean))
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, Boolean))
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider, Func(Of ModelMetadata, Boolean))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    name: TryUpdateModelAsync
    isExternal: true
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    name: TryUpdateModelAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
  - name: )
- uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<T>(T)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<T>(T)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<T>(T)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  name.vb: ArePropertiesNotNull(Of T)(T)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: MicroService.Service.Helpers.ReflectionExtensions
  commentId: T:MicroService.Service.Helpers.ReflectionExtensions
  parent: MicroService.Service.Helpers
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: MicroService.Service.Helpers.ReflectionExtensions
- uid: MicroService.Service.Helpers
  commentId: N:MicroService.Service.Helpers
  name: MicroService.Service.Helpers
  nameWithType: MicroService.Service.Helpers
  fullName: MicroService.Service.Helpers
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController
  commentId: T:MicroService.WebApi.V1.Controllers.FeatureServiceController
  name: FeatureServiceController
  nameWithType: FeatureServiceController
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.#ctor*
  commentId: Overload:MicroService.WebApi.V1.Controllers.FeatureServiceController.#ctor
  name: FeatureServiceController
  nameWithType: FeatureServiceController.FeatureServiceController
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.FeatureServiceController
  nameWithType.vb: FeatureServiceController.New
  fullName.vb: MicroService.WebApi.V1.Controllers.FeatureServiceController.New
  name.vb: New
- uid: ShapeServiceResolver
  commentId: T:ShapeServiceResolver
  name: ShapeServiceResolver
  nameWithType: ShapeServiceResolver
  fullName: ShapeServiceResolver
- uid: Microsoft.Extensions.Logging.ILogger{MicroService.WebApi.V1.Controllers.FeatureServiceController}
  commentId: T:Microsoft.Extensions.Logging.ILogger{MicroService.WebApi.V1.Controllers.FeatureServiceController}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<FeatureServiceController>
  nameWithType: ILogger<FeatureServiceController>
  fullName: Microsoft.Extensions.Logging.ILogger<MicroService.WebApi.V1.Controllers.FeatureServiceController>
  nameWithType.vb: ILogger(Of FeatureServiceController)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of MicroService.WebApi.V1.Controllers.FeatureServiceController)
  name.vb: ILogger(Of FeatureServiceController)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
  - name: <
  - uid: MicroService.WebApi.V1.Controllers.FeatureServiceController
    name: FeatureServiceController
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: MicroService.WebApi.V1.Controllers.FeatureServiceController
    name: FeatureServiceController
  - name: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.Get*
  commentId: Overload:MicroService.WebApi.V1.Controllers.FeatureServiceController.Get
  name: Get
  nameWithType: FeatureServiceController.Get
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.Get
- uid: Microsoft.AspNetCore.Mvc.ActionResult{System.Object}
  commentId: T:Microsoft.AspNetCore.Mvc.ActionResult{System.Object}
  parent: Microsoft.AspNetCore.Mvc
  definition: Microsoft.AspNetCore.Mvc.ActionResult`1
  name: ActionResult<object>
  nameWithType: ActionResult<object>
  fullName: Microsoft.AspNetCore.Mvc.ActionResult<object>
  nameWithType.vb: ActionResult(Of Object)
  fullName.vb: Microsoft.AspNetCore.Mvc.ActionResult(Of Object)
  name.vb: ActionResult(Of Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    isExternal: true
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ActionResult`1
  commentId: T:Microsoft.AspNetCore.Mvc.ActionResult`1
  isExternal: true
  name: ActionResult<TValue>
  nameWithType: ActionResult<TValue>
  fullName: Microsoft.AspNetCore.Mvc.ActionResult<TValue>
  nameWithType.vb: ActionResult(Of TValue)
  fullName.vb: Microsoft.AspNetCore.Mvc.ActionResult(Of TValue)
  name.vb: ActionResult(Of TValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetShapeProperties*
  commentId: Overload:MicroService.WebApi.V1.Controllers.FeatureServiceController.GetShapeProperties
  name: GetShapeProperties
  nameWithType: FeatureServiceController.GetShapeProperties
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetShapeProperties
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetFeatureList*
  commentId: Overload:MicroService.WebApi.V1.Controllers.FeatureServiceController.GetFeatureList
  name: GetFeatureList
  nameWithType: FeatureServiceController.GetFeatureList
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetFeatureList
- uid: MicroService.WebApi.Models.FeatureAttributeRequestModel
  commentId: T:MicroService.WebApi.Models.FeatureAttributeRequestModel
  parent: MicroService.WebApi.Models
  name: FeatureAttributeRequestModel
  nameWithType: FeatureAttributeRequestModel
  fullName: MicroService.WebApi.Models.FeatureAttributeRequestModel
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult{System.Object}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult{System.Object}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ActionResult<object>>
  nameWithType: Task<ActionResult<object>>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<object>>
  nameWithType.vb: Task(Of ActionResult(Of Object))
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Mvc.ActionResult(Of Object))
  name.vb: Task(Of ActionResult(Of Object))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    isExternal: true
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
- uid: MicroService.WebApi.Models
  commentId: N:MicroService.WebApi.Models
  name: MicroService.WebApi.Models
  nameWithType: MicroService.WebApi.Models
  fullName: MicroService.WebApi.Models
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.WebApi
    name: WebApi
  - name: .
  - uid: MicroService.WebApi.Models
    name: Models
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.WebApi
    name: WebApi
  - name: .
  - uid: MicroService.WebApi.Models
    name: Models
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetGeospatialLookup*
  commentId: Overload:MicroService.WebApi.V1.Controllers.FeatureServiceController.GetGeospatialLookup
  name: GetGeospatialLookup
  nameWithType: FeatureServiceController.GetGeospatialLookup
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetGeospatialLookup
- uid: MicroService.WebApi.Models.FeatureRequestModel
  commentId: T:MicroService.WebApi.Models.FeatureRequestModel
  parent: MicroService.WebApi.Models
  name: FeatureRequestModel
  nameWithType: FeatureRequestModel
  fullName: MicroService.WebApi.Models.FeatureRequestModel
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetAttributeLookup*
  commentId: Overload:MicroService.WebApi.V1.Controllers.FeatureServiceController.GetAttributeLookup
  name: GetAttributeLookup
  nameWithType: FeatureServiceController.GetAttributeLookup
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetAttributeLookup
- uid: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel
  commentId: T:MicroService.WebApi.Models.FeatureAttributeLookupRequestModel
  parent: MicroService.WebApi.Models
  name: FeatureAttributeLookupRequestModel
  nameWithType: FeatureAttributeLookupRequestModel
  fullName: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetLookupFeatureGeoJson*
  commentId: Overload:MicroService.WebApi.V1.Controllers.FeatureServiceController.GetLookupFeatureGeoJson
  name: GetLookupFeatureGeoJson
  nameWithType: FeatureServiceController.GetLookupFeatureGeoJson
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.GetLookupFeatureGeoJson
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult{NetTopologySuite.Features.FeatureCollection}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult{NetTopologySuite.Features.FeatureCollection}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ActionResult<FeatureCollection>>
  nameWithType: Task<ActionResult<FeatureCollection>>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<NetTopologySuite.Features.FeatureCollection>>
  nameWithType.vb: Task(Of ActionResult(Of FeatureCollection))
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Mvc.ActionResult(Of NetTopologySuite.Features.FeatureCollection))
  name.vb: Task(Of ActionResult(Of FeatureCollection))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    isExternal: true
  - name: <
  - uid: NetTopologySuite.Features.FeatureCollection
    name: FeatureCollection
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NetTopologySuite.Features.FeatureCollection
    name: FeatureCollection
    isExternal: true
  - name: )
  - name: )
- uid: MicroService.WebApi.V1.Controllers.FeatureServiceController.FeatureAttributeValidation*
  commentId: Overload:MicroService.WebApi.V1.Controllers.FeatureServiceController.FeatureAttributeValidation
  name: FeatureAttributeValidation
  nameWithType: FeatureServiceController.FeatureAttributeValidation
  fullName: MicroService.WebApi.V1.Controllers.FeatureServiceController.FeatureAttributeValidation
- uid: System.Func{MicroService.Service.Interfaces.IShapeService{MicroService.Service.Models.Base.ShapeBase},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{{T}}}
  commentId: T:System.Func{MicroService.Service.Interfaces.IShapeService{MicroService.Service.Models.Base.ShapeBase},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{``0}}
  parent: System
  definition: System.Func`3
  name: Func<IShapeService<ShapeBase>, List<KeyValuePair<string, object>>, IEnumerable<T>>
  nameWithType: Func<IShapeService<ShapeBase>, List<KeyValuePair<string, object>>, IEnumerable<T>>
  fullName: System.Func<MicroService.Service.Interfaces.IShapeService<MicroService.Service.Models.Base.ShapeBase>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, object>>, System.Collections.Generic.IEnumerable<T>>
  nameWithType.vb: Func(Of IShapeService(Of ShapeBase), List(Of KeyValuePair(Of String, Object)), IEnumerable(Of T))
  fullName.vb: System.Func(Of MicroService.Service.Interfaces.IShapeService(Of MicroService.Service.Models.Base.ShapeBase), System.Collections.Generic.List(Of System.Collections.Generic.KeyValuePair(Of String, Object)), System.Collections.Generic.IEnumerable(Of T))
  name.vb: Func(Of IShapeService(Of ShapeBase), List(Of KeyValuePair(Of String, Object)), IEnumerable(Of T))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
  - name: <
  - uid: MicroService.Service.Interfaces.IShapeService`1
    name: IShapeService
  - name: <
  - uid: MicroService.Service.Models.Base.ShapeBase
    name: ShapeBase
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: MicroService.Service.Interfaces.IShapeService`1
    name: IShapeService
  - name: (
  - name: Of
  - name: " "
  - uid: MicroService.Service.Models.Base.ShapeBase
    name: ShapeBase
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult{{T}}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ActionResult<T>>
  nameWithType: Task<ActionResult<T>>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<T>>
  nameWithType.vb: Task(Of ActionResult(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Mvc.ActionResult(Of T))
  name.vb: Task(Of ActionResult(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
