### YamlMime:ManagedReference
items:
- uid: MicroService.Service.Mappings.CommunityDistrictShapeProfile
  commentId: T:MicroService.Service.Mappings.CommunityDistrictShapeProfile
  id: CommunityDistrictShapeProfile
  parent: MicroService.Service.Mappings
  children:
  - MicroService.Service.Mappings.CommunityDistrictShapeProfile.#ctor
  langs:
  - csharp
  - vb
  name: CommunityDistrictShapeProfile
  nameWithType: CommunityDistrictShapeProfile
  fullName: MicroService.Service.Mappings.CommunityDistrictShapeProfile
  type: Class
  source:
    remote:
      path: src/MicroService.Service/Mappings/CommunityDistrictShapeProfile .cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: CommunityDistrictShapeProfile
    path: ../src/MicroService.Service/Mappings/CommunityDistrictShapeProfile .cs
    startLine: 8
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Mappings
  syntax:
    content: 'public class CommunityDistrictShapeProfile : ShapeProfile<CommunityDistrictShape>, IProfileExpression, IProfileConfiguration'
    content.vb: Public Class CommunityDistrictShapeProfile Inherits ShapeProfile(Of CommunityDistrictShape) Implements IProfileExpression, IProfileConfiguration
  inheritance:
  - System.Object
  - AutoMapper.Profile
  - MicroService.Service.Mappings.Base.ShapeProfile{MicroService.Service.Models.CommunityDistrictShape}
  implements:
  - AutoMapper.IProfileExpression
  - AutoMapper.IProfileConfiguration
  inheritedMembers:
  - AutoMapper.Profile.DisableConstructorMapping
  - AutoMapper.Profile.CreateProjection``2
  - AutoMapper.Profile.CreateProjection``2(AutoMapper.MemberList)
  - AutoMapper.Profile.CreateMap``2
  - AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)
  - AutoMapper.Profile.CreateMap(System.Type,System.Type)
  - AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)
  - AutoMapper.Profile.ClearPrefixes
  - AutoMapper.Profile.ReplaceMemberName(System.String,System.String)
  - AutoMapper.Profile.RecognizePrefixes(System.String[])
  - AutoMapper.Profile.RecognizePostfixes(System.String[])
  - AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])
  - AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])
  - AutoMapper.Profile.AddGlobalIgnore(System.String)
  - AutoMapper.Profile.IncludeSourceExtensionMethods(System.Type)
  - AutoMapper.Profile.ProfileName
  - AutoMapper.Profile.AllowNullDestinationValues
  - AutoMapper.Profile.AllowNullCollections
  - AutoMapper.Profile.ShouldMapProperty
  - AutoMapper.Profile.ShouldMapField
  - AutoMapper.Profile.ShouldMapMethod
  - AutoMapper.Profile.ShouldUseConstructor
  - AutoMapper.Profile.SourceMemberNamingConvention
  - AutoMapper.Profile.DestinationMemberNamingConvention
  - AutoMapper.Profile.ValueTransformers
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - MicroService.Service.Mappings.CommunityDistrictShapeProfile.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
- uid: MicroService.Service.Mappings.CommunityDistrictShapeProfile.#ctor
  commentId: M:MicroService.Service.Mappings.CommunityDistrictShapeProfile.#ctor
  id: '#ctor'
  parent: MicroService.Service.Mappings.CommunityDistrictShapeProfile
  langs:
  - csharp
  - vb
  name: CommunityDistrictShapeProfile()
  nameWithType: CommunityDistrictShapeProfile.CommunityDistrictShapeProfile()
  fullName: MicroService.Service.Mappings.CommunityDistrictShapeProfile.CommunityDistrictShapeProfile()
  type: Constructor
  source:
    remote:
      path: src/MicroService.Service/Mappings/CommunityDistrictShapeProfile .cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: .ctor
    path: ../src/MicroService.Service/Mappings/CommunityDistrictShapeProfile .cs
    startLine: 10
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Mappings
  syntax:
    content: public CommunityDistrictShapeProfile()
    content.vb: Public Sub New()
  overload: MicroService.Service.Mappings.CommunityDistrictShapeProfile.#ctor*
  nameWithType.vb: CommunityDistrictShapeProfile.New()
  fullName.vb: MicroService.Service.Mappings.CommunityDistrictShapeProfile.New()
  name.vb: New()
references:
- uid: MicroService.Service.Mappings
  commentId: N:MicroService.Service.Mappings
  name: MicroService.Service.Mappings
  nameWithType: MicroService.Service.Mappings
  fullName: MicroService.Service.Mappings
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Mappings
    name: Mappings
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Mappings
    name: Mappings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AutoMapper.Profile
  commentId: T:AutoMapper.Profile
  parent: AutoMapper
  isExternal: true
  name: Profile
  nameWithType: Profile
  fullName: AutoMapper.Profile
- uid: MicroService.Service.Mappings.Base.ShapeProfile{MicroService.Service.Models.CommunityDistrictShape}
  commentId: T:MicroService.Service.Mappings.Base.ShapeProfile{MicroService.Service.Models.CommunityDistrictShape}
  parent: MicroService.Service.Mappings.Base
  definition: MicroService.Service.Mappings.Base.ShapeProfile`1
  name: ShapeProfile<CommunityDistrictShape>
  nameWithType: ShapeProfile<CommunityDistrictShape>
  fullName: MicroService.Service.Mappings.Base.ShapeProfile<MicroService.Service.Models.CommunityDistrictShape>
  nameWithType.vb: ShapeProfile(Of CommunityDistrictShape)
  fullName.vb: MicroService.Service.Mappings.Base.ShapeProfile(Of MicroService.Service.Models.CommunityDistrictShape)
  name.vb: ShapeProfile(Of CommunityDistrictShape)
  spec.csharp:
  - uid: MicroService.Service.Mappings.Base.ShapeProfile`1
    name: ShapeProfile
  - name: <
  - uid: MicroService.Service.Models.CommunityDistrictShape
    name: CommunityDistrictShape
  - name: '>'
  spec.vb:
  - uid: MicroService.Service.Mappings.Base.ShapeProfile`1
    name: ShapeProfile
  - name: (
  - name: Of
  - name: " "
  - uid: MicroService.Service.Models.CommunityDistrictShape
    name: CommunityDistrictShape
  - name: )
- uid: AutoMapper.IProfileExpression
  commentId: T:AutoMapper.IProfileExpression
  parent: AutoMapper
  isExternal: true
  name: IProfileExpression
  nameWithType: IProfileExpression
  fullName: AutoMapper.IProfileExpression
- uid: AutoMapper.IProfileConfiguration
  commentId: T:AutoMapper.IProfileConfiguration
  parent: AutoMapper
  isExternal: true
  name: IProfileConfiguration
  nameWithType: IProfileConfiguration
  fullName: AutoMapper.IProfileConfiguration
- uid: AutoMapper.Profile.DisableConstructorMapping
  commentId: M:AutoMapper.Profile.DisableConstructorMapping
  parent: AutoMapper.Profile
  isExternal: true
  name: DisableConstructorMapping()
  nameWithType: Profile.DisableConstructorMapping()
  fullName: AutoMapper.Profile.DisableConstructorMapping()
  spec.csharp:
  - uid: AutoMapper.Profile.DisableConstructorMapping
    name: DisableConstructorMapping
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: AutoMapper.Profile.DisableConstructorMapping
    name: DisableConstructorMapping
    isExternal: true
  - name: (
  - name: )
- uid: AutoMapper.Profile.CreateProjection``2
  commentId: M:AutoMapper.Profile.CreateProjection``2
  parent: AutoMapper.Profile
  isExternal: true
  name: CreateProjection<TSource, TDestination>()
  nameWithType: Profile.CreateProjection<TSource, TDestination>()
  fullName: AutoMapper.Profile.CreateProjection<TSource, TDestination>()
  nameWithType.vb: Profile.CreateProjection(Of TSource, TDestination)()
  fullName.vb: AutoMapper.Profile.CreateProjection(Of TSource, TDestination)()
  name.vb: CreateProjection(Of TSource, TDestination)()
  spec.csharp:
  - uid: AutoMapper.Profile.CreateProjection``2
    name: CreateProjection
    isExternal: true
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TDestination
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: AutoMapper.Profile.CreateProjection``2
    name: CreateProjection
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TDestination
  - name: )
  - name: (
  - name: )
- uid: AutoMapper.Profile.CreateProjection``2(AutoMapper.MemberList)
  commentId: M:AutoMapper.Profile.CreateProjection``2(AutoMapper.MemberList)
  parent: AutoMapper.Profile
  isExternal: true
  name: CreateProjection<TSource, TDestination>(MemberList)
  nameWithType: Profile.CreateProjection<TSource, TDestination>(MemberList)
  fullName: AutoMapper.Profile.CreateProjection<TSource, TDestination>(AutoMapper.MemberList)
  nameWithType.vb: Profile.CreateProjection(Of TSource, TDestination)(MemberList)
  fullName.vb: AutoMapper.Profile.CreateProjection(Of TSource, TDestination)(AutoMapper.MemberList)
  name.vb: CreateProjection(Of TSource, TDestination)(MemberList)
  spec.csharp:
  - uid: AutoMapper.Profile.CreateProjection``2(AutoMapper.MemberList)
    name: CreateProjection
    isExternal: true
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TDestination
  - name: '>'
  - name: (
  - uid: AutoMapper.MemberList
    name: MemberList
    isExternal: true
  - name: )
  spec.vb:
  - uid: AutoMapper.Profile.CreateProjection``2(AutoMapper.MemberList)
    name: CreateProjection
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TDestination
  - name: )
  - name: (
  - uid: AutoMapper.MemberList
    name: MemberList
    isExternal: true
  - name: )
- uid: AutoMapper.Profile.CreateMap``2
  commentId: M:AutoMapper.Profile.CreateMap``2
  parent: AutoMapper.Profile
  isExternal: true
  name: CreateMap<TSource, TDestination>()
  nameWithType: Profile.CreateMap<TSource, TDestination>()
  fullName: AutoMapper.Profile.CreateMap<TSource, TDestination>()
  nameWithType.vb: Profile.CreateMap(Of TSource, TDestination)()
  fullName.vb: AutoMapper.Profile.CreateMap(Of TSource, TDestination)()
  name.vb: CreateMap(Of TSource, TDestination)()
  spec.csharp:
  - uid: AutoMapper.Profile.CreateMap``2
    name: CreateMap
    isExternal: true
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TDestination
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: AutoMapper.Profile.CreateMap``2
    name: CreateMap
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TDestination
  - name: )
  - name: (
  - name: )
- uid: AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)
  commentId: M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)
  parent: AutoMapper.Profile
  isExternal: true
  name: CreateMap<TSource, TDestination>(MemberList)
  nameWithType: Profile.CreateMap<TSource, TDestination>(MemberList)
  fullName: AutoMapper.Profile.CreateMap<TSource, TDestination>(AutoMapper.MemberList)
  nameWithType.vb: Profile.CreateMap(Of TSource, TDestination)(MemberList)
  fullName.vb: AutoMapper.Profile.CreateMap(Of TSource, TDestination)(AutoMapper.MemberList)
  name.vb: CreateMap(Of TSource, TDestination)(MemberList)
  spec.csharp:
  - uid: AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)
    name: CreateMap
    isExternal: true
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TDestination
  - name: '>'
  - name: (
  - uid: AutoMapper.MemberList
    name: MemberList
    isExternal: true
  - name: )
  spec.vb:
  - uid: AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)
    name: CreateMap
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TDestination
  - name: )
  - name: (
  - uid: AutoMapper.MemberList
    name: MemberList
    isExternal: true
  - name: )
- uid: AutoMapper.Profile.CreateMap(System.Type,System.Type)
  commentId: M:AutoMapper.Profile.CreateMap(System.Type,System.Type)
  parent: AutoMapper.Profile
  isExternal: true
  name: CreateMap(Type, Type)
  nameWithType: Profile.CreateMap(Type, Type)
  fullName: AutoMapper.Profile.CreateMap(System.Type, System.Type)
  spec.csharp:
  - uid: AutoMapper.Profile.CreateMap(System.Type,System.Type)
    name: CreateMap
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: AutoMapper.Profile.CreateMap(System.Type,System.Type)
    name: CreateMap
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)
  commentId: M:AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)
  parent: AutoMapper.Profile
  isExternal: true
  name: CreateMap(Type, Type, MemberList)
  nameWithType: Profile.CreateMap(Type, Type, MemberList)
  fullName: AutoMapper.Profile.CreateMap(System.Type, System.Type, AutoMapper.MemberList)
  spec.csharp:
  - uid: AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)
    name: CreateMap
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: AutoMapper.MemberList
    name: MemberList
    isExternal: true
  - name: )
  spec.vb:
  - uid: AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)
    name: CreateMap
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: AutoMapper.MemberList
    name: MemberList
    isExternal: true
  - name: )
- uid: AutoMapper.Profile.ClearPrefixes
  commentId: M:AutoMapper.Profile.ClearPrefixes
  parent: AutoMapper.Profile
  isExternal: true
  name: ClearPrefixes()
  nameWithType: Profile.ClearPrefixes()
  fullName: AutoMapper.Profile.ClearPrefixes()
  spec.csharp:
  - uid: AutoMapper.Profile.ClearPrefixes
    name: ClearPrefixes
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: AutoMapper.Profile.ClearPrefixes
    name: ClearPrefixes
    isExternal: true
  - name: (
  - name: )
- uid: AutoMapper.Profile.ReplaceMemberName(System.String,System.String)
  commentId: M:AutoMapper.Profile.ReplaceMemberName(System.String,System.String)
  parent: AutoMapper.Profile
  isExternal: true
  name: ReplaceMemberName(string, string)
  nameWithType: Profile.ReplaceMemberName(string, string)
  fullName: AutoMapper.Profile.ReplaceMemberName(string, string)
  nameWithType.vb: Profile.ReplaceMemberName(String, String)
  fullName.vb: AutoMapper.Profile.ReplaceMemberName(String, String)
  name.vb: ReplaceMemberName(String, String)
  spec.csharp:
  - uid: AutoMapper.Profile.ReplaceMemberName(System.String,System.String)
    name: ReplaceMemberName
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: AutoMapper.Profile.ReplaceMemberName(System.String,System.String)
    name: ReplaceMemberName
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: AutoMapper.Profile.RecognizePrefixes(System.String[])
  commentId: M:AutoMapper.Profile.RecognizePrefixes(System.String[])
  parent: AutoMapper.Profile
  isExternal: true
  name: RecognizePrefixes(params string[])
  nameWithType: Profile.RecognizePrefixes(params string[])
  fullName: AutoMapper.Profile.RecognizePrefixes(params string[])
  nameWithType.vb: Profile.RecognizePrefixes(ParamArray String())
  fullName.vb: AutoMapper.Profile.RecognizePrefixes(ParamArray String())
  name.vb: RecognizePrefixes(ParamArray String())
  spec.csharp:
  - uid: AutoMapper.Profile.RecognizePrefixes(System.String[])
    name: RecognizePrefixes
    isExternal: true
  - name: (
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: AutoMapper.Profile.RecognizePrefixes(System.String[])
    name: RecognizePrefixes
    isExternal: true
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: AutoMapper.Profile.RecognizePostfixes(System.String[])
  commentId: M:AutoMapper.Profile.RecognizePostfixes(System.String[])
  parent: AutoMapper.Profile
  isExternal: true
  name: RecognizePostfixes(params string[])
  nameWithType: Profile.RecognizePostfixes(params string[])
  fullName: AutoMapper.Profile.RecognizePostfixes(params string[])
  nameWithType.vb: Profile.RecognizePostfixes(ParamArray String())
  fullName.vb: AutoMapper.Profile.RecognizePostfixes(ParamArray String())
  name.vb: RecognizePostfixes(ParamArray String())
  spec.csharp:
  - uid: AutoMapper.Profile.RecognizePostfixes(System.String[])
    name: RecognizePostfixes
    isExternal: true
  - name: (
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: AutoMapper.Profile.RecognizePostfixes(System.String[])
    name: RecognizePostfixes
    isExternal: true
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])
  commentId: M:AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])
  parent: AutoMapper.Profile
  isExternal: true
  name: RecognizeDestinationPrefixes(params string[])
  nameWithType: Profile.RecognizeDestinationPrefixes(params string[])
  fullName: AutoMapper.Profile.RecognizeDestinationPrefixes(params string[])
  nameWithType.vb: Profile.RecognizeDestinationPrefixes(ParamArray String())
  fullName.vb: AutoMapper.Profile.RecognizeDestinationPrefixes(ParamArray String())
  name.vb: RecognizeDestinationPrefixes(ParamArray String())
  spec.csharp:
  - uid: AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])
    name: RecognizeDestinationPrefixes
    isExternal: true
  - name: (
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])
    name: RecognizeDestinationPrefixes
    isExternal: true
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])
  commentId: M:AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])
  parent: AutoMapper.Profile
  isExternal: true
  name: RecognizeDestinationPostfixes(params string[])
  nameWithType: Profile.RecognizeDestinationPostfixes(params string[])
  fullName: AutoMapper.Profile.RecognizeDestinationPostfixes(params string[])
  nameWithType.vb: Profile.RecognizeDestinationPostfixes(ParamArray String())
  fullName.vb: AutoMapper.Profile.RecognizeDestinationPostfixes(ParamArray String())
  name.vb: RecognizeDestinationPostfixes(ParamArray String())
  spec.csharp:
  - uid: AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])
    name: RecognizeDestinationPostfixes
    isExternal: true
  - name: (
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])
    name: RecognizeDestinationPostfixes
    isExternal: true
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: AutoMapper.Profile.AddGlobalIgnore(System.String)
  commentId: M:AutoMapper.Profile.AddGlobalIgnore(System.String)
  parent: AutoMapper.Profile
  isExternal: true
  name: AddGlobalIgnore(string)
  nameWithType: Profile.AddGlobalIgnore(string)
  fullName: AutoMapper.Profile.AddGlobalIgnore(string)
  nameWithType.vb: Profile.AddGlobalIgnore(String)
  fullName.vb: AutoMapper.Profile.AddGlobalIgnore(String)
  name.vb: AddGlobalIgnore(String)
  spec.csharp:
  - uid: AutoMapper.Profile.AddGlobalIgnore(System.String)
    name: AddGlobalIgnore
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: AutoMapper.Profile.AddGlobalIgnore(System.String)
    name: AddGlobalIgnore
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: AutoMapper.Profile.IncludeSourceExtensionMethods(System.Type)
  commentId: M:AutoMapper.Profile.IncludeSourceExtensionMethods(System.Type)
  parent: AutoMapper.Profile
  isExternal: true
  name: IncludeSourceExtensionMethods(Type)
  nameWithType: Profile.IncludeSourceExtensionMethods(Type)
  fullName: AutoMapper.Profile.IncludeSourceExtensionMethods(System.Type)
  spec.csharp:
  - uid: AutoMapper.Profile.IncludeSourceExtensionMethods(System.Type)
    name: IncludeSourceExtensionMethods
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: AutoMapper.Profile.IncludeSourceExtensionMethods(System.Type)
    name: IncludeSourceExtensionMethods
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: AutoMapper.Profile.ProfileName
  commentId: P:AutoMapper.Profile.ProfileName
  parent: AutoMapper.Profile
  isExternal: true
  name: ProfileName
  nameWithType: Profile.ProfileName
  fullName: AutoMapper.Profile.ProfileName
- uid: AutoMapper.Profile.AllowNullDestinationValues
  commentId: P:AutoMapper.Profile.AllowNullDestinationValues
  parent: AutoMapper.Profile
  isExternal: true
  name: AllowNullDestinationValues
  nameWithType: Profile.AllowNullDestinationValues
  fullName: AutoMapper.Profile.AllowNullDestinationValues
- uid: AutoMapper.Profile.AllowNullCollections
  commentId: P:AutoMapper.Profile.AllowNullCollections
  parent: AutoMapper.Profile
  isExternal: true
  name: AllowNullCollections
  nameWithType: Profile.AllowNullCollections
  fullName: AutoMapper.Profile.AllowNullCollections
- uid: AutoMapper.Profile.ShouldMapProperty
  commentId: P:AutoMapper.Profile.ShouldMapProperty
  parent: AutoMapper.Profile
  isExternal: true
  name: ShouldMapProperty
  nameWithType: Profile.ShouldMapProperty
  fullName: AutoMapper.Profile.ShouldMapProperty
- uid: AutoMapper.Profile.ShouldMapField
  commentId: P:AutoMapper.Profile.ShouldMapField
  parent: AutoMapper.Profile
  isExternal: true
  name: ShouldMapField
  nameWithType: Profile.ShouldMapField
  fullName: AutoMapper.Profile.ShouldMapField
- uid: AutoMapper.Profile.ShouldMapMethod
  commentId: P:AutoMapper.Profile.ShouldMapMethod
  parent: AutoMapper.Profile
  isExternal: true
  name: ShouldMapMethod
  nameWithType: Profile.ShouldMapMethod
  fullName: AutoMapper.Profile.ShouldMapMethod
- uid: AutoMapper.Profile.ShouldUseConstructor
  commentId: P:AutoMapper.Profile.ShouldUseConstructor
  parent: AutoMapper.Profile
  isExternal: true
  name: ShouldUseConstructor
  nameWithType: Profile.ShouldUseConstructor
  fullName: AutoMapper.Profile.ShouldUseConstructor
- uid: AutoMapper.Profile.SourceMemberNamingConvention
  commentId: P:AutoMapper.Profile.SourceMemberNamingConvention
  parent: AutoMapper.Profile
  isExternal: true
  name: SourceMemberNamingConvention
  nameWithType: Profile.SourceMemberNamingConvention
  fullName: AutoMapper.Profile.SourceMemberNamingConvention
- uid: AutoMapper.Profile.DestinationMemberNamingConvention
  commentId: P:AutoMapper.Profile.DestinationMemberNamingConvention
  parent: AutoMapper.Profile
  isExternal: true
  name: DestinationMemberNamingConvention
  nameWithType: Profile.DestinationMemberNamingConvention
  fullName: AutoMapper.Profile.DestinationMemberNamingConvention
- uid: AutoMapper.Profile.ValueTransformers
  commentId: P:AutoMapper.Profile.ValueTransformers
  parent: AutoMapper.Profile
  isExternal: true
  name: ValueTransformers
  nameWithType: Profile.ValueTransformers
  fullName: AutoMapper.Profile.ValueTransformers
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: MicroService.Service.Mappings.CommunityDistrictShapeProfile.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  parent: MicroService.Service.Helpers.ReflectionExtensions
  definition: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<CommunityDistrictShapeProfile>(CommunityDistrictShapeProfile)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<CommunityDistrictShapeProfile>(CommunityDistrictShapeProfile)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<MicroService.Service.Mappings.CommunityDistrictShapeProfile>(MicroService.Service.Mappings.CommunityDistrictShapeProfile)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of CommunityDistrictShapeProfile)(CommunityDistrictShapeProfile)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of MicroService.Service.Mappings.CommunityDistrictShapeProfile)(MicroService.Service.Mappings.CommunityDistrictShapeProfile)
  name.vb: ArePropertiesNotNull(Of CommunityDistrictShapeProfile)(CommunityDistrictShapeProfile)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.Service.Mappings.CommunityDistrictShapeProfile)
    name: ArePropertiesNotNull
  - name: <
  - uid: MicroService.Service.Mappings.CommunityDistrictShapeProfile
    name: CommunityDistrictShapeProfile
  - name: '>'
  - name: (
  - uid: MicroService.Service.Mappings.CommunityDistrictShapeProfile
    name: CommunityDistrictShapeProfile
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.Service.Mappings.CommunityDistrictShapeProfile)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - uid: MicroService.Service.Mappings.CommunityDistrictShapeProfile
    name: CommunityDistrictShapeProfile
  - name: )
  - name: (
  - uid: MicroService.Service.Mappings.CommunityDistrictShapeProfile
    name: CommunityDistrictShapeProfile
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutoMapper
  commentId: N:AutoMapper
  isExternal: true
  name: AutoMapper
  nameWithType: AutoMapper
  fullName: AutoMapper
- uid: MicroService.Service.Mappings.Base.ShapeProfile`1
  commentId: T:MicroService.Service.Mappings.Base.ShapeProfile`1
  name: ShapeProfile<TShape>
  nameWithType: ShapeProfile<TShape>
  fullName: MicroService.Service.Mappings.Base.ShapeProfile<TShape>
  nameWithType.vb: ShapeProfile(Of TShape)
  fullName.vb: MicroService.Service.Mappings.Base.ShapeProfile(Of TShape)
  name.vb: ShapeProfile(Of TShape)
  spec.csharp:
  - uid: MicroService.Service.Mappings.Base.ShapeProfile`1
    name: ShapeProfile
  - name: <
  - name: TShape
  - name: '>'
  spec.vb:
  - uid: MicroService.Service.Mappings.Base.ShapeProfile`1
    name: ShapeProfile
  - name: (
  - name: Of
  - name: " "
  - name: TShape
  - name: )
- uid: MicroService.Service.Mappings.Base
  commentId: N:MicroService.Service.Mappings.Base
  name: MicroService.Service.Mappings.Base
  nameWithType: MicroService.Service.Mappings.Base
  fullName: MicroService.Service.Mappings.Base
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Mappings
    name: Mappings
  - name: .
  - uid: MicroService.Service.Mappings.Base
    name: Base
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Mappings
    name: Mappings
  - name: .
  - uid: MicroService.Service.Mappings.Base
    name: Base
- uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<T>(T)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<T>(T)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<T>(T)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  name.vb: ArePropertiesNotNull(Of T)(T)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: MicroService.Service.Helpers.ReflectionExtensions
  commentId: T:MicroService.Service.Helpers.ReflectionExtensions
  parent: MicroService.Service.Helpers
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: MicroService.Service.Helpers.ReflectionExtensions
- uid: MicroService.Service.Helpers
  commentId: N:MicroService.Service.Helpers
  name: MicroService.Service.Helpers
  nameWithType: MicroService.Service.Helpers
  fullName: MicroService.Service.Helpers
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
- uid: MicroService.Service.Mappings.CommunityDistrictShapeProfile.#ctor*
  commentId: Overload:MicroService.Service.Mappings.CommunityDistrictShapeProfile.#ctor
  name: CommunityDistrictShapeProfile
  nameWithType: CommunityDistrictShapeProfile.CommunityDistrictShapeProfile
  fullName: MicroService.Service.Mappings.CommunityDistrictShapeProfile.CommunityDistrictShapeProfile
  nameWithType.vb: CommunityDistrictShapeProfile.New
  fullName.vb: MicroService.Service.Mappings.CommunityDistrictShapeProfile.New
  name.vb: New
