### YamlMime:ManagedReference
items:
- uid: MicroService.WebApi.Extensions.SystemHealthCheckBuilderExtensions
  commentId: T:MicroService.WebApi.Extensions.SystemHealthCheckBuilderExtensions
  id: SystemHealthCheckBuilderExtensions
  parent: MicroService.WebApi.Extensions
  children:
  - MicroService.WebApi.Extensions.SystemHealthCheckBuilderExtensions.AddFolderHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder,System.String,System.String,System.Nullable{Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})
  langs:
  - csharp
  - vb
  name: SystemHealthCheckBuilderExtensions
  nameWithType: SystemHealthCheckBuilderExtensions
  fullName: MicroService.WebApi.Extensions.SystemHealthCheckBuilderExtensions
  type: Class
  source:
    remote:
      path: src/MicroService.WebApi/Extensions/SystemHealthCheckBuilderExtensions.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: SystemHealthCheckBuilderExtensions
    path: ../src/MicroService.WebApi/Extensions/SystemHealthCheckBuilderExtensions.cs
    startLine: 7
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.Extensions
  summary: "\nSystem Health Check Builder Extensions\n"
  example: []
  syntax:
    content: public static class SystemHealthCheckBuilderExtensions
    content.vb: Public Module SystemHealthCheckBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MicroService.WebApi.Extensions.SystemHealthCheckBuilderExtensions.AddFolderHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder,System.String,System.String,System.Nullable{Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})
  commentId: M:MicroService.WebApi.Extensions.SystemHealthCheckBuilderExtensions.AddFolderHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder,System.String,System.String,System.Nullable{Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})
  id: AddFolderHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder,System.String,System.String,System.Nullable{Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})
  isExtensionMethod: true
  parent: MicroService.WebApi.Extensions.SystemHealthCheckBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddFolderHealthCheck(IHealthChecksBuilder, string, string?, HealthStatus?, IEnumerable<string>?, TimeSpan?)
  nameWithType: SystemHealthCheckBuilderExtensions.AddFolderHealthCheck(IHealthChecksBuilder, string, string?, HealthStatus?, IEnumerable<string>?, TimeSpan?)
  fullName: MicroService.WebApi.Extensions.SystemHealthCheckBuilderExtensions.AddFolderHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder, string, string?, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus?, System.Collections.Generic.IEnumerable<string>?, System.TimeSpan?)
  type: Method
  source:
    remote:
      path: src/MicroService.WebApi/Extensions/SystemHealthCheckBuilderExtensions.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: AddFolderHealthCheck
    path: ../src/MicroService.WebApi/Extensions/SystemHealthCheckBuilderExtensions.cs
    startLine: 19
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.Extensions
  summary: "\n/\n"
  example: []
  syntax:
    content: public static IHealthChecksBuilder AddFolderHealthCheck(this IHealthChecksBuilder builder, string folderPath, string? name = null, HealthStatus? failureStatus = null, IEnumerable<string>? tags = null, TimeSpan? timeout = null)
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder
      description: ''
    - id: folderPath
      type: System.String
      description: ''
    - id: name
      type: System.String
      description: ''
    - id: failureStatus
      type: System.Nullable{Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus}
      description: ''
    - id: tags
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: ''
    return:
      type: Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder
      description: ''
    content.vb: Public Shared Function AddFolderHealthCheck(builder As IHealthChecksBuilder, folderPath As String, name As String = Nothing, failureStatus As HealthStatus? = Nothing, tags As IEnumerable(Of String) = Nothing, timeout As TimeSpan? = Nothing) As IHealthChecksBuilder
  overload: MicroService.WebApi.Extensions.SystemHealthCheckBuilderExtensions.AddFolderHealthCheck*
  nameWithType.vb: SystemHealthCheckBuilderExtensions.AddFolderHealthCheck(IHealthChecksBuilder, String, String, HealthStatus?, IEnumerable(Of String), TimeSpan?)
  fullName.vb: MicroService.WebApi.Extensions.SystemHealthCheckBuilderExtensions.AddFolderHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder, String, String, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus?, System.Collections.Generic.IEnumerable(Of String), System.TimeSpan?)
  name.vb: AddFolderHealthCheck(IHealthChecksBuilder, String, String, HealthStatus?, IEnumerable(Of String), TimeSpan?)
references:
- uid: MicroService.WebApi.Extensions
  commentId: N:MicroService.WebApi.Extensions
  name: MicroService.WebApi.Extensions
  nameWithType: MicroService.WebApi.Extensions
  fullName: MicroService.WebApi.Extensions
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.WebApi
    name: WebApi
  - name: .
  - uid: MicroService.WebApi.Extensions
    name: Extensions
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.WebApi
    name: WebApi
  - name: .
  - uid: MicroService.WebApi.Extensions
    name: Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MicroService.WebApi.Extensions.SystemHealthCheckBuilderExtensions.AddFolderHealthCheck*
  commentId: Overload:MicroService.WebApi.Extensions.SystemHealthCheckBuilderExtensions.AddFolderHealthCheck
  name: AddFolderHealthCheck
  nameWithType: SystemHealthCheckBuilderExtensions.AddFolderHealthCheck
  fullName: MicroService.WebApi.Extensions.SystemHealthCheckBuilderExtensions.AddFolderHealthCheck
- uid: Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder
  commentId: T:Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IHealthChecksBuilder
  nameWithType: IHealthChecksBuilder
  fullName: Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Nullable{Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus}
  commentId: T:System.Nullable{Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus}
  parent: System
  definition: System.Nullable`1
  name: HealthStatus?
  nameWithType: HealthStatus?
  fullName: Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus?
  spec.csharp:
  - uid: Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus
    name: HealthStatus
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus
    name: HealthStatus
    isExternal: true
  - name: '?'
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: TimeSpan?
  nameWithType: TimeSpan?
  fullName: System.TimeSpan?
  spec.csharp:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
  - name: '?'
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
