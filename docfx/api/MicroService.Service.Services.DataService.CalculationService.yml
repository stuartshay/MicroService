### YamlMime:ManagedReference
items:
- uid: MicroService.Service.Services.DataService.CalculationService
  commentId: T:MicroService.Service.Services.DataService.CalculationService
  id: CalculationService
  parent: MicroService.Service.Services.DataService
  children:
  - MicroService.Service.Services.DataService.CalculationService.#ctor(MicroService.Data.Repository.ITestDataRepository)
  - MicroService.Service.Services.DataService.CalculationService.CalculatePercentile(System.Double)
  langs:
  - csharp
  - vb
  name: CalculationService
  nameWithType: CalculationService
  fullName: MicroService.Service.Services.DataService.CalculationService
  type: Class
  source:
    remote:
      path: src/MicroService.Service/Services/DataService/CalculationService.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: CalculationService
    path: ../src/MicroService.Service/Services/DataService/CalculationService.cs
    startLine: 9
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Services.DataService
  syntax:
    content: 'public class CalculationService : ICalculationService'
    content.vb: Public Class CalculationService Implements ICalculationService
  inheritance:
  - System.Object
  implements:
  - MicroService.Service.Interfaces.ICalculationService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - MicroService.Service.Services.DataService.CalculationService.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
- uid: MicroService.Service.Services.DataService.CalculationService.#ctor(MicroService.Data.Repository.ITestDataRepository)
  commentId: M:MicroService.Service.Services.DataService.CalculationService.#ctor(MicroService.Data.Repository.ITestDataRepository)
  id: '#ctor(MicroService.Data.Repository.ITestDataRepository)'
  parent: MicroService.Service.Services.DataService.CalculationService
  langs:
  - csharp
  - vb
  name: CalculationService(ITestDataRepository)
  nameWithType: CalculationService.CalculationService(ITestDataRepository)
  fullName: MicroService.Service.Services.DataService.CalculationService.CalculationService(MicroService.Data.Repository.ITestDataRepository)
  type: Constructor
  source:
    remote:
      path: src/MicroService.Service/Services/DataService/CalculationService.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: .ctor
    path: ../src/MicroService.Service/Services/DataService/CalculationService.cs
    startLine: 13
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Services.DataService
  syntax:
    content: public CalculationService(ITestDataRepository testDataRepository)
    parameters:
    - id: testDataRepository
      type: MicroService.Data.Repository.ITestDataRepository
    content.vb: Public Sub New(testDataRepository As ITestDataRepository)
  overload: MicroService.Service.Services.DataService.CalculationService.#ctor*
  nameWithType.vb: CalculationService.New(ITestDataRepository)
  fullName.vb: MicroService.Service.Services.DataService.CalculationService.New(MicroService.Data.Repository.ITestDataRepository)
  name.vb: New(ITestDataRepository)
- uid: MicroService.Service.Services.DataService.CalculationService.CalculatePercentile(System.Double)
  commentId: M:MicroService.Service.Services.DataService.CalculationService.CalculatePercentile(System.Double)
  id: CalculatePercentile(System.Double)
  parent: MicroService.Service.Services.DataService.CalculationService
  langs:
  - csharp
  - vb
  name: CalculatePercentile(double)
  nameWithType: CalculationService.CalculatePercentile(double)
  fullName: MicroService.Service.Services.DataService.CalculationService.CalculatePercentile(double)
  type: Method
  source:
    remote:
      path: src/MicroService.Service/Services/DataService/CalculationService.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: CalculatePercentile
    path: ../src/MicroService.Service/Services/DataService/CalculationService.cs
    startLine: 18
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Services.DataService
  syntax:
    content: public Task<double> CalculatePercentile(double excelPercentile)
    parameters:
    - id: excelPercentile
      type: System.Double
    return:
      type: System.Threading.Tasks.Task{System.Double}
    content.vb: Public Function CalculatePercentile(excelPercentile As Double) As Task(Of Double)
  overload: MicroService.Service.Services.DataService.CalculationService.CalculatePercentile*
  implements:
  - MicroService.Service.Interfaces.ICalculationService.CalculatePercentile(System.Double)
  nameWithType.vb: CalculationService.CalculatePercentile(Double)
  fullName.vb: MicroService.Service.Services.DataService.CalculationService.CalculatePercentile(Double)
  name.vb: CalculatePercentile(Double)
references:
- uid: MicroService.Service.Services.DataService
  commentId: N:MicroService.Service.Services.DataService
  name: MicroService.Service.Services.DataService
  nameWithType: MicroService.Service.Services.DataService
  fullName: MicroService.Service.Services.DataService
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Services
    name: Services
  - name: .
  - uid: MicroService.Service.Services.DataService
    name: DataService
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Services
    name: Services
  - name: .
  - uid: MicroService.Service.Services.DataService
    name: DataService
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MicroService.Service.Interfaces.ICalculationService
  commentId: T:MicroService.Service.Interfaces.ICalculationService
  parent: MicroService.Service.Interfaces
  name: ICalculationService
  nameWithType: ICalculationService
  fullName: MicroService.Service.Interfaces.ICalculationService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: MicroService.Service.Services.DataService.CalculationService.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  parent: MicroService.Service.Helpers.ReflectionExtensions
  definition: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<CalculationService>(CalculationService)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<CalculationService>(CalculationService)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<MicroService.Service.Services.DataService.CalculationService>(MicroService.Service.Services.DataService.CalculationService)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of CalculationService)(CalculationService)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of MicroService.Service.Services.DataService.CalculationService)(MicroService.Service.Services.DataService.CalculationService)
  name.vb: ArePropertiesNotNull(Of CalculationService)(CalculationService)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.Service.Services.DataService.CalculationService)
    name: ArePropertiesNotNull
  - name: <
  - uid: MicroService.Service.Services.DataService.CalculationService
    name: CalculationService
  - name: '>'
  - name: (
  - uid: MicroService.Service.Services.DataService.CalculationService
    name: CalculationService
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.Service.Services.DataService.CalculationService)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - uid: MicroService.Service.Services.DataService.CalculationService
    name: CalculationService
  - name: )
  - name: (
  - uid: MicroService.Service.Services.DataService.CalculationService
    name: CalculationService
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MicroService.Service.Interfaces
  commentId: N:MicroService.Service.Interfaces
  name: MicroService.Service.Interfaces
  nameWithType: MicroService.Service.Interfaces
  fullName: MicroService.Service.Interfaces
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Interfaces
    name: Interfaces
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Interfaces
    name: Interfaces
- uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<T>(T)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<T>(T)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<T>(T)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  name.vb: ArePropertiesNotNull(Of T)(T)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: MicroService.Service.Helpers.ReflectionExtensions
  commentId: T:MicroService.Service.Helpers.ReflectionExtensions
  parent: MicroService.Service.Helpers
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: MicroService.Service.Helpers.ReflectionExtensions
- uid: MicroService.Service.Helpers
  commentId: N:MicroService.Service.Helpers
  name: MicroService.Service.Helpers
  nameWithType: MicroService.Service.Helpers
  fullName: MicroService.Service.Helpers
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
- uid: MicroService.Service.Services.DataService.CalculationService.#ctor*
  commentId: Overload:MicroService.Service.Services.DataService.CalculationService.#ctor
  name: CalculationService
  nameWithType: CalculationService.CalculationService
  fullName: MicroService.Service.Services.DataService.CalculationService.CalculationService
  nameWithType.vb: CalculationService.New
  fullName.vb: MicroService.Service.Services.DataService.CalculationService.New
  name.vb: New
- uid: MicroService.Data.Repository.ITestDataRepository
  commentId: T:MicroService.Data.Repository.ITestDataRepository
  parent: MicroService.Data.Repository
  name: ITestDataRepository
  nameWithType: ITestDataRepository
  fullName: MicroService.Data.Repository.ITestDataRepository
- uid: MicroService.Data.Repository
  commentId: N:MicroService.Data.Repository
  name: MicroService.Data.Repository
  nameWithType: MicroService.Data.Repository
  fullName: MicroService.Data.Repository
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Data
    name: Data
  - name: .
  - uid: MicroService.Data.Repository
    name: Repository
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Data
    name: Data
  - name: .
  - uid: MicroService.Data.Repository
    name: Repository
- uid: MicroService.Service.Services.DataService.CalculationService.CalculatePercentile*
  commentId: Overload:MicroService.Service.Services.DataService.CalculationService.CalculatePercentile
  name: CalculatePercentile
  nameWithType: CalculationService.CalculatePercentile
  fullName: MicroService.Service.Services.DataService.CalculationService.CalculatePercentile
- uid: MicroService.Service.Interfaces.ICalculationService.CalculatePercentile(System.Double)
  commentId: M:MicroService.Service.Interfaces.ICalculationService.CalculatePercentile(System.Double)
  parent: MicroService.Service.Interfaces.ICalculationService
  isExternal: true
  name: CalculatePercentile(double)
  nameWithType: ICalculationService.CalculatePercentile(double)
  fullName: MicroService.Service.Interfaces.ICalculationService.CalculatePercentile(double)
  nameWithType.vb: ICalculationService.CalculatePercentile(Double)
  fullName.vb: MicroService.Service.Interfaces.ICalculationService.CalculatePercentile(Double)
  name.vb: CalculatePercentile(Double)
  spec.csharp:
  - uid: MicroService.Service.Interfaces.ICalculationService.CalculatePercentile(System.Double)
    name: CalculatePercentile
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
  - name: )
  spec.vb:
  - uid: MicroService.Service.Interfaces.ICalculationService.CalculatePercentile(System.Double)
    name: CalculatePercentile
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
  - name: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Threading.Tasks.Task{System.Double}
  commentId: T:System.Threading.Tasks.Task{System.Double}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<double>
  nameWithType: Task<double>
  fullName: System.Threading.Tasks.Task<double>
  nameWithType.vb: Task(Of Double)
  fullName.vb: System.Threading.Tasks.Task(Of Double)
  name.vb: Task(Of Double)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - uid: System.Double
    name: double
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
