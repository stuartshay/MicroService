### YamlMime:ManagedReference
items:
- uid: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions
  commentId: T:MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions
  id: ConfigureSwaggerOptions
  parent: MicroService.WebApi.Extensions.Swagger
  children:
  - MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)
  - MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)
  langs:
  - csharp
  - vb
  name: ConfigureSwaggerOptions
  nameWithType: ConfigureSwaggerOptions
  fullName: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions
  type: Class
  source:
    remote:
      path: src/MicroService.WebApi/Extensions/Swagger/ConfigureSwaggerOptions.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: ConfigureSwaggerOptions
    path: ../src/MicroService.WebApi/Extensions/Swagger/ConfigureSwaggerOptions.cs
    startLine: 13
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.Extensions.Swagger
  summary: "\nConfigures the Swagger generation options.\n"
  remarks: >-
    This allows API versioning to define a Swagger document per API version after the

    <xref href="Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider" data-throw-if-not-resolved="false"></xref> service has been resolved from the service container.
  example: []
  syntax:
    content: 'public class ConfigureSwaggerOptions : IConfigureOptions<SwaggerGenOptions>'
    content.vb: Public Class ConfigureSwaggerOptions Implements IConfigureOptions(Of SwaggerGenOptions)
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Options.IConfigureOptions{Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
- uid: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)
  commentId: M:MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)
  id: '#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)'
  parent: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions
  langs:
  - csharp
  - vb
  name: ConfigureSwaggerOptions(IApiVersionDescriptionProvider)
  nameWithType: ConfigureSwaggerOptions.ConfigureSwaggerOptions(IApiVersionDescriptionProvider)
  fullName: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.ConfigureSwaggerOptions(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)
  type: Constructor
  source:
    remote:
      path: src/MicroService.WebApi/Extensions/Swagger/ConfigureSwaggerOptions.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: .ctor
    path: ../src/MicroService.WebApi/Extensions/Swagger/ConfigureSwaggerOptions.cs
    startLine: 21
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.Extensions.Swagger
  summary: "\nInitializes a new instance of the <xref href=\"MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ConfigureSwaggerOptions(IApiVersionDescriptionProvider provider)
    parameters:
    - id: provider
      type: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider
      description: The <xref href="Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider?text=provider" data-throw-if-not-resolved="false"></xref> used to generate Swagger documents.
    content.vb: Public Sub New(provider As IApiVersionDescriptionProvider)
  overload: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.#ctor*
  nameWithType.vb: ConfigureSwaggerOptions.New(IApiVersionDescriptionProvider)
  fullName.vb: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.New(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)
  name.vb: New(IApiVersionDescriptionProvider)
- uid: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)
  commentId: M:MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)
  id: Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)
  parent: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions
  langs:
  - csharp
  - vb
  name: Configure(SwaggerGenOptions)
  nameWithType: ConfigureSwaggerOptions.Configure(SwaggerGenOptions)
  fullName: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)
  type: Method
  source:
    remote:
      path: src/MicroService.WebApi/Extensions/Swagger/ConfigureSwaggerOptions.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: Configure
    path: ../src/MicroService.WebApi/Extensions/Swagger/ConfigureSwaggerOptions.cs
    startLine: 24
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.Extensions.Swagger
  example: []
  syntax:
    content: public void Configure(SwaggerGenOptions options)
    parameters:
    - id: options
      type: Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions
    content.vb: Public Sub Configure(options As SwaggerGenOptions)
  overload: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.Configure*
  implements:
  - Microsoft.Extensions.Options.IConfigureOptions{Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions}.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)
references:
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer
  isExternal: true
  name: IApiVersionDescriptionProvider
  nameWithType: IApiVersionDescriptionProvider
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider
- uid: MicroService.WebApi.Extensions.Swagger
  commentId: N:MicroService.WebApi.Extensions.Swagger
  name: MicroService.WebApi.Extensions.Swagger
  nameWithType: MicroService.WebApi.Extensions.Swagger
  fullName: MicroService.WebApi.Extensions.Swagger
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.WebApi
    name: WebApi
  - name: .
  - uid: MicroService.WebApi.Extensions
    name: Extensions
  - name: .
  - uid: MicroService.WebApi.Extensions.Swagger
    name: Swagger
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.WebApi
    name: WebApi
  - name: .
  - uid: MicroService.WebApi.Extensions
    name: Extensions
  - name: .
  - uid: MicroService.WebApi.Extensions.Swagger
    name: Swagger
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Microsoft.Extensions.Options.IConfigureOptions{Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions}
  commentId: T:Microsoft.Extensions.Options.IConfigureOptions{Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IConfigureOptions`1
  name: IConfigureOptions<SwaggerGenOptions>
  nameWithType: IConfigureOptions<SwaggerGenOptions>
  fullName: Microsoft.Extensions.Options.IConfigureOptions<Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions>
  nameWithType.vb: IConfigureOptions(Of SwaggerGenOptions)
  fullName.vb: Microsoft.Extensions.Options.IConfigureOptions(Of Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)
  name.vb: IConfigureOptions(Of SwaggerGenOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IConfigureOptions`1
    name: IConfigureOptions
    isExternal: true
  - name: <
  - uid: Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions
    name: SwaggerGenOptions
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IConfigureOptions`1
    name: IConfigureOptions
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions
    name: SwaggerGenOptions
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  parent: MicroService.Service.Helpers.ReflectionExtensions
  definition: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<ConfigureSwaggerOptions>(ConfigureSwaggerOptions)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<ConfigureSwaggerOptions>(ConfigureSwaggerOptions)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions>(MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of ConfigureSwaggerOptions)(ConfigureSwaggerOptions)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions)(MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions)
  name.vb: ArePropertiesNotNull(Of ConfigureSwaggerOptions)(ConfigureSwaggerOptions)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions)
    name: ArePropertiesNotNull
  - name: <
  - uid: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions
    name: ConfigureSwaggerOptions
  - name: '>'
  - name: (
  - uid: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions
    name: ConfigureSwaggerOptions
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - uid: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions
    name: ConfigureSwaggerOptions
  - name: )
  - name: (
  - uid: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions
    name: ConfigureSwaggerOptions
  - name: )
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer
  commentId: N:Microsoft.AspNetCore.Mvc.ApiExplorer
  isExternal: true
  name: Microsoft.AspNetCore.Mvc.ApiExplorer
  nameWithType: Microsoft.AspNetCore.Mvc.ApiExplorer
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Mvc
    name: Mvc
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Mvc.ApiExplorer
    name: ApiExplorer
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Mvc
    name: Mvc
    isExternal: true
  - name: .
  - uid: Microsoft.AspNetCore.Mvc.ApiExplorer
    name: ApiExplorer
    isExternal: true
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Options.IConfigureOptions`1
  commentId: T:Microsoft.Extensions.Options.IConfigureOptions`1
  isExternal: true
  name: IConfigureOptions<TOptions>
  nameWithType: IConfigureOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IConfigureOptions<TOptions>
  nameWithType.vb: IConfigureOptions(Of TOptions)
  fullName.vb: Microsoft.Extensions.Options.IConfigureOptions(Of TOptions)
  name.vb: IConfigureOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IConfigureOptions`1
    name: IConfigureOptions
    isExternal: true
  - name: <
  - name: TOptions
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IConfigureOptions`1
    name: IConfigureOptions
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TOptions
  - name: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: true
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions.Options
    name: Options
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions.Options
    name: Options
    isExternal: true
- uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<T>(T)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<T>(T)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<T>(T)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  name.vb: ArePropertiesNotNull(Of T)(T)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: MicroService.Service.Helpers.ReflectionExtensions
  commentId: T:MicroService.Service.Helpers.ReflectionExtensions
  parent: MicroService.Service.Helpers
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: MicroService.Service.Helpers.ReflectionExtensions
- uid: MicroService.Service.Helpers
  commentId: N:MicroService.Service.Helpers
  name: MicroService.Service.Helpers
  nameWithType: MicroService.Service.Helpers
  fullName: MicroService.Service.Helpers
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
- uid: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions
  commentId: T:MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions
  name: ConfigureSwaggerOptions
  nameWithType: ConfigureSwaggerOptions
  fullName: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions
- uid: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.#ctor*
  commentId: Overload:MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.#ctor
  name: ConfigureSwaggerOptions
  nameWithType: ConfigureSwaggerOptions.ConfigureSwaggerOptions
  fullName: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.ConfigureSwaggerOptions
  nameWithType.vb: ConfigureSwaggerOptions.New
  fullName.vb: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.New
  name.vb: New
- uid: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.Configure*
  commentId: Overload:MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.Configure
  name: Configure
  nameWithType: ConfigureSwaggerOptions.Configure
  fullName: MicroService.WebApi.Extensions.Swagger.ConfigureSwaggerOptions.Configure
- uid: Microsoft.Extensions.Options.IConfigureOptions{Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions}.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)
  commentId: M:Microsoft.Extensions.Options.IConfigureOptions{Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions}.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)
  parent: Microsoft.Extensions.Options.IConfigureOptions{Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions}
  definition: Microsoft.Extensions.Options.IConfigureOptions`1.Configure(`0)
  name: Configure(SwaggerGenOptions)
  nameWithType: IConfigureOptions<SwaggerGenOptions>.Configure(SwaggerGenOptions)
  fullName: Microsoft.Extensions.Options.IConfigureOptions<Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions>.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)
  nameWithType.vb: IConfigureOptions(Of SwaggerGenOptions).Configure(SwaggerGenOptions)
  fullName.vb: Microsoft.Extensions.Options.IConfigureOptions(Of Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions).Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IConfigureOptions{Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions}.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)
    name: Configure
    isExternal: true
  - name: (
  - uid: Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions
    name: SwaggerGenOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Options.IConfigureOptions{Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions}.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)
    name: Configure
    isExternal: true
  - name: (
  - uid: Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions
    name: SwaggerGenOptions
    isExternal: true
  - name: )
- uid: Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions
  commentId: T:Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions
  parent: Swashbuckle.AspNetCore.SwaggerGen
  isExternal: true
  name: SwaggerGenOptions
  nameWithType: SwaggerGenOptions
  fullName: Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions
- uid: Microsoft.Extensions.Options.IConfigureOptions`1.Configure(`0)
  commentId: M:Microsoft.Extensions.Options.IConfigureOptions`1.Configure(`0)
  isExternal: true
  name: Configure(TOptions)
  nameWithType: IConfigureOptions<TOptions>.Configure(TOptions)
  fullName: Microsoft.Extensions.Options.IConfigureOptions<TOptions>.Configure(TOptions)
  nameWithType.vb: IConfigureOptions(Of TOptions).Configure(TOptions)
  fullName.vb: Microsoft.Extensions.Options.IConfigureOptions(Of TOptions).Configure(TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IConfigureOptions`1.Configure(`0)
    name: Configure
    isExternal: true
  - name: (
  - name: TOptions
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Options.IConfigureOptions`1.Configure(`0)
    name: Configure
    isExternal: true
  - name: (
  - name: TOptions
  - name: )
- uid: Swashbuckle.AspNetCore.SwaggerGen
  commentId: N:Swashbuckle.AspNetCore.SwaggerGen
  isExternal: true
  name: Swashbuckle.AspNetCore.SwaggerGen
  nameWithType: Swashbuckle.AspNetCore.SwaggerGen
  fullName: Swashbuckle.AspNetCore.SwaggerGen
  spec.csharp:
  - uid: Swashbuckle
    name: Swashbuckle
    isExternal: true
  - name: .
  - uid: Swashbuckle.AspNetCore
    name: AspNetCore
    isExternal: true
  - name: .
  - uid: Swashbuckle.AspNetCore.SwaggerGen
    name: SwaggerGen
    isExternal: true
  spec.vb:
  - uid: Swashbuckle
    name: Swashbuckle
    isExternal: true
  - name: .
  - uid: Swashbuckle.AspNetCore
    name: AspNetCore
    isExternal: true
  - name: .
  - uid: Swashbuckle.AspNetCore.SwaggerGen
    name: SwaggerGen
    isExternal: true
