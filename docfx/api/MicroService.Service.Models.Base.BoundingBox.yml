### YamlMime:ManagedReference
items:
- uid: MicroService.Service.Models.Base.BoundingBox
  commentId: T:MicroService.Service.Models.Base.BoundingBox
  id: BoundingBox
  parent: MicroService.Service.Models.Base
  children:
  - MicroService.Service.Models.Base.BoundingBox.Area
  - MicroService.Service.Models.Base.BoundingBox.Centre
  - MicroService.Service.Models.Base.BoundingBox.Diameter
  - MicroService.Service.Models.Base.BoundingBox.Height
  - MicroService.Service.Models.Base.BoundingBox.MaxExtent
  - MicroService.Service.Models.Base.BoundingBox.MaxX
  - MicroService.Service.Models.Base.BoundingBox.MaxY
  - MicroService.Service.Models.Base.BoundingBox.MinExtent
  - MicroService.Service.Models.Base.BoundingBox.MinX
  - MicroService.Service.Models.Base.BoundingBox.MinY
  - MicroService.Service.Models.Base.BoundingBox.Width
  langs:
  - csharp
  - vb
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: MicroService.Service.Models.Base.BoundingBox
  type: Class
  source:
    remote:
      path: src/MicroService.Service/Models/Base/ShapeBase.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: BoundingBox
    path: ../src/MicroService.Service/Models/Base/ShapeBase.cs
    startLine: 26
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Base
  syntax:
    content: public class BoundingBox
    content.vb: Public Class BoundingBox
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - MicroService.Service.Models.Base.BoundingBox.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
- uid: MicroService.Service.Models.Base.BoundingBox.Area
  commentId: P:MicroService.Service.Models.Base.BoundingBox.Area
  id: Area
  parent: MicroService.Service.Models.Base.BoundingBox
  langs:
  - csharp
  - vb
  name: Area
  nameWithType: BoundingBox.Area
  fullName: MicroService.Service.Models.Base.BoundingBox.Area
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/Base/ShapeBase.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: Area
    path: ../src/MicroService.Service/Models/Base/ShapeBase.cs
    startLine: 28
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Base
  syntax:
    content: public double Area { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Area As Double
  overload: MicroService.Service.Models.Base.BoundingBox.Area*
- uid: MicroService.Service.Models.Base.BoundingBox.Centre
  commentId: P:MicroService.Service.Models.Base.BoundingBox.Centre
  id: Centre
  parent: MicroService.Service.Models.Base.BoundingBox
  langs:
  - csharp
  - vb
  name: Centre
  nameWithType: BoundingBox.Centre
  fullName: MicroService.Service.Models.Base.BoundingBox.Centre
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/Base/ShapeBase.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: Centre
    path: ../src/MicroService.Service/Models/Base/ShapeBase.cs
    startLine: 30
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Base
  syntax:
    content: public CentrePoint Centre { get; set; }
    parameters: []
    return:
      type: MicroService.Service.Models.Base.CentrePoint
    content.vb: Public Property Centre As CentrePoint
  overload: MicroService.Service.Models.Base.BoundingBox.Centre*
- uid: MicroService.Service.Models.Base.BoundingBox.Diameter
  commentId: P:MicroService.Service.Models.Base.BoundingBox.Diameter
  id: Diameter
  parent: MicroService.Service.Models.Base.BoundingBox
  langs:
  - csharp
  - vb
  name: Diameter
  nameWithType: BoundingBox.Diameter
  fullName: MicroService.Service.Models.Base.BoundingBox.Diameter
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/Base/ShapeBase.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: Diameter
    path: ../src/MicroService.Service/Models/Base/ShapeBase.cs
    startLine: 32
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Base
  syntax:
    content: public double Diameter { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Diameter As Double
  overload: MicroService.Service.Models.Base.BoundingBox.Diameter*
- uid: MicroService.Service.Models.Base.BoundingBox.MinX
  commentId: P:MicroService.Service.Models.Base.BoundingBox.MinX
  id: MinX
  parent: MicroService.Service.Models.Base.BoundingBox
  langs:
  - csharp
  - vb
  name: MinX
  nameWithType: BoundingBox.MinX
  fullName: MicroService.Service.Models.Base.BoundingBox.MinX
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/Base/ShapeBase.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: MinX
    path: ../src/MicroService.Service/Models/Base/ShapeBase.cs
    startLine: 34
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Base
  syntax:
    content: public double MinX { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property MinX As Double
  overload: MicroService.Service.Models.Base.BoundingBox.MinX*
- uid: MicroService.Service.Models.Base.BoundingBox.MaxX
  commentId: P:MicroService.Service.Models.Base.BoundingBox.MaxX
  id: MaxX
  parent: MicroService.Service.Models.Base.BoundingBox
  langs:
  - csharp
  - vb
  name: MaxX
  nameWithType: BoundingBox.MaxX
  fullName: MicroService.Service.Models.Base.BoundingBox.MaxX
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/Base/ShapeBase.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: MaxX
    path: ../src/MicroService.Service/Models/Base/ShapeBase.cs
    startLine: 36
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Base
  syntax:
    content: public double MaxX { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property MaxX As Double
  overload: MicroService.Service.Models.Base.BoundingBox.MaxX*
- uid: MicroService.Service.Models.Base.BoundingBox.MinY
  commentId: P:MicroService.Service.Models.Base.BoundingBox.MinY
  id: MinY
  parent: MicroService.Service.Models.Base.BoundingBox
  langs:
  - csharp
  - vb
  name: MinY
  nameWithType: BoundingBox.MinY
  fullName: MicroService.Service.Models.Base.BoundingBox.MinY
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/Base/ShapeBase.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: MinY
    path: ../src/MicroService.Service/Models/Base/ShapeBase.cs
    startLine: 38
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Base
  syntax:
    content: public double MinY { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property MinY As Double
  overload: MicroService.Service.Models.Base.BoundingBox.MinY*
- uid: MicroService.Service.Models.Base.BoundingBox.MaxY
  commentId: P:MicroService.Service.Models.Base.BoundingBox.MaxY
  id: MaxY
  parent: MicroService.Service.Models.Base.BoundingBox
  langs:
  - csharp
  - vb
  name: MaxY
  nameWithType: BoundingBox.MaxY
  fullName: MicroService.Service.Models.Base.BoundingBox.MaxY
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/Base/ShapeBase.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: MaxY
    path: ../src/MicroService.Service/Models/Base/ShapeBase.cs
    startLine: 40
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Base
  syntax:
    content: public double MaxY { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property MaxY As Double
  overload: MicroService.Service.Models.Base.BoundingBox.MaxY*
- uid: MicroService.Service.Models.Base.BoundingBox.Width
  commentId: P:MicroService.Service.Models.Base.BoundingBox.Width
  id: Width
  parent: MicroService.Service.Models.Base.BoundingBox
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: BoundingBox.Width
  fullName: MicroService.Service.Models.Base.BoundingBox.Width
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/Base/ShapeBase.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: Width
    path: ../src/MicroService.Service/Models/Base/ShapeBase.cs
    startLine: 42
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Base
  syntax:
    content: public double Width { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Width As Double
  overload: MicroService.Service.Models.Base.BoundingBox.Width*
- uid: MicroService.Service.Models.Base.BoundingBox.Height
  commentId: P:MicroService.Service.Models.Base.BoundingBox.Height
  id: Height
  parent: MicroService.Service.Models.Base.BoundingBox
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: BoundingBox.Height
  fullName: MicroService.Service.Models.Base.BoundingBox.Height
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/Base/ShapeBase.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: Height
    path: ../src/MicroService.Service/Models/Base/ShapeBase.cs
    startLine: 44
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Base
  syntax:
    content: public double Height { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Height As Double
  overload: MicroService.Service.Models.Base.BoundingBox.Height*
- uid: MicroService.Service.Models.Base.BoundingBox.MinExtent
  commentId: P:MicroService.Service.Models.Base.BoundingBox.MinExtent
  id: MinExtent
  parent: MicroService.Service.Models.Base.BoundingBox
  langs:
  - csharp
  - vb
  name: MinExtent
  nameWithType: BoundingBox.MinExtent
  fullName: MicroService.Service.Models.Base.BoundingBox.MinExtent
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/Base/ShapeBase.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: MinExtent
    path: ../src/MicroService.Service/Models/Base/ShapeBase.cs
    startLine: 46
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Base
  syntax:
    content: public double MinExtent { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property MinExtent As Double
  overload: MicroService.Service.Models.Base.BoundingBox.MinExtent*
- uid: MicroService.Service.Models.Base.BoundingBox.MaxExtent
  commentId: P:MicroService.Service.Models.Base.BoundingBox.MaxExtent
  id: MaxExtent
  parent: MicroService.Service.Models.Base.BoundingBox
  langs:
  - csharp
  - vb
  name: MaxExtent
  nameWithType: BoundingBox.MaxExtent
  fullName: MicroService.Service.Models.Base.BoundingBox.MaxExtent
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/Base/ShapeBase.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: MaxExtent
    path: ../src/MicroService.Service/Models/Base/ShapeBase.cs
    startLine: 48
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Base
  syntax:
    content: public double MaxExtent { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property MaxExtent As Double
  overload: MicroService.Service.Models.Base.BoundingBox.MaxExtent*
references:
- uid: MicroService.Service.Models.Base
  commentId: N:MicroService.Service.Models.Base
  name: MicroService.Service.Models.Base
  nameWithType: MicroService.Service.Models.Base
  fullName: MicroService.Service.Models.Base
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Models
    name: Models
  - name: .
  - uid: MicroService.Service.Models.Base
    name: Base
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Models
    name: Models
  - name: .
  - uid: MicroService.Service.Models.Base
    name: Base
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: MicroService.Service.Models.Base.BoundingBox.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  parent: MicroService.Service.Helpers.ReflectionExtensions
  definition: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<BoundingBox>(BoundingBox)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<BoundingBox>(BoundingBox)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<MicroService.Service.Models.Base.BoundingBox>(MicroService.Service.Models.Base.BoundingBox)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of BoundingBox)(BoundingBox)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of MicroService.Service.Models.Base.BoundingBox)(MicroService.Service.Models.Base.BoundingBox)
  name.vb: ArePropertiesNotNull(Of BoundingBox)(BoundingBox)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.Service.Models.Base.BoundingBox)
    name: ArePropertiesNotNull
  - name: <
  - uid: MicroService.Service.Models.Base.BoundingBox
    name: BoundingBox
  - name: '>'
  - name: (
  - uid: MicroService.Service.Models.Base.BoundingBox
    name: BoundingBox
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.Service.Models.Base.BoundingBox)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - uid: MicroService.Service.Models.Base.BoundingBox
    name: BoundingBox
  - name: )
  - name: (
  - uid: MicroService.Service.Models.Base.BoundingBox
    name: BoundingBox
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<T>(T)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<T>(T)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<T>(T)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  name.vb: ArePropertiesNotNull(Of T)(T)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: MicroService.Service.Helpers.ReflectionExtensions
  commentId: T:MicroService.Service.Helpers.ReflectionExtensions
  parent: MicroService.Service.Helpers
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: MicroService.Service.Helpers.ReflectionExtensions
- uid: MicroService.Service.Helpers
  commentId: N:MicroService.Service.Helpers
  name: MicroService.Service.Helpers
  nameWithType: MicroService.Service.Helpers
  fullName: MicroService.Service.Helpers
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
- uid: MicroService.Service.Models.Base.BoundingBox.Area*
  commentId: Overload:MicroService.Service.Models.Base.BoundingBox.Area
  name: Area
  nameWithType: BoundingBox.Area
  fullName: MicroService.Service.Models.Base.BoundingBox.Area
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: MicroService.Service.Models.Base.BoundingBox.Centre*
  commentId: Overload:MicroService.Service.Models.Base.BoundingBox.Centre
  name: Centre
  nameWithType: BoundingBox.Centre
  fullName: MicroService.Service.Models.Base.BoundingBox.Centre
- uid: MicroService.Service.Models.Base.CentrePoint
  commentId: T:MicroService.Service.Models.Base.CentrePoint
  parent: MicroService.Service.Models.Base
  name: CentrePoint
  nameWithType: CentrePoint
  fullName: MicroService.Service.Models.Base.CentrePoint
- uid: MicroService.Service.Models.Base.BoundingBox.Diameter*
  commentId: Overload:MicroService.Service.Models.Base.BoundingBox.Diameter
  name: Diameter
  nameWithType: BoundingBox.Diameter
  fullName: MicroService.Service.Models.Base.BoundingBox.Diameter
- uid: MicroService.Service.Models.Base.BoundingBox.MinX*
  commentId: Overload:MicroService.Service.Models.Base.BoundingBox.MinX
  name: MinX
  nameWithType: BoundingBox.MinX
  fullName: MicroService.Service.Models.Base.BoundingBox.MinX
- uid: MicroService.Service.Models.Base.BoundingBox.MaxX*
  commentId: Overload:MicroService.Service.Models.Base.BoundingBox.MaxX
  name: MaxX
  nameWithType: BoundingBox.MaxX
  fullName: MicroService.Service.Models.Base.BoundingBox.MaxX
- uid: MicroService.Service.Models.Base.BoundingBox.MinY*
  commentId: Overload:MicroService.Service.Models.Base.BoundingBox.MinY
  name: MinY
  nameWithType: BoundingBox.MinY
  fullName: MicroService.Service.Models.Base.BoundingBox.MinY
- uid: MicroService.Service.Models.Base.BoundingBox.MaxY*
  commentId: Overload:MicroService.Service.Models.Base.BoundingBox.MaxY
  name: MaxY
  nameWithType: BoundingBox.MaxY
  fullName: MicroService.Service.Models.Base.BoundingBox.MaxY
- uid: MicroService.Service.Models.Base.BoundingBox.Width*
  commentId: Overload:MicroService.Service.Models.Base.BoundingBox.Width
  name: Width
  nameWithType: BoundingBox.Width
  fullName: MicroService.Service.Models.Base.BoundingBox.Width
- uid: MicroService.Service.Models.Base.BoundingBox.Height*
  commentId: Overload:MicroService.Service.Models.Base.BoundingBox.Height
  name: Height
  nameWithType: BoundingBox.Height
  fullName: MicroService.Service.Models.Base.BoundingBox.Height
- uid: MicroService.Service.Models.Base.BoundingBox.MinExtent*
  commentId: Overload:MicroService.Service.Models.Base.BoundingBox.MinExtent
  name: MinExtent
  nameWithType: BoundingBox.MinExtent
  fullName: MicroService.Service.Models.Base.BoundingBox.MinExtent
- uid: MicroService.Service.Models.Base.BoundingBox.MaxExtent*
  commentId: Overload:MicroService.Service.Models.Base.BoundingBox.MaxExtent
  name: MaxExtent
  nameWithType: BoundingBox.MaxExtent
  fullName: MicroService.Service.Models.Base.BoundingBox.MaxExtent
