### YamlMime:ManagedReference
items:
- uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute
  commentId: T:MicroService.Service.Models.Enum.Attributes.FlatFileAttribute
  id: FlatFileAttribute
  parent: MicroService.Service.Models.Enum.Attributes
  children:
  - MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.#ctor(System.String,System.String,System.String,MicroService.Service.Models.Enum.Attributes.FileTypes)
  - MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.Directory
  - MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileName
  - MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileType
  - MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.ModelName
  langs:
  - csharp
  - vb
  name: FlatFileAttribute
  nameWithType: FlatFileAttribute
  fullName: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute
  type: Class
  source:
    remote:
      path: src/MicroService.Service/Models/Enum/Attributes/FlatFileAttribute.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: FlatFileAttribute
    path: ../src/MicroService.Service/Models/Enum/Attributes/FlatFileAttribute.cs
    startLine: 2
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Enum.Attributes
  syntax:
    content: 'public class FlatFileAttribute : Attribute'
    content.vb: Public Class FlatFileAttribute Inherits Attribute
  inheritance:
  - System.Object
  - System.Attribute
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
- uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.#ctor(System.String,System.String,System.String,MicroService.Service.Models.Enum.Attributes.FileTypes)
  commentId: M:MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.#ctor(System.String,System.String,System.String,MicroService.Service.Models.Enum.Attributes.FileTypes)
  id: '#ctor(System.String,System.String,System.String,MicroService.Service.Models.Enum.Attributes.FileTypes)'
  parent: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute
  langs:
  - csharp
  - vb
  name: FlatFileAttribute(string, string, string, FileTypes)
  nameWithType: FlatFileAttribute.FlatFileAttribute(string, string, string, FileTypes)
  fullName: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FlatFileAttribute(string, string, string, MicroService.Service.Models.Enum.Attributes.FileTypes)
  type: Constructor
  source:
    remote:
      path: src/MicroService.Service/Models/Enum/Attributes/FlatFileAttribute.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: .ctor
    path: ../src/MicroService.Service/Models/Enum/Attributes/FlatFileAttribute.cs
    startLine: 4
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Enum.Attributes
  syntax:
    content: public FlatFileAttribute(string directory, string fileName, string modelName, FileTypes fileType)
    parameters:
    - id: directory
      type: System.String
    - id: fileName
      type: System.String
    - id: modelName
      type: System.String
    - id: fileType
      type: MicroService.Service.Models.Enum.Attributes.FileTypes
    content.vb: Public Sub New(directory As String, fileName As String, modelName As String, fileType As FileTypes)
  overload: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.#ctor*
  nameWithType.vb: FlatFileAttribute.New(String, String, String, FileTypes)
  fullName.vb: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.New(String, String, String, MicroService.Service.Models.Enum.Attributes.FileTypes)
  name.vb: New(String, String, String, FileTypes)
- uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.Directory
  commentId: P:MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.Directory
  id: Directory
  parent: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute
  langs:
  - csharp
  - vb
  name: Directory
  nameWithType: FlatFileAttribute.Directory
  fullName: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.Directory
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/Enum/Attributes/FlatFileAttribute.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: Directory
    path: ../src/MicroService.Service/Models/Enum/Attributes/FlatFileAttribute.cs
    startLine: 12
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Enum.Attributes
  syntax:
    content: public string Directory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Directory As String
  overload: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.Directory*
- uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileName
  commentId: P:MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileName
  id: FileName
  parent: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: FlatFileAttribute.FileName
  fullName: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileName
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/Enum/Attributes/FlatFileAttribute.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: FileName
    path: ../src/MicroService.Service/Models/Enum/Attributes/FlatFileAttribute.cs
    startLine: 14
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Enum.Attributes
  syntax:
    content: public string FileName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileName As String
  overload: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileName*
- uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.ModelName
  commentId: P:MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.ModelName
  id: ModelName
  parent: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute
  langs:
  - csharp
  - vb
  name: ModelName
  nameWithType: FlatFileAttribute.ModelName
  fullName: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.ModelName
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/Enum/Attributes/FlatFileAttribute.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: ModelName
    path: ../src/MicroService.Service/Models/Enum/Attributes/FlatFileAttribute.cs
    startLine: 16
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Enum.Attributes
  syntax:
    content: public string ModelName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ModelName As String
  overload: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.ModelName*
- uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileType
  commentId: P:MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileType
  id: FileType
  parent: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute
  langs:
  - csharp
  - vb
  name: FileType
  nameWithType: FlatFileAttribute.FileType
  fullName: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileType
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/Enum/Attributes/FlatFileAttribute.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: FileType
    path: ../src/MicroService.Service/Models/Enum/Attributes/FlatFileAttribute.cs
    startLine: 18
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models.Enum.Attributes
  syntax:
    content: public FileTypes FileType { get; set; }
    parameters: []
    return:
      type: MicroService.Service.Models.Enum.Attributes.FileTypes
    content.vb: Public Property FileType As FileTypes
  overload: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileType*
references:
- uid: MicroService.Service.Models.Enum.Attributes
  commentId: N:MicroService.Service.Models.Enum.Attributes
  name: MicroService.Service.Models.Enum.Attributes
  nameWithType: MicroService.Service.Models.Enum.Attributes
  fullName: MicroService.Service.Models.Enum.Attributes
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Models
    name: Models
  - name: .
  - uid: MicroService.Service.Models.Enum
    name: Enum
  - name: .
  - uid: MicroService.Service.Models.Enum.Attributes
    name: Attributes
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Models
    name: Models
  - name: .
  - uid: MicroService.Service.Models.Enum
    name: Enum
  - name: .
  - uid: MicroService.Service.Models.Enum.Attributes
    name: Attributes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Attribute
  commentId: T:System.Attribute
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System.Attribute.Equals(System.Object)
  commentId: M:System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: true
  name: Equals(object)
  nameWithType: Attribute.Equals(object)
  fullName: System.Attribute.Equals(object)
  nameWithType.vb: Attribute.Equals(Object)
  fullName.vb: System.Attribute.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(Assembly, Type)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(Assembly, Type, bool)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, bool)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool)
  nameWithType.vb: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
  fullName.vb: System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, Boolean)
  name.vb: GetCustomAttribute(Assembly, Type, Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(MemberInfo, Type, bool)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, bool)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)
  nameWithType.vb: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName.vb: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, Boolean)
  name.vb: GetCustomAttribute(MemberInfo, Type, Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(Module, Type)
  nameWithType: Attribute.GetCustomAttribute(Module, Type)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(Module, Type, bool)
  nameWithType: Attribute.GetCustomAttribute(Module, Type, bool)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool)
  nameWithType.vb: Attribute.GetCustomAttribute(Module, Type, Boolean)
  fullName.vb: System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, Boolean)
  name.vb: GetCustomAttribute(Module, Type, Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(ParameterInfo, Type, bool)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, bool)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool)
  nameWithType.vb: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
  fullName.vb: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, Boolean)
  name.vb: GetCustomAttribute(ParameterInfo, Type, Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: GetCustomAttribute
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Assembly)
  nameWithType: Attribute.GetCustomAttributes(Assembly)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Assembly, bool)
  nameWithType: Attribute.GetCustomAttributes(Assembly, bool)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool)
  nameWithType.vb: Attribute.GetCustomAttributes(Assembly, Boolean)
  fullName.vb: System.Attribute.GetCustomAttributes(System.Reflection.Assembly, Boolean)
  name.vb: GetCustomAttributes(Assembly, Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Assembly, Type)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Assembly, Type, bool)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, bool)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool)
  nameWithType.vb: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
  fullName.vb: System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, Boolean)
  name.vb: GetCustomAttributes(Assembly, Type, Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(MemberInfo)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(MemberInfo, bool)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, bool)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool)
  nameWithType.vb: Attribute.GetCustomAttributes(MemberInfo, Boolean)
  fullName.vb: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, Boolean)
  name.vb: GetCustomAttributes(MemberInfo, Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(MemberInfo, Type, bool)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, bool)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool)
  nameWithType.vb: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName.vb: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, Boolean)
  name.vb: GetCustomAttributes(MemberInfo, Type, Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Module)
  nameWithType: Attribute.GetCustomAttributes(Module)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Module)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Module, bool)
  nameWithType: Attribute.GetCustomAttributes(Module, bool)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Module, bool)
  nameWithType.vb: Attribute.GetCustomAttributes(Module, Boolean)
  fullName.vb: System.Attribute.GetCustomAttributes(System.Reflection.Module, Boolean)
  name.vb: GetCustomAttributes(Module, Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Module, Type)
  nameWithType: Attribute.GetCustomAttributes(Module, Type)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Module, Type, bool)
  nameWithType: Attribute.GetCustomAttributes(Module, Type, bool)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool)
  nameWithType.vb: Attribute.GetCustomAttributes(Module, Type, Boolean)
  fullName.vb: System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, Boolean)
  name.vb: GetCustomAttributes(Module, Type, Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(ParameterInfo)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(ParameterInfo, bool)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, bool)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool)
  nameWithType.vb: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
  fullName.vb: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, Boolean)
  name.vb: GetCustomAttributes(ParameterInfo, Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(ParameterInfo, Type, bool)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, bool)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool)
  nameWithType.vb: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
  fullName.vb: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, Boolean)
  name.vb: GetCustomAttributes(ParameterInfo, Type, Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: GetCustomAttributes
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.GetHashCode
  commentId: M:System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: true
  name: GetHashCode()
  nameWithType: Attribute.GetHashCode()
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Attribute.IsDefaultAttribute
  commentId: M:System.Attribute.IsDefaultAttribute
  parent: System.Attribute
  isExternal: true
  name: IsDefaultAttribute()
  nameWithType: Attribute.IsDefaultAttribute()
  fullName: System.Attribute.IsDefaultAttribute()
  spec.csharp:
  - uid: System.Attribute.IsDefaultAttribute
    name: IsDefaultAttribute
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Attribute.IsDefaultAttribute
    name: IsDefaultAttribute
    isExternal: true
  - name: (
  - name: )
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(Assembly, Type)
  nameWithType: Attribute.IsDefined(Assembly, Type)
  fullName: System.Attribute.IsDefined(System.Reflection.Assembly, System.Type)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(Assembly, Type, bool)
  nameWithType: Attribute.IsDefined(Assembly, Type, bool)
  fullName: System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool)
  nameWithType.vb: Attribute.IsDefined(Assembly, Type, Boolean)
  fullName.vb: System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, Boolean)
  name.vb: IsDefined(Assembly, Type, Boolean)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(MemberInfo, Type)
  nameWithType: Attribute.IsDefined(MemberInfo, Type)
  fullName: System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(MemberInfo, Type, bool)
  nameWithType: Attribute.IsDefined(MemberInfo, Type, bool)
  fullName: System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool)
  nameWithType.vb: Attribute.IsDefined(MemberInfo, Type, Boolean)
  fullName.vb: System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, Boolean)
  name.vb: IsDefined(MemberInfo, Type, Boolean)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(Module, Type)
  nameWithType: Attribute.IsDefined(Module, Type)
  fullName: System.Attribute.IsDefined(System.Reflection.Module, System.Type)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(Module, Type, bool)
  nameWithType: Attribute.IsDefined(Module, Type, bool)
  fullName: System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool)
  nameWithType.vb: Attribute.IsDefined(Module, Type, Boolean)
  fullName.vb: System.Attribute.IsDefined(System.Reflection.Module, System.Type, Boolean)
  name.vb: IsDefined(Module, Type, Boolean)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.Module
    name: Module
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(ParameterInfo, Type)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type)
  fullName: System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(ParameterInfo, Type, bool)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type, bool)
  fullName: System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool)
  nameWithType.vb: Attribute.IsDefined(ParameterInfo, Type, Boolean)
  fullName.vb: System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, Boolean)
  name.vb: IsDefined(ParameterInfo, Type, Boolean)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: IsDefined
    isExternal: true
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Attribute.Match(System.Object)
  commentId: M:System.Attribute.Match(System.Object)
  parent: System.Attribute
  isExternal: true
  name: Match(object)
  nameWithType: Attribute.Match(object)
  fullName: System.Attribute.Match(object)
  nameWithType.vb: Attribute.Match(Object)
  fullName.vb: System.Attribute.Match(Object)
  name.vb: Match(Object)
  spec.csharp:
  - uid: System.Attribute.Match(System.Object)
    name: Match
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Attribute.Match(System.Object)
    name: Match
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Attribute.TypeId
  commentId: P:System.Attribute.TypeId
  parent: System.Attribute
  isExternal: true
  name: TypeId
  nameWithType: Attribute.TypeId
  fullName: System.Attribute.TypeId
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  parent: MicroService.Service.Helpers.ReflectionExtensions
  definition: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<FlatFileAttribute>(FlatFileAttribute)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<FlatFileAttribute>(FlatFileAttribute)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<MicroService.Service.Models.Enum.Attributes.FlatFileAttribute>(MicroService.Service.Models.Enum.Attributes.FlatFileAttribute)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of FlatFileAttribute)(FlatFileAttribute)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of MicroService.Service.Models.Enum.Attributes.FlatFileAttribute)(MicroService.Service.Models.Enum.Attributes.FlatFileAttribute)
  name.vb: ArePropertiesNotNull(Of FlatFileAttribute)(FlatFileAttribute)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.Service.Models.Enum.Attributes.FlatFileAttribute)
    name: ArePropertiesNotNull
  - name: <
  - uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute
    name: FlatFileAttribute
  - name: '>'
  - name: (
  - uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute
    name: FlatFileAttribute
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.Service.Models.Enum.Attributes.FlatFileAttribute)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute
    name: FlatFileAttribute
  - name: )
  - name: (
  - uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute
    name: FlatFileAttribute
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<T>(T)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<T>(T)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<T>(T)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  name.vb: ArePropertiesNotNull(Of T)(T)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: MicroService.Service.Helpers.ReflectionExtensions
  commentId: T:MicroService.Service.Helpers.ReflectionExtensions
  parent: MicroService.Service.Helpers
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: MicroService.Service.Helpers.ReflectionExtensions
- uid: MicroService.Service.Helpers
  commentId: N:MicroService.Service.Helpers
  name: MicroService.Service.Helpers
  nameWithType: MicroService.Service.Helpers
  fullName: MicroService.Service.Helpers
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
- uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.#ctor*
  commentId: Overload:MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.#ctor
  name: FlatFileAttribute
  nameWithType: FlatFileAttribute.FlatFileAttribute
  fullName: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FlatFileAttribute
  nameWithType.vb: FlatFileAttribute.New
  fullName.vb: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MicroService.Service.Models.Enum.Attributes.FileTypes
  commentId: T:MicroService.Service.Models.Enum.Attributes.FileTypes
  parent: MicroService.Service.Models.Enum.Attributes
  name: FileTypes
  nameWithType: FileTypes
  fullName: MicroService.Service.Models.Enum.Attributes.FileTypes
- uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.Directory*
  commentId: Overload:MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.Directory
  name: Directory
  nameWithType: FlatFileAttribute.Directory
  fullName: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.Directory
- uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileName*
  commentId: Overload:MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileName
  name: FileName
  nameWithType: FlatFileAttribute.FileName
  fullName: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileName
- uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.ModelName*
  commentId: Overload:MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.ModelName
  name: ModelName
  nameWithType: FlatFileAttribute.ModelName
  fullName: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.ModelName
- uid: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileType*
  commentId: Overload:MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileType
  name: FileType
  nameWithType: FlatFileAttribute.FileType
  fullName: MicroService.Service.Models.Enum.Attributes.FlatFileAttribute.FileType
