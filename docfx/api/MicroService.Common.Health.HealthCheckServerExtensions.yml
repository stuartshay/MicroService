### YamlMime:ManagedReference
items:
- uid: MicroService.Common.Health.HealthCheckServerExtensions
  commentId: T:MicroService.Common.Health.HealthCheckServerExtensions
  id: HealthCheckServerExtensions
  parent: MicroService.Common.Health
  children:
  - MicroService.Common.Health.HealthCheckServerExtensions.AddVersionHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder)
  langs:
  - csharp
  - vb
  name: HealthCheckServerExtensions
  nameWithType: HealthCheckServerExtensions
  fullName: MicroService.Common.Health.HealthCheckServerExtensions
  type: Class
  source:
    remote:
      path: src/MicroService.Common/Health/HealthCheckServerExtensions.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: HealthCheckServerExtensions
    path: ../src/MicroService.Common/Health/HealthCheckServerExtensions.cs
    startLine: 4
  assemblies:
  - MicroService.Common
  namespace: MicroService.Common.Health
  syntax:
    content: public static class HealthCheckServerExtensions
    content.vb: Public Module HealthCheckServerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MicroService.Common.Health.HealthCheckServerExtensions.AddVersionHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder)
  commentId: M:MicroService.Common.Health.HealthCheckServerExtensions.AddVersionHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder)
  id: AddVersionHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder)
  isExtensionMethod: true
  parent: MicroService.Common.Health.HealthCheckServerExtensions
  langs:
  - csharp
  - vb
  name: AddVersionHealthCheck(IHealthChecksBuilder)
  nameWithType: HealthCheckServerExtensions.AddVersionHealthCheck(IHealthChecksBuilder)
  fullName: MicroService.Common.Health.HealthCheckServerExtensions.AddVersionHealthCheck(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder)
  type: Method
  source:
    remote:
      path: src/MicroService.Common/Health/HealthCheckServerExtensions.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: AddVersionHealthCheck
    path: ../src/MicroService.Common/Health/HealthCheckServerExtensions.cs
    startLine: 6
  assemblies:
  - MicroService.Common
  namespace: MicroService.Common.Health
  syntax:
    content: public static IHealthChecksBuilder AddVersionHealthCheck(this IHealthChecksBuilder builder)
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder
    return:
      type: Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder
    content.vb: Public Shared Function AddVersionHealthCheck(builder As IHealthChecksBuilder) As IHealthChecksBuilder
  overload: MicroService.Common.Health.HealthCheckServerExtensions.AddVersionHealthCheck*
references:
- uid: MicroService.Common.Health
  commentId: N:MicroService.Common.Health
  name: MicroService.Common.Health
  nameWithType: MicroService.Common.Health
  fullName: MicroService.Common.Health
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Common
    name: Common
  - name: .
  - uid: MicroService.Common.Health
    name: Health
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Common
    name: Common
  - name: .
  - uid: MicroService.Common.Health
    name: Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MicroService.Common.Health.HealthCheckServerExtensions.AddVersionHealthCheck*
  commentId: Overload:MicroService.Common.Health.HealthCheckServerExtensions.AddVersionHealthCheck
  name: AddVersionHealthCheck
  nameWithType: HealthCheckServerExtensions.AddVersionHealthCheck
  fullName: MicroService.Common.Health.HealthCheckServerExtensions.AddVersionHealthCheck
- uid: Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder
  commentId: T:Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IHealthChecksBuilder
  nameWithType: IHealthChecksBuilder
  fullName: Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
