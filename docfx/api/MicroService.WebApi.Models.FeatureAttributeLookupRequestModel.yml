### YamlMime:ManagedReference
items:
- uid: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel
  commentId: T:MicroService.WebApi.Models.FeatureAttributeLookupRequestModel
  id: FeatureAttributeLookupRequestModel
  parent: MicroService.WebApi.Models
  children:
  - MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Attributes
  - MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Key
  langs:
  - csharp
  - vb
  name: FeatureAttributeLookupRequestModel
  nameWithType: FeatureAttributeLookupRequestModel
  fullName: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel
  type: Class
  source:
    remote:
      path: src/MicroService.WebApi/Models/FeatureAttributeLookupRequestModel.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: FeatureAttributeLookupRequestModel
    path: ../src/MicroService.WebApi/Models/FeatureAttributeLookupRequestModel.cs
    startLine: 5
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.Models
  summary: "\n\n"
  example: []
  syntax:
    content: public class FeatureAttributeLookupRequestModel
    content.vb: Public Class FeatureAttributeLookupRequestModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
- uid: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Key
  commentId: P:MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Key
  id: Key
  parent: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: FeatureAttributeLookupRequestModel.Key
  fullName: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Key
  type: Property
  source:
    remote:
      path: src/MicroService.WebApi/Models/FeatureAttributeLookupRequestModel.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: Key
    path: ../src/MicroService.WebApi/Models/FeatureAttributeLookupRequestModel.cs
    startLine: 10
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.Models
  summary: "\nLookup Service Key\n"
  example: []
  syntax:
    content: public string? Key { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Key As String
  overload: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Key*
- uid: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Attributes
  commentId: P:MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Attributes
  id: Attributes
  parent: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: FeatureAttributeLookupRequestModel.Attributes
  fullName: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Attributes
  type: Property
  source:
    remote:
      path: src/MicroService.WebApi/Models/FeatureAttributeLookupRequestModel.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: Attributes
    path: ../src/MicroService.WebApi/Models/FeatureAttributeLookupRequestModel.cs
    startLine: 15
  assemblies:
  - MicroService.WebApi
  namespace: MicroService.WebApi.Models
  summary: "\nAttribute Key Value Pairs\n"
  example: []
  syntax:
    content: public List<KeyValuePair<string, object>>? Attributes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
    content.vb: Public Property Attributes As List(Of KeyValuePair(Of String, Object))
  overload: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Attributes*
references:
- uid: MicroService.WebApi.Models
  commentId: N:MicroService.WebApi.Models
  name: MicroService.WebApi.Models
  nameWithType: MicroService.WebApi.Models
  fullName: MicroService.WebApi.Models
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.WebApi
    name: WebApi
  - name: .
  - uid: MicroService.WebApi.Models
    name: Models
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.WebApi
    name: WebApi
  - name: .
  - uid: MicroService.WebApi.Models
    name: Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  parent: MicroService.Service.Helpers.ReflectionExtensions
  definition: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<FeatureAttributeLookupRequestModel>(FeatureAttributeLookupRequestModel)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<FeatureAttributeLookupRequestModel>(FeatureAttributeLookupRequestModel)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<MicroService.WebApi.Models.FeatureAttributeLookupRequestModel>(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of FeatureAttributeLookupRequestModel)(FeatureAttributeLookupRequestModel)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of MicroService.WebApi.Models.FeatureAttributeLookupRequestModel)(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel)
  name.vb: ArePropertiesNotNull(Of FeatureAttributeLookupRequestModel)(FeatureAttributeLookupRequestModel)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel)
    name: ArePropertiesNotNull
  - name: <
  - uid: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel
    name: FeatureAttributeLookupRequestModel
  - name: '>'
  - name: (
  - uid: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel
    name: FeatureAttributeLookupRequestModel
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.WebApi.Models.FeatureAttributeLookupRequestModel)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - uid: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel
    name: FeatureAttributeLookupRequestModel
  - name: )
  - name: (
  - uid: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel
    name: FeatureAttributeLookupRequestModel
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<T>(T)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<T>(T)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<T>(T)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  name.vb: ArePropertiesNotNull(Of T)(T)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: MicroService.Service.Helpers.ReflectionExtensions
  commentId: T:MicroService.Service.Helpers.ReflectionExtensions
  parent: MicroService.Service.Helpers
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: MicroService.Service.Helpers.ReflectionExtensions
- uid: MicroService.Service.Helpers
  commentId: N:MicroService.Service.Helpers
  name: MicroService.Service.Helpers
  nameWithType: MicroService.Service.Helpers
  fullName: MicroService.Service.Helpers
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
- uid: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Key*
  commentId: Overload:MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Key
  name: Key
  nameWithType: FeatureAttributeLookupRequestModel.Key
  fullName: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Key
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Attributes*
  commentId: Overload:MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Attributes
  name: Attributes
  nameWithType: FeatureAttributeLookupRequestModel.Attributes
  fullName: MicroService.WebApi.Models.FeatureAttributeLookupRequestModel.Attributes
- uid: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<KeyValuePair<string, object>>
  nameWithType: List<KeyValuePair<string, object>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, object>>
  nameWithType.vb: List(Of KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.KeyValuePair(Of String, Object))
  name.vb: List(Of KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
