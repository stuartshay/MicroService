### YamlMime:ManagedReference
items:
- uid: MicroService.Service.Extensions.ShapefileDataReaderExtensions
  commentId: T:MicroService.Service.Extensions.ShapefileDataReaderExtensions
  id: ShapefileDataReaderExtensions
  parent: MicroService.Service.Extensions
  children:
  - MicroService.Service.Extensions.ShapefileDataReaderExtensions.ReadFeatures(NetTopologySuite.IO.ShapefileDataReader)
  langs:
  - csharp
  - vb
  name: ShapefileDataReaderExtensions
  nameWithType: ShapefileDataReaderExtensions
  fullName: MicroService.Service.Extensions.ShapefileDataReaderExtensions
  type: Class
  source:
    remote:
      path: src/MicroService.Service/Extensions/ShapefileDataReaderExtensions.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: ShapefileDataReaderExtensions
    path: ../src/MicroService.Service/Extensions/ShapefileDataReaderExtensions.cs
    startLine: 6
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Extensions
  syntax:
    content: public static class ShapefileDataReaderExtensions
    content.vb: Public Module ShapefileDataReaderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MicroService.Service.Extensions.ShapefileDataReaderExtensions.ReadFeatures(NetTopologySuite.IO.ShapefileDataReader)
  commentId: M:MicroService.Service.Extensions.ShapefileDataReaderExtensions.ReadFeatures(NetTopologySuite.IO.ShapefileDataReader)
  id: ReadFeatures(NetTopologySuite.IO.ShapefileDataReader)
  isExtensionMethod: true
  parent: MicroService.Service.Extensions.ShapefileDataReaderExtensions
  langs:
  - csharp
  - vb
  name: ReadFeatures(ShapefileDataReader)
  nameWithType: ShapefileDataReaderExtensions.ReadFeatures(ShapefileDataReader)
  fullName: MicroService.Service.Extensions.ShapefileDataReaderExtensions.ReadFeatures(NetTopologySuite.IO.ShapefileDataReader)
  type: Method
  source:
    remote:
      path: src/MicroService.Service/Extensions/ShapefileDataReaderExtensions.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: ReadFeatures
    path: ../src/MicroService.Service/Extensions/ShapefileDataReaderExtensions.cs
    startLine: 8
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Extensions
  syntax:
    content: public static IReadOnlyCollection<Feature> ReadFeatures(this ShapefileDataReader shapefileDataReader)
    parameters:
    - id: shapefileDataReader
      type: NetTopologySuite.IO.ShapefileDataReader
    return:
      type: System.Collections.Generic.IReadOnlyCollection{NetTopologySuite.Features.Feature}
    content.vb: Public Shared Function ReadFeatures(shapefileDataReader As ShapefileDataReader) As IReadOnlyCollection(Of Feature)
  overload: MicroService.Service.Extensions.ShapefileDataReaderExtensions.ReadFeatures*
references:
- uid: MicroService.Service.Extensions
  commentId: N:MicroService.Service.Extensions
  name: MicroService.Service.Extensions
  nameWithType: MicroService.Service.Extensions
  fullName: MicroService.Service.Extensions
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Extensions
    name: Extensions
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Extensions
    name: Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MicroService.Service.Extensions.ShapefileDataReaderExtensions.ReadFeatures*
  commentId: Overload:MicroService.Service.Extensions.ShapefileDataReaderExtensions.ReadFeatures
  name: ReadFeatures
  nameWithType: ShapefileDataReaderExtensions.ReadFeatures
  fullName: MicroService.Service.Extensions.ShapefileDataReaderExtensions.ReadFeatures
- uid: NetTopologySuite.IO.ShapefileDataReader
  commentId: T:NetTopologySuite.IO.ShapefileDataReader
  parent: NetTopologySuite.IO
  isExternal: true
  name: ShapefileDataReader
  nameWithType: ShapefileDataReader
  fullName: NetTopologySuite.IO.ShapefileDataReader
- uid: System.Collections.Generic.IReadOnlyCollection{NetTopologySuite.Features.Feature}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{NetTopologySuite.Features.Feature}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<Feature>
  nameWithType: IReadOnlyCollection<Feature>
  fullName: System.Collections.Generic.IReadOnlyCollection<NetTopologySuite.Features.Feature>
  nameWithType.vb: IReadOnlyCollection(Of Feature)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of NetTopologySuite.Features.Feature)
  name.vb: IReadOnlyCollection(Of Feature)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
  - name: <
  - uid: NetTopologySuite.Features.Feature
    name: Feature
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NetTopologySuite.Features.Feature
    name: Feature
    isExternal: true
  - name: )
- uid: NetTopologySuite.IO
  commentId: N:NetTopologySuite.IO
  isExternal: true
  name: NetTopologySuite.IO
  nameWithType: NetTopologySuite.IO
  fullName: NetTopologySuite.IO
  spec.csharp:
  - uid: NetTopologySuite
    name: NetTopologySuite
    isExternal: true
  - name: .
  - uid: NetTopologySuite.IO
    name: IO
    isExternal: true
  spec.vb:
  - uid: NetTopologySuite
    name: NetTopologySuite
    isExternal: true
  - name: .
  - uid: NetTopologySuite.IO
    name: IO
    isExternal: true
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
