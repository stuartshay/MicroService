### YamlMime:ManagedReference
items:
- uid: MicroService.Service.Services.FlatFileService.StationFlatFileService
  commentId: T:MicroService.Service.Services.FlatFileService.StationFlatFileService
  id: StationFlatFileService
  parent: MicroService.Service.Services.FlatFileService
  children:
  - MicroService.Service.Services.FlatFileService.StationFlatFileService.#ctor
  - MicroService.Service.Services.FlatFileService.StationFlatFileService.GetAll
  langs:
  - csharp
  - vb
  name: StationFlatFileService
  nameWithType: StationFlatFileService
  fullName: MicroService.Service.Services.FlatFileService.StationFlatFileService
  type: Class
  source:
    remote:
      path: src/MicroService.Service/Services/FlatFileService/StationFlatFileService.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: StationFlatFileService
    path: ../src/MicroService.Service/Services/FlatFileService/StationFlatFileService.cs
    startLine: 14
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Services.FlatFileService
  syntax:
    content: 'public class StationFlatFileService : IFlatFileService'
    content.vb: Public Class StationFlatFileService Implements IFlatFileService
  inheritance:
  - System.Object
  implements:
  - MicroService.Service.Services.FlatFileService.IFlatFileService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - MicroService.Service.Services.FlatFileService.StationFlatFileService.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
- uid: MicroService.Service.Services.FlatFileService.StationFlatFileService.#ctor
  commentId: M:MicroService.Service.Services.FlatFileService.StationFlatFileService.#ctor
  id: '#ctor'
  parent: MicroService.Service.Services.FlatFileService.StationFlatFileService
  langs:
  - csharp
  - vb
  name: StationFlatFileService()
  nameWithType: StationFlatFileService.StationFlatFileService()
  fullName: MicroService.Service.Services.FlatFileService.StationFlatFileService.StationFlatFileService()
  type: Constructor
  source:
    remote:
      path: src/MicroService.Service/Services/FlatFileService/StationFlatFileService.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: .ctor
    path: ../src/MicroService.Service/Services/FlatFileService/StationFlatFileService.cs
    startLine: 16
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Services.FlatFileService
  syntax:
    content: public StationFlatFileService()
    content.vb: Public Sub New()
  overload: MicroService.Service.Services.FlatFileService.StationFlatFileService.#ctor*
  nameWithType.vb: StationFlatFileService.New()
  fullName.vb: MicroService.Service.Services.FlatFileService.StationFlatFileService.New()
  name.vb: New()
- uid: MicroService.Service.Services.FlatFileService.StationFlatFileService.GetAll
  commentId: M:MicroService.Service.Services.FlatFileService.StationFlatFileService.GetAll
  id: GetAll
  parent: MicroService.Service.Services.FlatFileService.StationFlatFileService
  langs:
  - csharp
  - vb
  name: GetAll()
  nameWithType: StationFlatFileService.GetAll()
  fullName: MicroService.Service.Services.FlatFileService.StationFlatFileService.GetAll()
  type: Method
  source:
    remote:
      path: src/MicroService.Service/Services/FlatFileService/StationFlatFileService.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: GetAll
    path: ../src/MicroService.Service/Services/FlatFileService/StationFlatFileService.cs
    startLine: 21
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Services.FlatFileService
  syntax:
    content: public IEnumerable<FlatFileBase> GetAll()
    return:
      type: System.Collections.Generic.IEnumerable{MicroService.Service.Models.Base.FlatFileBase}
    content.vb: Public Function GetAll() As IEnumerable(Of FlatFileBase)
  overload: MicroService.Service.Services.FlatFileService.StationFlatFileService.GetAll*
  implements:
  - MicroService.Service.Services.FlatFileService.IFlatFileService.GetAll
references:
- uid: MicroService.Service.Services.FlatFileService
  commentId: N:MicroService.Service.Services.FlatFileService
  name: MicroService.Service.Services.FlatFileService
  nameWithType: MicroService.Service.Services.FlatFileService
  fullName: MicroService.Service.Services.FlatFileService
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Services
    name: Services
  - name: .
  - uid: MicroService.Service.Services.FlatFileService
    name: FlatFileService
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Services
    name: Services
  - name: .
  - uid: MicroService.Service.Services.FlatFileService
    name: FlatFileService
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MicroService.Service.Services.FlatFileService.IFlatFileService
  commentId: T:MicroService.Service.Services.FlatFileService.IFlatFileService
  parent: MicroService.Service.Services.FlatFileService
  name: IFlatFileService
  nameWithType: IFlatFileService
  fullName: MicroService.Service.Services.FlatFileService.IFlatFileService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: MicroService.Service.Services.FlatFileService.StationFlatFileService.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  parent: MicroService.Service.Helpers.ReflectionExtensions
  definition: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<StationFlatFileService>(StationFlatFileService)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<StationFlatFileService>(StationFlatFileService)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<MicroService.Service.Services.FlatFileService.StationFlatFileService>(MicroService.Service.Services.FlatFileService.StationFlatFileService)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of StationFlatFileService)(StationFlatFileService)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of MicroService.Service.Services.FlatFileService.StationFlatFileService)(MicroService.Service.Services.FlatFileService.StationFlatFileService)
  name.vb: ArePropertiesNotNull(Of StationFlatFileService)(StationFlatFileService)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.Service.Services.FlatFileService.StationFlatFileService)
    name: ArePropertiesNotNull
  - name: <
  - uid: MicroService.Service.Services.FlatFileService.StationFlatFileService
    name: StationFlatFileService
  - name: '>'
  - name: (
  - uid: MicroService.Service.Services.FlatFileService.StationFlatFileService
    name: StationFlatFileService
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.Service.Services.FlatFileService.StationFlatFileService)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - uid: MicroService.Service.Services.FlatFileService.StationFlatFileService
    name: StationFlatFileService
  - name: )
  - name: (
  - uid: MicroService.Service.Services.FlatFileService.StationFlatFileService
    name: StationFlatFileService
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<T>(T)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<T>(T)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<T>(T)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  name.vb: ArePropertiesNotNull(Of T)(T)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: MicroService.Service.Helpers.ReflectionExtensions
  commentId: T:MicroService.Service.Helpers.ReflectionExtensions
  parent: MicroService.Service.Helpers
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: MicroService.Service.Helpers.ReflectionExtensions
- uid: MicroService.Service.Helpers
  commentId: N:MicroService.Service.Helpers
  name: MicroService.Service.Helpers
  nameWithType: MicroService.Service.Helpers
  fullName: MicroService.Service.Helpers
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
- uid: MicroService.Service.Services.FlatFileService.StationFlatFileService.#ctor*
  commentId: Overload:MicroService.Service.Services.FlatFileService.StationFlatFileService.#ctor
  name: StationFlatFileService
  nameWithType: StationFlatFileService.StationFlatFileService
  fullName: MicroService.Service.Services.FlatFileService.StationFlatFileService.StationFlatFileService
  nameWithType.vb: StationFlatFileService.New
  fullName.vb: MicroService.Service.Services.FlatFileService.StationFlatFileService.New
  name.vb: New
- uid: MicroService.Service.Services.FlatFileService.StationFlatFileService.GetAll*
  commentId: Overload:MicroService.Service.Services.FlatFileService.StationFlatFileService.GetAll
  name: GetAll
  nameWithType: StationFlatFileService.GetAll
  fullName: MicroService.Service.Services.FlatFileService.StationFlatFileService.GetAll
- uid: MicroService.Service.Services.FlatFileService.IFlatFileService.GetAll
  commentId: M:MicroService.Service.Services.FlatFileService.IFlatFileService.GetAll
  parent: MicroService.Service.Services.FlatFileService.IFlatFileService
  name: GetAll()
  nameWithType: IFlatFileService.GetAll()
  fullName: MicroService.Service.Services.FlatFileService.IFlatFileService.GetAll()
  spec.csharp:
  - uid: MicroService.Service.Services.FlatFileService.IFlatFileService.GetAll
    name: GetAll
  - name: (
  - name: )
  spec.vb:
  - uid: MicroService.Service.Services.FlatFileService.IFlatFileService.GetAll
    name: GetAll
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{MicroService.Service.Models.Base.FlatFileBase}
  commentId: T:System.Collections.Generic.IEnumerable{MicroService.Service.Models.Base.FlatFileBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FlatFileBase>
  nameWithType: IEnumerable<FlatFileBase>
  fullName: System.Collections.Generic.IEnumerable<MicroService.Service.Models.Base.FlatFileBase>
  nameWithType.vb: IEnumerable(Of FlatFileBase)
  fullName.vb: System.Collections.Generic.IEnumerable(Of MicroService.Service.Models.Base.FlatFileBase)
  name.vb: IEnumerable(Of FlatFileBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: MicroService.Service.Models.Base.FlatFileBase
    name: FlatFileBase
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: MicroService.Service.Models.Base.FlatFileBase
    name: FlatFileBase
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
