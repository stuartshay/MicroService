### YamlMime:ManagedReference
items:
- uid: MicroService.Common.Configuration.ApplicationOptions
  commentId: T:MicroService.Common.Configuration.ApplicationOptions
  id: ApplicationOptions
  parent: MicroService.Common.Configuration
  children:
  - MicroService.Common.Configuration.ApplicationOptions.GrafanaLokiConfiguration
  - MicroService.Common.Configuration.ApplicationOptions.JaegerConfiguration
  langs:
  - csharp
  - vb
  name: ApplicationOptions
  nameWithType: ApplicationOptions
  fullName: MicroService.Common.Configuration.ApplicationOptions
  type: Class
  source:
    remote:
      path: src/MicroService.Common/Configuration/ApplicationOptions.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: ApplicationOptions
    path: ../src/MicroService.Common/Configuration/ApplicationOptions.cs
    startLine: 2
  assemblies:
  - MicroService.Common
  namespace: MicroService.Common.Configuration
  syntax:
    content: public class ApplicationOptions
    content.vb: Public Class ApplicationOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - MicroService.Common.Configuration.ApplicationOptions.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
- uid: MicroService.Common.Configuration.ApplicationOptions.GrafanaLokiConfiguration
  commentId: P:MicroService.Common.Configuration.ApplicationOptions.GrafanaLokiConfiguration
  id: GrafanaLokiConfiguration
  parent: MicroService.Common.Configuration.ApplicationOptions
  langs:
  - csharp
  - vb
  name: GrafanaLokiConfiguration
  nameWithType: ApplicationOptions.GrafanaLokiConfiguration
  fullName: MicroService.Common.Configuration.ApplicationOptions.GrafanaLokiConfiguration
  type: Property
  source:
    remote:
      path: src/MicroService.Common/Configuration/ApplicationOptions.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: GrafanaLokiConfiguration
    path: ../src/MicroService.Common/Configuration/ApplicationOptions.cs
    startLine: 4
  assemblies:
  - MicroService.Common
  namespace: MicroService.Common.Configuration
  syntax:
    content: public GrafanaLokiConfiguration GrafanaLokiConfiguration { get; set; }
    parameters: []
    return:
      type: MicroService.Common.Configuration.GrafanaLokiConfiguration
    content.vb: Public Property GrafanaLokiConfiguration As GrafanaLokiConfiguration
  overload: MicroService.Common.Configuration.ApplicationOptions.GrafanaLokiConfiguration*
- uid: MicroService.Common.Configuration.ApplicationOptions.JaegerConfiguration
  commentId: P:MicroService.Common.Configuration.ApplicationOptions.JaegerConfiguration
  id: JaegerConfiguration
  parent: MicroService.Common.Configuration.ApplicationOptions
  langs:
  - csharp
  - vb
  name: JaegerConfiguration
  nameWithType: ApplicationOptions.JaegerConfiguration
  fullName: MicroService.Common.Configuration.ApplicationOptions.JaegerConfiguration
  type: Property
  source:
    remote:
      path: src/MicroService.Common/Configuration/ApplicationOptions.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: JaegerConfiguration
    path: ../src/MicroService.Common/Configuration/ApplicationOptions.cs
    startLine: 6
  assemblies:
  - MicroService.Common
  namespace: MicroService.Common.Configuration
  syntax:
    content: public JaegerConfiguration JaegerConfiguration { get; set; }
    parameters: []
    return:
      type: MicroService.Common.Configuration.JaegerConfiguration
    content.vb: Public Property JaegerConfiguration As JaegerConfiguration
  overload: MicroService.Common.Configuration.ApplicationOptions.JaegerConfiguration*
references:
- uid: MicroService.Common.Configuration
  commentId: N:MicroService.Common.Configuration
  name: MicroService.Common.Configuration
  nameWithType: MicroService.Common.Configuration
  fullName: MicroService.Common.Configuration
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Common
    name: Common
  - name: .
  - uid: MicroService.Common.Configuration
    name: Configuration
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Common
    name: Common
  - name: .
  - uid: MicroService.Common.Configuration
    name: Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: MicroService.Common.Configuration.ApplicationOptions.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  parent: MicroService.Service.Helpers.ReflectionExtensions
  definition: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<ApplicationOptions>(ApplicationOptions)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<ApplicationOptions>(ApplicationOptions)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<MicroService.Common.Configuration.ApplicationOptions>(MicroService.Common.Configuration.ApplicationOptions)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of ApplicationOptions)(ApplicationOptions)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of MicroService.Common.Configuration.ApplicationOptions)(MicroService.Common.Configuration.ApplicationOptions)
  name.vb: ArePropertiesNotNull(Of ApplicationOptions)(ApplicationOptions)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.Common.Configuration.ApplicationOptions)
    name: ArePropertiesNotNull
  - name: <
  - uid: MicroService.Common.Configuration.ApplicationOptions
    name: ApplicationOptions
  - name: '>'
  - name: (
  - uid: MicroService.Common.Configuration.ApplicationOptions
    name: ApplicationOptions
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.Common.Configuration.ApplicationOptions)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - uid: MicroService.Common.Configuration.ApplicationOptions
    name: ApplicationOptions
  - name: )
  - name: (
  - uid: MicroService.Common.Configuration.ApplicationOptions
    name: ApplicationOptions
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<T>(T)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<T>(T)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<T>(T)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  name.vb: ArePropertiesNotNull(Of T)(T)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: MicroService.Service.Helpers.ReflectionExtensions
  commentId: T:MicroService.Service.Helpers.ReflectionExtensions
  parent: MicroService.Service.Helpers
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: MicroService.Service.Helpers.ReflectionExtensions
- uid: MicroService.Service.Helpers
  commentId: N:MicroService.Service.Helpers
  name: MicroService.Service.Helpers
  nameWithType: MicroService.Service.Helpers
  fullName: MicroService.Service.Helpers
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
- uid: MicroService.Common.Configuration.ApplicationOptions.GrafanaLokiConfiguration*
  commentId: Overload:MicroService.Common.Configuration.ApplicationOptions.GrafanaLokiConfiguration
  name: GrafanaLokiConfiguration
  nameWithType: ApplicationOptions.GrafanaLokiConfiguration
  fullName: MicroService.Common.Configuration.ApplicationOptions.GrafanaLokiConfiguration
- uid: MicroService.Common.Configuration.GrafanaLokiConfiguration
  commentId: T:MicroService.Common.Configuration.GrafanaLokiConfiguration
  parent: MicroService.Common.Configuration
  name: GrafanaLokiConfiguration
  nameWithType: GrafanaLokiConfiguration
  fullName: MicroService.Common.Configuration.GrafanaLokiConfiguration
- uid: MicroService.Common.Configuration.ApplicationOptions.JaegerConfiguration*
  commentId: Overload:MicroService.Common.Configuration.ApplicationOptions.JaegerConfiguration
  name: JaegerConfiguration
  nameWithType: ApplicationOptions.JaegerConfiguration
  fullName: MicroService.Common.Configuration.ApplicationOptions.JaegerConfiguration
- uid: MicroService.Common.Configuration.JaegerConfiguration
  commentId: T:MicroService.Common.Configuration.JaegerConfiguration
  parent: MicroService.Common.Configuration
  name: JaegerConfiguration
  nameWithType: JaegerConfiguration
  fullName: MicroService.Common.Configuration.JaegerConfiguration
