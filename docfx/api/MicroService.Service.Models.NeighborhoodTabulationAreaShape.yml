### YamlMime:ManagedReference
items:
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape
  commentId: T:MicroService.Service.Models.NeighborhoodTabulationAreaShape
  id: NeighborhoodTabulationAreaShape
  parent: MicroService.Service.Models
  children:
  - MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroCode
  - MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroName
  - MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTA2020
  - MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTAName
  - MicroService.Service.Models.NeighborhoodTabulationAreaShape.CountyFIPS
  - MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTA2020
  - MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAAbbrev
  - MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAName
  - MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAType
  langs:
  - csharp
  - vb
  name: NeighborhoodTabulationAreaShape
  nameWithType: NeighborhoodTabulationAreaShape
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape
  type: Class
  source:
    remote:
      path: src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: NeighborhoodTabulationAreaShape
    path: ../src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
    startLine: 6
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models
  syntax:
    content: >-
      [ShapeProperties(ShapeProperties.NeighborhoodTabulationAreas)]

      public class NeighborhoodTabulationAreaShape : ShapeBase
    content.vb: >-
      <ShapeProperties(ShapeProperties.NeighborhoodTabulationAreas)>

      Public Class NeighborhoodTabulationAreaShape Inherits ShapeBase
  inheritance:
  - System.Object
  - MicroService.Service.Models.Base.ShapeBase
  inheritedMembers:
  - MicroService.Service.Models.Base.ShapeBase.ShapeArea
  - MicroService.Service.Models.Base.ShapeBase.ShapeLength
  - MicroService.Service.Models.Base.ShapeBase.BoundingBox
  - MicroService.Service.Models.Base.ShapeBase.Geometry
  - MicroService.Service.Models.Base.ShapeBase.Feature
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - MicroService.Service.Models.NeighborhoodTabulationAreaShape.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
  attributes:
  - type: MicroService.Service.Models.Enum.Attributes.ShapePropertiesAttribute
    ctor: MicroService.Service.Models.Enum.Attributes.ShapePropertiesAttribute.#ctor(MicroService.Service.Models.Enum.ShapeProperties)
    arguments:
    - type: MicroService.Service.Models.Enum.ShapeProperties
      value: 8
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroCode
  commentId: P:MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroCode
  id: BoroCode
  parent: MicroService.Service.Models.NeighborhoodTabulationAreaShape
  langs:
  - csharp
  - vb
  name: BoroCode
  nameWithType: NeighborhoodTabulationAreaShape.BoroCode
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroCode
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: BoroCode
    path: ../src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
    startLine: 9
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models
  syntax:
    content: >-
      [FeatureName("BoroCode")]

      public int BoroCode { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <FeatureName("BoroCode")>

      Public Property BoroCode As Integer
  overload: MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroCode*
  attributes:
  - type: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute
    ctor: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BoroCode
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroName
  commentId: P:MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroName
  id: BoroName
  parent: MicroService.Service.Models.NeighborhoodTabulationAreaShape
  langs:
  - csharp
  - vb
  name: BoroName
  nameWithType: NeighborhoodTabulationAreaShape.BoroName
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroName
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: BoroName
    path: ../src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
    startLine: 12
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models
  syntax:
    content: >-
      [FeatureName("BoroName")]

      public string BoroName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <FeatureName("BoroName")>

      Public Property BoroName As String
  overload: MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroName*
  attributes:
  - type: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute
    ctor: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BoroName
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.CountyFIPS
  commentId: P:MicroService.Service.Models.NeighborhoodTabulationAreaShape.CountyFIPS
  id: CountyFIPS
  parent: MicroService.Service.Models.NeighborhoodTabulationAreaShape
  langs:
  - csharp
  - vb
  name: CountyFIPS
  nameWithType: NeighborhoodTabulationAreaShape.CountyFIPS
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.CountyFIPS
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: CountyFIPS
    path: ../src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
    startLine: 15
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models
  syntax:
    content: >-
      [FeatureName("CountyFIPS")]

      public string CountyFIPS { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <FeatureName("CountyFIPS")>

      Public Property CountyFIPS As String
  overload: MicroService.Service.Models.NeighborhoodTabulationAreaShape.CountyFIPS*
  attributes:
  - type: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute
    ctor: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CountyFIPS
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTA2020
  commentId: P:MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTA2020
  id: NTA2020
  parent: MicroService.Service.Models.NeighborhoodTabulationAreaShape
  langs:
  - csharp
  - vb
  name: NTA2020
  nameWithType: NeighborhoodTabulationAreaShape.NTA2020
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTA2020
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: NTA2020
    path: ../src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
    startLine: 18
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models
  syntax:
    content: >-
      [FeatureName("NTA2020")]

      public string NTA2020 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <FeatureName("NTA2020")>

      Public Property NTA2020 As String
  overload: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTA2020*
  attributes:
  - type: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute
    ctor: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NTA2020
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAName
  commentId: P:MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAName
  id: NTAName
  parent: MicroService.Service.Models.NeighborhoodTabulationAreaShape
  langs:
  - csharp
  - vb
  name: NTAName
  nameWithType: NeighborhoodTabulationAreaShape.NTAName
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAName
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: NTAName
    path: ../src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
    startLine: 21
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models
  syntax:
    content: >-
      [FeatureName("NTAName")]

      public string NTAName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <FeatureName("NTAName")>

      Public Property NTAName As String
  overload: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAName*
  attributes:
  - type: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute
    ctor: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NTAName
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAAbbrev
  commentId: P:MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAAbbrev
  id: NTAAbbrev
  parent: MicroService.Service.Models.NeighborhoodTabulationAreaShape
  langs:
  - csharp
  - vb
  name: NTAAbbrev
  nameWithType: NeighborhoodTabulationAreaShape.NTAAbbrev
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAAbbrev
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: NTAAbbrev
    path: ../src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
    startLine: 24
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models
  syntax:
    content: >-
      [FeatureName("NTAAbbrev")]

      public string NTAAbbrev { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <FeatureName("NTAAbbrev")>

      Public Property NTAAbbrev As String
  overload: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAAbbrev*
  attributes:
  - type: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute
    ctor: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NTAAbbrev
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAType
  commentId: P:MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAType
  id: NTAType
  parent: MicroService.Service.Models.NeighborhoodTabulationAreaShape
  langs:
  - csharp
  - vb
  name: NTAType
  nameWithType: NeighborhoodTabulationAreaShape.NTAType
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAType
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: NTAType
    path: ../src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
    startLine: 27
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models
  syntax:
    content: >-
      [FeatureName("NTAType")]

      public int NTAType { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <FeatureName("NTAType")>

      Public Property NTAType As Integer
  overload: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAType*
  attributes:
  - type: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute
    ctor: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NTAType
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTA2020
  commentId: P:MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTA2020
  id: CDTA2020
  parent: MicroService.Service.Models.NeighborhoodTabulationAreaShape
  langs:
  - csharp
  - vb
  name: CDTA2020
  nameWithType: NeighborhoodTabulationAreaShape.CDTA2020
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTA2020
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: CDTA2020
    path: ../src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
    startLine: 30
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models
  syntax:
    content: >-
      [FeatureName("CDTA2020")]

      public string CDTA2020 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <FeatureName("CDTA2020")>

      Public Property CDTA2020 As String
  overload: MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTA2020*
  attributes:
  - type: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute
    ctor: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CDTA2020
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTAName
  commentId: P:MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTAName
  id: CDTAName
  parent: MicroService.Service.Models.NeighborhoodTabulationAreaShape
  langs:
  - csharp
  - vb
  name: CDTAName
  nameWithType: NeighborhoodTabulationAreaShape.CDTAName
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTAName
  type: Property
  source:
    remote:
      path: src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
      branch: develop
      repo: https://github.com/stuartshay/MicroService.git
    id: CDTAName
    path: ../src/MicroService.Service/Models/NeighborhoodTabulationAreaShape.cs
    startLine: 33
  assemblies:
  - MicroService.Service
  namespace: MicroService.Service.Models
  syntax:
    content: >-
      [FeatureName("CDTAName")]

      public string CDTAName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <FeatureName("CDTAName")>

      Public Property CDTAName As String
  overload: MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTAName*
  attributes:
  - type: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute
    ctor: MicroService.Service.Models.Enum.Attributes.FeatureNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CDTAName
references:
- uid: MicroService.Service.Models
  commentId: N:MicroService.Service.Models
  name: MicroService.Service.Models
  nameWithType: MicroService.Service.Models
  fullName: MicroService.Service.Models
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Models
    name: Models
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Models
    name: Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MicroService.Service.Models.Base.ShapeBase
  commentId: T:MicroService.Service.Models.Base.ShapeBase
  parent: MicroService.Service.Models.Base
  name: ShapeBase
  nameWithType: ShapeBase
  fullName: MicroService.Service.Models.Base.ShapeBase
- uid: MicroService.Service.Models.Base.ShapeBase.ShapeArea
  commentId: P:MicroService.Service.Models.Base.ShapeBase.ShapeArea
  parent: MicroService.Service.Models.Base.ShapeBase
  name: ShapeArea
  nameWithType: ShapeBase.ShapeArea
  fullName: MicroService.Service.Models.Base.ShapeBase.ShapeArea
- uid: MicroService.Service.Models.Base.ShapeBase.ShapeLength
  commentId: P:MicroService.Service.Models.Base.ShapeBase.ShapeLength
  parent: MicroService.Service.Models.Base.ShapeBase
  name: ShapeLength
  nameWithType: ShapeBase.ShapeLength
  fullName: MicroService.Service.Models.Base.ShapeBase.ShapeLength
- uid: MicroService.Service.Models.Base.ShapeBase.BoundingBox
  commentId: P:MicroService.Service.Models.Base.ShapeBase.BoundingBox
  parent: MicroService.Service.Models.Base.ShapeBase
  name: BoundingBox
  nameWithType: ShapeBase.BoundingBox
  fullName: MicroService.Service.Models.Base.ShapeBase.BoundingBox
- uid: MicroService.Service.Models.Base.ShapeBase.Geometry
  commentId: P:MicroService.Service.Models.Base.ShapeBase.Geometry
  parent: MicroService.Service.Models.Base.ShapeBase
  name: Geometry
  nameWithType: ShapeBase.Geometry
  fullName: MicroService.Service.Models.Base.ShapeBase.Geometry
- uid: MicroService.Service.Models.Base.ShapeBase.Feature
  commentId: P:MicroService.Service.Models.Base.ShapeBase.Feature
  parent: MicroService.Service.Models.Base.ShapeBase
  name: Feature
  nameWithType: ShapeBase.Feature
  fullName: MicroService.Service.Models.Base.ShapeBase.Feature
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  parent: MicroService.Service.Helpers.ReflectionExtensions
  definition: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<NeighborhoodTabulationAreaShape>(NeighborhoodTabulationAreaShape)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<NeighborhoodTabulationAreaShape>(NeighborhoodTabulationAreaShape)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<MicroService.Service.Models.NeighborhoodTabulationAreaShape>(MicroService.Service.Models.NeighborhoodTabulationAreaShape)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of NeighborhoodTabulationAreaShape)(NeighborhoodTabulationAreaShape)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of MicroService.Service.Models.NeighborhoodTabulationAreaShape)(MicroService.Service.Models.NeighborhoodTabulationAreaShape)
  name.vb: ArePropertiesNotNull(Of NeighborhoodTabulationAreaShape)(NeighborhoodTabulationAreaShape)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.Service.Models.NeighborhoodTabulationAreaShape)
    name: ArePropertiesNotNull
  - name: <
  - uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape
    name: NeighborhoodTabulationAreaShape
  - name: '>'
  - name: (
  - uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape
    name: NeighborhoodTabulationAreaShape
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(MicroService.Service.Models.NeighborhoodTabulationAreaShape)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape
    name: NeighborhoodTabulationAreaShape
  - name: )
  - name: (
  - uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape
    name: NeighborhoodTabulationAreaShape
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MicroService.Service.Models.Base
  commentId: N:MicroService.Service.Models.Base
  name: MicroService.Service.Models.Base
  nameWithType: MicroService.Service.Models.Base
  fullName: MicroService.Service.Models.Base
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Models
    name: Models
  - name: .
  - uid: MicroService.Service.Models.Base
    name: Base
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Models
    name: Models
  - name: .
  - uid: MicroService.Service.Models.Base
    name: Base
- uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  commentId: M:MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
  name: ArePropertiesNotNull<T>(T)
  nameWithType: ReflectionExtensions.ArePropertiesNotNull<T>(T)
  fullName: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull<T>(T)
  nameWithType.vb: ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  fullName.vb: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull(Of T)(T)
  name.vb: ArePropertiesNotNull(Of T)(T)
  spec.csharp:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: MicroService.Service.Helpers.ReflectionExtensions.ArePropertiesNotNull``1(``0)
    name: ArePropertiesNotNull
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: MicroService.Service.Helpers.ReflectionExtensions
  commentId: T:MicroService.Service.Helpers.ReflectionExtensions
  parent: MicroService.Service.Helpers
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: MicroService.Service.Helpers.ReflectionExtensions
- uid: MicroService.Service.Helpers
  commentId: N:MicroService.Service.Helpers
  name: MicroService.Service.Helpers
  nameWithType: MicroService.Service.Helpers
  fullName: MicroService.Service.Helpers
  spec.csharp:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
  spec.vb:
  - uid: MicroService
    name: MicroService
  - name: .
  - uid: MicroService.Service
    name: Service
  - name: .
  - uid: MicroService.Service.Helpers
    name: Helpers
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroCode*
  commentId: Overload:MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroCode
  name: BoroCode
  nameWithType: NeighborhoodTabulationAreaShape.BoroCode
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroName*
  commentId: Overload:MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroName
  name: BoroName
  nameWithType: NeighborhoodTabulationAreaShape.BoroName
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.BoroName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.CountyFIPS*
  commentId: Overload:MicroService.Service.Models.NeighborhoodTabulationAreaShape.CountyFIPS
  name: CountyFIPS
  nameWithType: NeighborhoodTabulationAreaShape.CountyFIPS
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.CountyFIPS
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTA2020*
  commentId: Overload:MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTA2020
  name: NTA2020
  nameWithType: NeighborhoodTabulationAreaShape.NTA2020
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTA2020
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAName*
  commentId: Overload:MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAName
  name: NTAName
  nameWithType: NeighborhoodTabulationAreaShape.NTAName
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAName
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAAbbrev*
  commentId: Overload:MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAAbbrev
  name: NTAAbbrev
  nameWithType: NeighborhoodTabulationAreaShape.NTAAbbrev
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAAbbrev
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAType*
  commentId: Overload:MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAType
  name: NTAType
  nameWithType: NeighborhoodTabulationAreaShape.NTAType
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.NTAType
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTA2020*
  commentId: Overload:MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTA2020
  name: CDTA2020
  nameWithType: NeighborhoodTabulationAreaShape.CDTA2020
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTA2020
- uid: MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTAName*
  commentId: Overload:MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTAName
  name: CDTAName
  nameWithType: NeighborhoodTabulationAreaShape.CDTAName
  fullName: MicroService.Service.Models.NeighborhoodTabulationAreaShape.CDTAName
