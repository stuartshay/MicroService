name: Shapefile Deployment
env:
  DH_DOCKER_IMAGE: stuartshay/microservice-gdal
  DOCKER_IMAGE_TAG: 1.1.1-v1 ## HardCode Tag

on:
  push:
    paths:
      - 'files/Borough_Boundaries/**'
    branches:
      - master

jobs:
  extract:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.gcp_project }}
          service_account_key: ${{ secrets.GH_ACTIONS_SERVICE_ACCOUNT }}
          export_default_credentials: true

      - name: Use gcloud CLI
        run: gcloud info

      - id: upload-files
        uses: google-github-actions/upload-cloud-storage@main
        with:
          path: files/Borough_Boundaries
          destination: files-shapes

      - name: Upload raw artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Borough_Boundaries
          path: files/Borough_Boundaries

  transform:
    runs-on: ubuntu-latest
    needs: [extract]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull Docker Image
        run: docker pull ${{ env.DH_DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_TAG}}

      - name: Shapefile to GeoJSON (Run Docker Image)
        run: |
          echo "ogr2ogr files/Borough_Boundaries/nybb.shp =>  nybb.json "

      - name: Upload GeoJson artifacts
        run: |
          echo "Install ogr2ogr"

  load:
    runs-on: ubuntu-latest
    needs: [transform]
    steps:
      - name: Download artifacts
        uses: actions/upload-artifact@v3

      - name: Insert GeoJSON data
        run: |
          echo "Insert GeoJSON data"

      - name: Validate GeoJSON Inserted
        run: |
          echo "Validate GeoJson Inserted"
