name: Grafana Workflow
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  REGION: us-east4
  ARTIFACT_REGISTRY_HOST: us-east4-docker.pkg.dev
  GCP_DOCKER_IMAGE: us-east4-docker.pkg.dev/velvety-byway-327718/microservice-api/microservice-grafana
  DH_DOCKER_IMAGE: stuartshay/microservice-grafana
  DOCKER_SCRIPT_PATH: docker/grafana
  DOCKER_FILE: 'docker/grafana/Dockerfile'
  DOCKER_IMAGE_TAG: 8.2.1-v7-${{ github.sha }}
  DOCKER_IMAGE_PLATFORM: linux/amd64,linux/arm/v7
  BUILD_NUMBER: ${{ github.sha }}

on:
  push:
    paths:
    - 'docker/grafana/**' 
    - '.github/workflows/grafana.workflow.yml'
     
    branches:
    - master
    - develop
    - 'feature/**'
    - 'fix/**'

jobs:
   build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.gcp_project }}
          service_account_key: ${{ secrets.GH_ACTIONS_SERVICE_ACCOUNT }}
          export_default_credentials: true
      
      - name: Google Cloud Artifacts/Authorize Docker push
        run: gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY_HOST }}
      
      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.DOCKER_SCRIPT_PATH }}
          build-args: |
            BUILD_NUMBER=${{ env.BUILD_NUMBER }}
          file: ${{ env.DOCKER_FILE }}
          tags: ${{ env.DH_DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_TAG}}, ${{ env.GCP_DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_TAG }}
          outputs: type=docker,dest=image.tar
          cache-from: type=registry,ref=${{ env.GCP_DOCKER_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.GCP_DOCKER_IMAGE }}:buildcache,mode=max

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker
          path: image.tar

   publish:
     runs-on: ubuntu-latest
     needs: [ build ]
     steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Load images
        run: |
          docker load --input docker/image.tar

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.gcp_project }}
          service_account_key: ${{ secrets.GH_ACTIONS_SERVICE_ACCOUNT }}
          export_default_credentials: true

      - name: Google Cloud Artifacts/Authorize Docker push
        run: gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY_HOST }}

      - name: GCP Artifact Registry
        run: docker push ${{ env.GCP_DOCKER_IMAGE }} --all-tags 